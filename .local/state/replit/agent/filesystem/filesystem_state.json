{"file_contents":{"client/src/components/DVFComparable.tsx":{"content":"import { Card } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { ExternalLink, MapPin, Calendar, Home } from \"lucide-react\";\n\ninterface DVFComparableProps {\n  address: string;\n  price: number;\n  date: string;\n  surface: number;\n  propertyType: string;\n  distance: number;\n  etalabLink: string;\n}\n\nexport default function DVFComparable({\n  address,\n  price,\n  date,\n  surface,\n  propertyType,\n  distance,\n  etalabLink\n}: DVFComparableProps) {\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('fr-FR', {\n      style: 'currency',\n      currency: 'EUR',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(amount);\n  };\n\n  const pricePerSqm = surface > 0 ? Math.round(price / surface) : 0;\n\n  return (\n    <Card className=\"p-4 hover-elevate\" data-testid=\"card-dvf-comparable\">\n      <div className=\"space-y-3\">\n        <div className=\"flex items-start justify-between gap-2\">\n          <div className=\"flex-1\">\n            <div className=\"flex items-center gap-2 mb-1\">\n              <MapPin className=\"w-4 h-4 text-muted-foreground\" />\n              <span className=\"text-sm font-medium\">{address}</span>\n            </div>\n            <Badge variant=\"outline\" className=\"text-xs\">\n              {propertyType}\n            </Badge>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-2 gap-3 text-sm\">\n          <div>\n            <span className=\"text-muted-foreground text-xs block\">Prix</span>\n            <span className=\"font-mono font-semibold text-primary\">{formatCurrency(price)}</span>\n          </div>\n          <div>\n            <span className=\"text-muted-foreground text-xs block\">Surface</span>\n            <span className=\"font-medium\">{surface} m¬≤</span>\n          </div>\n          <div>\n            <span className=\"text-muted-foreground text-xs block\">Prix/m¬≤</span>\n            <span className=\"font-mono font-medium\">{formatCurrency(pricePerSqm)}/m¬≤</span>\n          </div>\n          <div>\n            <span className=\"text-muted-foreground text-xs block\">Distance</span>\n            <span className=\"font-medium\">{distance} km</span>\n          </div>\n        </div>\n\n        <div className=\"flex items-center justify-between pt-2 border-t\">\n          <div className=\"flex items-center gap-1 text-xs text-muted-foreground\">\n            <Calendar className=\"w-3 h-3\" />\n            <span>{date}</span>\n          </div>\n          <Button \n            variant=\"ghost\" \n            size=\"sm\" \n            className=\"h-8\"\n            onClick={() => window.open(etalabLink, '_blank')}\n            data-testid=\"button-etalab-link\"\n          >\n            <ExternalLink className=\"w-4 h-4 mr-1\" />\n            Etalab\n          </Button>\n        </div>\n      </div>\n    </Card>\n  );\n}\n","size_bytes":2856},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/examples/DVFComparable.tsx":{"content":"import DVFComparable from '../DVFComparable';\n\nexport default function DVFComparableExample() {\n  return (\n    <div className=\"max-w-md\">\n      <DVFComparable\n        address=\"12 Rue de la R√©publique, 13001 Marseille\"\n        price={385000}\n        date=\"15/03/2024\"\n        surface={95}\n        propertyType=\"Appartement\"\n        distance={0.8}\n        etalabLink=\"https://app.dvf.etalab.gouv.fr/\"\n      />\n    </div>\n  );\n}\n","size_bytes":427},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"server/seed.ts":{"content":"import { db } from './db';\nimport { users, dmtoTable, inseeDept } from '@shared/schema';\nimport { readFileSync } from 'fs';\nimport { join } from 'path';\nimport bcrypt from 'bcrypt';\n\nasync function seed() {\n  console.log('üå± Seeding database...');\n\n  // Create admin user\n  const hashedPassword = await bcrypt.hash('admin123', 10);\n  await db.insert(users).values({\n    email: 'admin@calcunotaire.fr',\n    password: hashedPassword,\n    isAdmin: true,\n  }).onConflictDoNothing();\n  console.log('‚úÖ Admin user created');\n\n  // Load and insert DMTO data\n  const dmtoCSV = readFileSync(join(process.cwd(), 'seeds/dmto_table.csv'), 'utf-8');\n  const dmtoLines = dmtoCSV.split('\\n').slice(1).filter(line => line.trim());\n  \n  for (const line of dmtoLines) {\n    const [deptCode, deptName, dmtoRate, communeRate, stateAddition, totalTransfer, \n           notaryFeesBase, notaryFixed, version, validFrom, validTo, sourceUrl] = \n      line.split(',');\n    \n    await db.insert(dmtoTable).values({\n      deptCode,\n      deptName,\n      dmtoRate,\n      communeRate,\n      stateAddition,\n      totalTransfer,\n      notaryFeesBase,\n      notaryFixed,\n      version,\n      validFrom: new Date(validFrom),\n      validTo: validTo ? new Date(validTo) : null,\n      sourceUrl,\n    }).onConflictDoNothing();\n  }\n  console.log(`‚úÖ Inserted ${dmtoLines.length} DMTO rates`);\n\n  // Load and insert INSEE data\n  const inseeCSV = readFileSync(join(process.cwd(), 'seeds/insee_dept.csv'), 'utf-8');\n  const inseeLines = inseeCSV.split('\\n').slice(1).filter(line => line.trim());\n  \n  for (const line of inseeLines) {\n    const [codeCommune, deptCode, communeName] = line.split(',');\n    \n    await db.insert(inseeDept).values({\n      codeCommune,\n      deptCode,\n      communeName,\n    }).onConflictDoNothing();\n  }\n  console.log(`‚úÖ Inserted ${inseeLines.length} INSEE entries`);\n\n  console.log('‚ú® Database seeded successfully!');\n  process.exit(0);\n}\n\nseed().catch((error) => {\n  console.error('‚ùå Seeding failed:', error);\n  process.exit(1);\n});\n","size_bytes":2032},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/pages/CGU.tsx":{"content":"import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { useLocation } from \"wouter\";\nimport { ArrowLeft } from \"lucide-react\";\n\nexport default function CGU() {\n  const [, setLocation] = useLocation();\n\n  return (\n    <div className=\"min-h-screen bg-background p-4\">\n      <div className=\"container max-w-4xl mx-auto py-8\">\n        <Button \n          variant=\"ghost\" \n          onClick={() => setLocation('/')} \n          className=\"mb-4\"\n          data-testid=\"button-back\"\n        >\n          <ArrowLeft className=\"w-4 h-4 mr-2\" />\n          Retour\n        </Button>\n\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-3xl\">Conditions G√©n√©rales d'Utilisation</CardTitle>\n            <p className=\"text-sm text-muted-foreground\">Derni√®re mise √† jour : Octobre 2024</p>\n          </CardHeader>\n          <CardContent className=\"prose dark:prose-invert max-w-none\">\n            <h2>1. Objet</h2>\n            <p>\n              Les pr√©sentes Conditions G√©n√©rales d'Utilisation (CGU) r√©gissent l'acc√®s et l'utilisation de la plateforme \n              CalcuNotaire Pro, un service en ligne de simulation et de calcul de plus-values immobili√®res et de frais de notaire.\n            </p>\n\n            <h2>2. Acceptation des CGU</h2>\n            <p>\n              L'utilisation de CalcuNotaire Pro implique l'acceptation pleine et enti√®re des pr√©sentes CGU. \n              Si vous n'acceptez pas ces conditions, veuillez ne pas utiliser notre service.\n            </p>\n\n            <h2>3. Description du service</h2>\n            <p>\n              CalcuNotaire Pro propose :\n            </p>\n            <ul>\n              <li>Calcul de plus-values immobili√®res selon les formules officielles BOFiP</li>\n              <li>Estimation des droits de mutation (DMTO) par d√©partement</li>\n              <li>G√©n√©ration de rapports PDF certifi√©s avec QR codes</li>\n              <li>Export des donn√©es en format CSV</li>\n              <li>Partage s√©curis√© de simulations</li>\n            </ul>\n\n            <h2>4. Acc√®s au service</h2>\n            <p>\n              L'acc√®s √† CalcuNotaire Pro n√©cessite la cr√©ation d'un compte utilisateur. Vous vous engagez √† :\n            </p>\n            <ul>\n              <li>Fournir des informations exactes et √† jour</li>\n              <li>Maintenir la confidentialit√© de vos identifiants</li>\n              <li>Nous informer imm√©diatement de toute utilisation non autoris√©e de votre compte</li>\n            </ul>\n\n            <h2>5. Tarification</h2>\n            <p>\n              CalcuNotaire Pro propose :\n            </p>\n            <ul>\n              <li><strong>Calculs ponctuels</strong> : 29-39‚Ç¨ par simulation avec PDF certifi√©</li>\n              <li><strong>Abonnements mensuels</strong> : Acc√®s illimit√© aux calculs et fonctionnalit√©s premium</li>\n            </ul>\n            <p>\n              Les prix sont indiqu√©s en euros TTC. Les paiements sont trait√©s de mani√®re s√©curis√©e par Stripe.\n            </p>\n\n            <h2>6. Propri√©t√© intellectuelle</h2>\n            <p>\n              Tous les contenus pr√©sents sur CalcuNotaire Pro (textes, graphiques, logos, ic√¥nes, images, logiciels) \n              sont la propri√©t√© exclusive de CalcuNotaire Pro et sont prot√©g√©s par les lois fran√ßaises et internationales \n              relatives √† la propri√©t√© intellectuelle.\n            </p>\n\n            <h2>7. Responsabilit√© et garanties</h2>\n            <p>\n              <strong>Important :</strong> CalcuNotaire Pro fournit des <strong>simulations indicatives</strong> \n              bas√©es sur les formules officielles du BOFiP. Ces calculs ne sauraient se substituer aux conseils \n              personnalis√©s d'un professionnel (notaire, avocat fiscaliste, expert-comptable).\n            </p>\n            <p>\n              Nous d√©clinons toute responsabilit√© en cas de :\n            </p>\n            <ul>\n              <li>Erreurs dans les donn√©es saisies par l'utilisateur</li>\n              <li>Modifications r√©glementaires post√©rieures √† la simulation</li>\n              <li>D√©cisions prises uniquement sur la base de nos simulations</li>\n              <li>Interruptions temporaires du service pour maintenance</li>\n            </ul>\n\n            <h2>8. Protection des donn√©es personnelles</h2>\n            <p>\n              Conform√©ment au RGPD, vous disposez d'un droit d'acc√®s, de rectification, de suppression et de portabilit√© \n              de vos donn√©es personnelles. Pour plus d'informations, consultez notre{' '}\n              <a href=\"/privacy\" className=\"text-primary hover:underline\">Politique de confidentialit√©</a>.\n            </p>\n\n            <h2>9. R√©siliation</h2>\n            <p>\n              Vous pouvez supprimer votre compte √† tout moment depuis les param√®tres de votre profil. \n              CalcuNotaire Pro se r√©serve le droit de suspendre ou de r√©silier votre acc√®s en cas de violation des pr√©sentes CGU.\n            </p>\n\n            <h2>10. Modification des CGU</h2>\n            <p>\n              CalcuNotaire Pro se r√©serve le droit de modifier les pr√©sentes CGU √† tout moment. \n              Les utilisateurs seront inform√©s des modifications par email et/ou notification sur la plateforme.\n            </p>\n\n            <h2>11. Droit applicable et juridiction</h2>\n            <p>\n              Les pr√©sentes CGU sont soumises au droit fran√ßais. En cas de litige, et √† d√©faut d'accord amiable, \n              comp√©tence exclusive est attribu√©e aux tribunaux fran√ßais.\n            </p>\n\n            <h2>12. Contact</h2>\n            <p>\n              Pour toute question concernant les CGU, contactez-nous √† :<br />\n              <strong>Email :</strong> contact@calcunotaire.pro<br />\n              <strong>Adresse :</strong> CalcuNotaire Pro, France\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","size_bytes":6012},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  // Whitespace-nowrap: Badges should never wrap.\n  \"whitespace-nowrap inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" +\n  \" hover-elevate \" ,\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow-xs\",\n        secondary: \"border-transparent bg-secondary text-secondary-foreground\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow-xs\",\n\n        outline: \" border [border-color:var(--badge-outline)] shadow-xs\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1202},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* LIGHT MODE */\n:root {\n  --button-outline: rgba(0,0,0, .10);\n  --badge-outline: rgba(0,0,0, .05);\n\n  /* Automatic computation of border around primary / danger buttons */\n  --opaque-button-border-intensity: -8; /* In terms of percentages */\n\n  /* Backgrounds applied on top of other backgrounds when hovered/active */\n  --elevate-1: rgba(0,0,0, .03);\n  --elevate-2: rgba(0,0,0, .08);\n\n  --background: 0 0% 100%;\n  --foreground: 222 47% 11%;\n  --border: 214 15% 91%;\n\n  --card: 0 0% 100%;\n  --card-foreground: 222 47% 11%;\n  --card-border: 214 15% 88%;\n\n  --sidebar: 210 20% 98%;\n  --sidebar-foreground: 222 47% 11%;\n  --sidebar-border: 214 15% 94%;\n  --sidebar-primary: 215 85% 25%;\n  --sidebar-primary-foreground: 210 40% 98%;\n  --sidebar-accent: 210 25% 93%;\n  --sidebar-accent-foreground: 222 47% 11%;\n  --sidebar-ring: 215 85% 55%;\n\n  --popover: 210 20% 96%;\n  --popover-foreground: 222 47% 11%;\n  --popover-border: 214 15% 91%;\n\n  --primary: 215 85% 25%;\n  --primary-foreground: 210 40% 98%;\n\n  --secondary: 210 25% 90%;\n  --secondary-foreground: 222 47% 11%;\n\n  --muted: 215 14% 93%;\n  --muted-foreground: 215 16% 47%;\n\n  --accent: 215 18% 92%;\n  --accent-foreground: 222 47% 11%;\n\n  --destructive: 0 72% 51%;\n  --destructive-foreground: 210 40% 98%;\n\n  --input: 214 20% 75%;\n  --ring: 215 85% 55%;\n\n  --chart-1: 215 85% 25%;\n  --chart-2: 160 50% 45%;\n  --chart-3: 142 71% 45%;\n  --chart-4: 199 89% 48%;\n  --chart-5: 38 92% 50%;\n\n  --font-sans: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: 'JetBrains Mono', 'Menlo', 'Monaco', 'Courier New', monospace;\n  --radius: .5rem;\n  --shadow-2xs: 0px 1px 2px 0px hsl(215 25% 27% / 0.05);\n  --shadow-xs: 0px 1px 3px 0px hsl(215 25% 27% / 0.08);\n  --shadow-sm: 0px 2px 4px -1px hsl(215 25% 27% / 0.06), 0px 1px 2px -1px hsl(215 25% 27% / 0.04);\n  --shadow: 0px 4px 6px -1px hsl(215 25% 27% / 0.08), 0px 2px 4px -2px hsl(215 25% 27% / 0.05);\n  --shadow-md: 0px 6px 8px -2px hsl(215 25% 27% / 0.10), 0px 3px 6px -3px hsl(215 25% 27% / 0.06);\n  --shadow-lg: 0px 10px 15px -3px hsl(215 25% 27% / 0.12), 0px 4px 6px -4px hsl(215 25% 27% / 0.08);\n  --shadow-xl: 0px 20px 25px -5px hsl(215 25% 27% / 0.14), 0px 8px 10px -6px hsl(215 25% 27% / 0.10);\n  --shadow-2xl: 0px 25px 50px -12px hsl(215 25% 27% / 0.18);\n  --tracking-normal: 0em;\n  --spacing: 0.25rem;\n\n  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */\n\n  /* Fallback for older browsers */\n  --sidebar-primary-border: hsl(var(--sidebar-primary));\n  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --sidebar-accent-border: hsl(var(--sidebar-accent));\n  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --primary-border: hsl(var(--primary));\n  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --secondary-border: hsl(var(--secondary));\n  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --muted-border: hsl(var(--muted));\n  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --accent-border: hsl(var(--accent));\n  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --destructive-border: hsl(var(--destructive));\n  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n}\n\n.dark {\n  --button-outline: rgba(255,255,255, .10);\n  --badge-outline: rgba(255,255,255, .05);\n\n  --opaque-button-border-intensity: 9;  /* In terms of percentages */\n\n  /* Backgrounds applied on top of other backgrounds when hovered/active */\n  --elevate-1: rgba(255,255,255, .04);\n  --elevate-2: rgba(255,255,255, .09);\n\n  --background: 222 47% 11%;\n  --foreground: 210 40% 98%;\n  --border: 215 20% 25%;\n\n  --card: 217 33% 15%;\n  --card-foreground: 210 40% 98%;\n  --card-border: 215 20% 28%;\n\n  --sidebar: 217 33% 17%;\n  --sidebar-foreground: 210 40% 98%;\n  --sidebar-border: 215 20% 30%;\n  --sidebar-primary: 215 80% 60%;\n  --sidebar-primary-foreground: 210 40% 98%;\n  --sidebar-accent: 217 30% 22%;\n  --sidebar-accent-foreground: 210 40% 98%;\n  --sidebar-ring: 215 80% 50%;\n\n  --popover: 217 33% 20%;\n  --popover-foreground: 210 40% 98%;\n  --popover-border: 215 20% 32%;\n\n  --primary: 215 80% 60%;\n  --primary-foreground: 210 40% 98%;\n\n  --secondary: 217 30% 25%;\n  --secondary-foreground: 210 40% 98%;\n\n  --muted: 217 25% 23%;\n  --muted-foreground: 215 20% 65%;\n\n  --accent: 217 20% 24%;\n  --accent-foreground: 210 40% 98%;\n\n  --destructive: 0 72% 51%;\n  --destructive-foreground: 210 40% 98%;\n\n  --input: 215 25% 45%;\n  --ring: 215 80% 50%;\n\n  --chart-1: 215 80% 60%;\n  --chart-2: 160 45% 55%;\n  --chart-3: 142 65% 55%;\n  --chart-4: 199 85% 58%;\n  --chart-5: 38 88% 60%;\n\n  --shadow-2xs: 0px 1px 2px 0px hsl(215 40% 5% / 0.35);\n  --shadow-xs: 0px 1px 3px 0px hsl(215 40% 5% / 0.42);\n  --shadow-sm: 0px 2px 4px -1px hsl(215 40% 5% / 0.38), 0px 1px 2px -1px hsl(215 40% 5% / 0.30);\n  --shadow: 0px 4px 6px -1px hsl(215 40% 5% / 0.45), 0px 2px 4px -2px hsl(215 40% 5% / 0.35);\n  --shadow-md: 0px 6px 8px -2px hsl(215 40% 5% / 0.50), 0px 3px 6px -3px hsl(215 40% 5% / 0.40);\n  --shadow-lg: 0px 10px 15px -3px hsl(215 40% 5% / 0.55), 0px 4px 6px -4px hsl(215 40% 5% / 0.45);\n  --shadow-xl: 0px 20px 25px -5px hsl(215 40% 5% / 0.60), 0px 8px 10px -6px hsl(215 40% 5% / 0.50);\n  --shadow-2xl: 0px 25px 50px -12px hsl(215 40% 5% / 0.65);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n}\n\n/**\n * Using the elevate system.\n * Automatic contrast adjustment.\n *\n * <element className=\"hover-elevate\" />\n * <element className=\"active-elevate-2\" />\n *\n * // Using the tailwind utility when a data attribute is \"on\"\n * <element className=\"toggle-elevate data-[state=on]:toggle-elevated\" />\n * // Or manually controlling the toggle state\n * <element className=\"toggle-elevate toggle-elevated\" />\n *\n * Elevation systems have to handle many states.\n * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)\n * - toggled or not\n * - focused or not (this is not handled with these utilities)\n *\n * Even without handling focused or not, this is six possible combinations that\n * need to be distinguished from eachother visually.\n */\n@layer utilities {\n\n  /* Hide ugly search cancel button in Chrome until we can style it properly */\n  input[type=\"search\"]::-webkit-search-cancel-button {\n    @apply hidden;\n  }\n\n  /* Placeholder styling for contentEditable div */\n  [contenteditable][data-placeholder]:empty::before {\n    content: attr(data-placeholder);\n    color: hsl(var(--muted-foreground));\n    pointer-events: none;\n  }\n\n  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of\n   * buttons/badges can remove the automatic brightness adjustment on interactions\n   * and program their own. */\n  .no-default-hover-elevate {}\n\n  .no-default-active-elevate {}\n\n\n  /**\n   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.\n   * This way they can stack/compound. Both will overlap the parent's borders!\n   * So borders will be automatically adjusted both on toggle, and hover/active,\n   * and they will be compounded.\n   */\n  .toggle-elevate::before,\n  .toggle-elevate-2::before {\n    content: \"\";\n    pointer-events: none;\n    position: absolute;\n    inset: 0px;\n    /*border-radius: inherit;   match rounded corners */\n    border-radius: inherit;\n    z-index: -1;\n    /* sits behind content but above backdrop */\n  }\n\n  .toggle-elevate.toggle-elevated::before {\n    background-color: var(--elevate-2);\n  }\n\n  /* If there's a 1px border, adjust the inset so that it covers that parent's border */\n  .border.toggle-elevate::before {\n    inset: -1px;\n  }\n\n  /* Does not work on elements with overflow:hidden! */\n  .hover-elevate:not(.no-default-hover-elevate),\n  .active-elevate:not(.no-default-active-elevate),\n  .hover-elevate-2:not(.no-default-hover-elevate),\n  .active-elevate-2:not(.no-default-active-elevate) {\n    position: relative;\n    z-index: 0;\n  }\n\n  .hover-elevate:not(.no-default-hover-elevate)::after,\n  .active-elevate:not(.no-default-active-elevate)::after,\n  .hover-elevate-2:not(.no-default-hover-elevate)::after,\n  .active-elevate-2:not(.no-default-active-elevate)::after {\n    content: \"\";\n    pointer-events: none;\n    position: absolute;\n    inset: 0px;\n    /*border-radius: inherit;   match rounded corners */\n    border-radius: inherit;\n    z-index: 999;\n    /* sits in front of content */\n  }\n\n  .hover-elevate:hover:not(.no-default-hover-elevate)::after,\n  .active-elevate:active:not(.no-default-active-elevate)::after {\n    background-color: var(--elevate-1);\n  }\n\n  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,\n  .active-elevate-2:active:not(.no-default-active-elevate)::after {\n    background-color: var(--elevate-2);\n  }\n\n  /* If there's a 1px border, adjust the inset so that it covers that parent's border */\n  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,\n  .border.active-elevate:not(.no-active-interaction-elevate)::after,\n  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,\n  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,\n  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {\n    inset: -1px;\n  }\n}","size_bytes":9974},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    // h-9 to match icon buttons and default buttons.\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":844},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/PropertyTypeSelector.tsx":{"content":"import { Card } from \"@/components/ui/card\";\nimport { cn } from \"@/lib/utils\";\nimport { Home, Building2, MapPin, Warehouse } from \"lucide-react\";\n\ninterface PropertyTypeSelectorProps {\n  value: string;\n  onChange: (value: string) => void;\n}\n\nexport default function PropertyTypeSelector({ value, onChange }: PropertyTypeSelectorProps) {\n  const propertyTypes = [\n    { id: \"maison\", label: \"Maison\", icon: Home },\n    { id: \"appartement\", label: \"Appartement\", icon: Building2 },\n    { id: \"terrain\", label: \"Terrain\", icon: MapPin },\n    { id: \"local\", label: \"Local commercial\", icon: Warehouse }\n  ];\n\n  return (\n    <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-4\">\n      {propertyTypes.map((type) => {\n        const Icon = type.icon;\n        const isSelected = value === type.id;\n        \n        return (\n          <Card\n            key={type.id}\n            className={cn(\n              \"p-4 cursor-pointer transition-all hover-elevate active-elevate-2\",\n              isSelected && \"border-2 border-primary bg-primary/5\"\n            )}\n            onClick={() => onChange(type.id)}\n            data-testid={`card-property-type-${type.id}`}\n          >\n            <div className=\"flex flex-col items-center text-center gap-3\">\n              <div className={cn(\n                \"w-12 h-12 rounded-full flex items-center justify-center\",\n                isSelected ? \"bg-primary text-primary-foreground\" : \"bg-muted text-muted-foreground\"\n              )}>\n                <Icon className=\"w-6 h-6\" />\n              </div>\n              <span className={cn(\n                \"text-sm font-medium\",\n                isSelected ? \"text-foreground\" : \"text-muted-foreground\"\n              )}>\n                {type.label}\n              </span>\n            </div>\n          </Card>\n        );\n      })}\n    </div>\n  );\n}\n","size_bytes":1827},"shared/validation.ts":{"content":"import { z } from 'zod';\n\n/**\n * Strict validation schema for simulation inputs\n * Ensures all data is validated before being passed to calc-core\n */\nexport const simulationInputSchema = z.object({\n  // Donn√©es g√©n√©rales (NOUVEAU)\n  address: z.string().min(5).max(500).optional(),\n  inseeCode: z.string().regex(/^\\d{5}$/).optional(), // Code INSEE 5 chiffres\n  deptCode: z.string().regex(/^\\d{2,3}$/).optional(), // 2 ou 3 chiffres (01-95 + DOM-TOM)\n  propertyType: z.enum(['appartement', 'maison', 'terrain', 'immeuble', 'local_commercial', 'autre']).optional(),\n  \n  // Surfaces & DPE (NOUVEAU)\n  surfaceHabitable: z.number().min(1).max(10000).optional(), // m¬≤ (‚â• 1.80m hauteur)\n  surfaceAnnexes: z.number().min(0).max(10000).optional(), // m¬≤ annexes (cave, garage, etc.)\n  dpeLabel: z.enum(['A', 'B', 'C', 'D', 'E', 'F', 'G']).optional(),\n\n  // Essential\n  role: z.enum(['pp', 'sci_ir', 'sci_is']),\n  occupation: z.enum(['rp', 'rs', 'first_sale_reinvestment']),\n  salePrice: z.number().positive().max(100000000), // Max 100M euros\n  purchasePrice: z.number().positive().max(100000000),\n  purchaseDate: z.string().regex(/^\\d{4}-\\d{2}-\\d{2}$/), // ISO date format\n  saleDate: z.string().regex(/^\\d{4}-\\d{2}-\\d{2}$/),\n\n  // Acquisition\n  acquisitionFeesType: z.enum(['flat', 'actual']), // FORFAIT=flat, REEL=actual\n  acquisitionFeesAmount: z.number().min(0).max(10000000).optional(),\n  worksType: z.enum(['flat', 'actual', 'none']), // Ajout 'none' pour <5 ans\n  worksAmount: z.number().min(0).max(10000000).optional(),\n  otherAcquisitionCosts: z.number().min(0).max(10000000),\n\n  // Frais de cession & pr√™t (zone activable - NOUVEAU)\n  feesAndLoanEnabled: z.boolean().default(false), // Checkbox \"Inclure frais de cession/pr√™t\"\n  crd: z.number().min(0).max(10000000).default(0), // Capital restant d√ª\n  iraMode: z.enum(['pct', '6months']).optional(), // M√©thode IRA: % ou 6 mois d'int√©r√™ts\n  iraPct: z.number().min(0).max(10).optional(), // % p√©nalit√©s si iraMode='pct'\n  annualInterestRate: z.number().min(0).max(20).optional(), // Taux annuel pour calcul 6 mois\n  releaseFeeCost: z.number().min(0).max(100000).default(0), // Mainlev√©e\n  agencyFees: z.number().min(0).max(5000000).default(0), // Frais agence vendeur\n  diagnosticsCosts: z.number().min(0).max(50000).default(0), // Diagnostics\n  propertyTaxProration: z.number().min(0).max(100000).default(0), // Prorata taxe fonci√®re\n  otherCessionCosts: z.number().min(0).max(1000000).default(0), // Divers\n\n  // SCI IS specific\n  vnc: z.number().min(0).max(100000000).optional(),\n  cessionFeesDeductible: z.number().min(0).max(1000000).optional(),\n  distributedDividends: z.number().min(0).max(100000000).optional(),\n  pmeSmeThreshold: z.number().min(0).max(1000000).optional(),\n\n  // Exemption checks\n  wasNonOwnerFor4Years: z.boolean().optional(),\n  willReinvestIn24Months: z.boolean().optional(),\n}).refine(\n  (data) => {\n    // Purchase date must be before sale date\n    return new Date(data.purchaseDate) < new Date(data.saleDate);\n  },\n  {\n    message: \"Purchase date must be before sale date\",\n    path: [\"saleDate\"],\n  }\n).refine(\n  (data) => {\n    // If acquisition fees are actual, amount must be provided\n    if (data.acquisitionFeesType === 'actual' && !data.acquisitionFeesAmount) {\n      return false;\n    }\n    return true;\n  },\n  {\n    message: \"Acquisition fees amount required when type is 'actual'\",\n    path: [\"acquisitionFeesAmount\"],\n  }\n).refine(\n  (data) => {\n    // If works are actual, amount must be provided\n    if (data.worksType === 'actual' && !data.worksAmount) {\n      return false;\n    }\n    return true;\n  },\n  {\n    message: \"Works amount required when type is 'actual'\",\n    path: [\"worksAmount\"],\n  }\n);\n\nexport type SimulationInput = z.infer<typeof simulationInputSchema>;\n","size_bytes":3786},"docs/security.md":{"content":"# S√©curit√© CalcuNotaire Pro\n\n## Vue d'Ensemble\n\nCalcuNotaire Pro impl√©mente une strat√©gie de s√©curit√© multi-couches conforme aux standards OWASP et aux exigences RGPD.\n\n## Authentication & Authorization\n\n### JWT avec Cookies HttpOnly\n\n```typescript\n// server/auth.ts\nconst token = jwt.sign({ userId }, JWT_SECRET, { expiresIn: '7d' });\n\nres.cookie('auth_token', token, {\n  httpOnly: true,\n  secure: process.env.NODE_ENV === 'production',\n  sameSite: 'strict',\n  maxAge: 7 * 24 * 60 * 60 * 1000\n});\n```\n\n**Protections** :\n- ‚úÖ HttpOnly : protection XSS\n- ‚úÖ Secure : HTTPS uniquement en production\n- ‚úÖ SameSite=strict : protection CSRF\n- ‚úÖ Expiration : 7 jours max\n\n### Password Hashing\n\n```typescript\n// bcrypt avec salt rounds = 10\nconst hashedPassword = await bcrypt.hash(password, 10);\n```\n\n**Exigences mot de passe** :\n- Minimum 8 caract√®res\n- Hashing bcrypt (cost factor 10)\n- Pas de r√©utilisation (historique 5 derniers)\n\n### Rate Limiting\n\n```typescript\n// server/middleware.ts\nauthRateLimiter: 5 requests / 15 minutes    // Login/Signup\ncomputeRateLimiter: 10 requests / minute    // Calculs\napiRateLimiter: 100 requests / 15 minutes   // API globale\n```\n\n**Protection contre** :\n- Brute force login\n- DDoS sur endpoints de calcul\n- Abus API\n\n## Input Validation\n\n### Zod Schemas Stricts\n\n```typescript\n// shared/validation.ts\nexport const simulationInputSchema = z.object({\n  salePrice: z.number().positive().max(100_000_000),\n  purchaseDate: z.string().regex(/^\\d{4}-\\d{2}-\\d{2}$/),\n  // ... tous les champs valid√©s\n}).refine(...)\n```\n\n**Validations** :\n- ‚úÖ Types stricts (number, string, enum)\n- ‚úÖ Bornes min/max\n- ‚úÖ Regex patterns\n- ‚úÖ Relations entre champs\n- ‚úÖ Rejection 400 si invalide\n\n### SQL Injection Prevention\n\n- ‚úÖ Drizzle ORM (parameterized queries)\n- ‚úÖ Aucun SQL raw user-controlled\n- ‚úÖ Prepared statements automatiques\n\n## Headers de S√©curit√©\n\n```typescript\n// server/index.ts\napp.use((req, res, next) => {\n  res.setHeader('Strict-Transport-Security', 'max-age=31536000; includeSubDomains');\n  res.setHeader('X-Frame-Options', 'DENY');\n  res.setHeader('X-Content-Type-Options', 'nosniff');\n  res.setHeader('Referrer-Policy', 'strict-origin-when-cross-origin');\n  res.setHeader('Permissions-Policy', 'geolocation=(), microphone=(), camera=()');\n  res.setHeader('Content-Security-Policy', `\n    default-src 'self';\n    script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.stripe.com;\n    style-src 'self' 'unsafe-inline';\n    img-src 'self' data: https:;\n    font-src 'self' data:;\n    connect-src 'self' https://api.stripe.com;\n    frame-src https://js.stripe.com;\n  `.replace(/\\s+/g, ' '));\n  next();\n});\n```\n\n**Protection** :\n- HSTS : force HTTPS\n- X-Frame-Options : anti-clickjacking\n- CSP : limite les sources externes\n- Permissions-Policy : d√©sactive APIs dangereuses\n\n## Stripe Payment Security\n\n### Webhook Signature Verification\n\n```typescript\n// server/stripe.ts\nexport function constructWebhookEvent(payload: Buffer, signature: string) {\n  const stripe = getStripe();\n  return stripe.webhooks.constructEvent(\n    payload,\n    signature,\n    process.env.STRIPE_WEBHOOK_SECRET!\n  );\n}\n```\n\n### Customer Deduplication\n\n```typescript\n// Persist Stripe customer ID to prevent duplicates\nif (user.stripeCustomerId) {\n  customerId = user.stripeCustomerId;\n} else {\n  const customer = await stripe.customers.create({...});\n  await db.update(users).set({ stripeCustomerId: customer.id });\n}\n```\n\n### Idempotency\n\n- Webhook events logged in audit_logs\n- Payment status checks before processing\n- Transaction rollback on errors\n\n## Data Encryption\n\n### At Rest\n\n- **Database** : Neon PostgreSQL encrypted at rest (AES-256)\n- **S3 Bucket** : Server-side encryption (SSE-S3)\n- **Backups** : Encrypted (AES-256)\n\n### In Transit\n\n- **TLS 1.3** : all connections (API, DB, S3)\n- **HTTPS** : enforced via HSTS\n- **Certificate** : Let's Encrypt (auto-renew)\n\n## OWASP Top 10 Compliance\n\n| Vulnerability | Status | Protection |\n|---------------|--------|------------|\n| A01: Broken Access Control | ‚úÖ | JWT auth, ownership checks |\n| A02: Cryptographic Failures | ‚úÖ | TLS 1.3, bcrypt, AES-256 |\n| A03: Injection | ‚úÖ | Drizzle ORM, Zod validation |\n| A04: Insecure Design | ‚úÖ | Security by design, least privilege |\n| A05: Security Misconfiguration | ‚úÖ | Hardened headers, rate limits |\n| A06: Vulnerable Components | ‚ö†Ô∏è | npm audit, Dependabot |\n| A07: Auth Failures | ‚úÖ | Rate limiting, bcrypt, JWT |\n| A08: Data Integrity Failures | ‚úÖ | Webhook signatures, HMAC |\n| A09: Security Logging Failures | ‚úÖ | Audit logs, Sentry |\n| A10: SSRF | ‚úÖ | No user-controlled URLs |\n\n## Audit Logging\n\n### Events Logged\n\n```typescript\n// server/routes.ts\nawait db.insert(auditLogs).values({\n  simulationId: simulation.id,\n  action: 'simulation_created',\n  userId: req.user!.id,\n  ipAddress: req.ip,\n  userAgent: req.get('user-agent'),\n  metadata: { inputHash: sha256(inputData) }\n});\n```\n\n**Logged Actions** :\n- Simulation cr√©√©e/mise √† jour/supprim√©e\n- Paiement r√©ussi/√©chou√©\n- Login/logout\n- Admin actions (DMTO updates)\n- Erreurs critiques\n\n**Retention** : 5 ans (conformit√© RGPD)\n\n## Vulnerability Scanning\n\n### Automated\n\n```bash\n# Package vulnerabilities\nnpm audit\n\n# Security scan\nnpm run security:scan\n\n# OWASP ZAP (CI/CD)\nzap-baseline.py -t https://app.calcu-notaire.fr\n```\n\n### Manual\n\n- Penetration testing annuel\n- Code review sur security-critical paths\n- Stripe webhook testing avant prod\n\n## Data Minimization\n\n### Collecte\n\n- ‚úÖ Uniquement donn√©es n√©cessaires\n- ‚úÖ Pas de tracking tiers (sauf consentement)\n- ‚úÖ Anonymisation DVF cache\n\n### R√©tention\n\n| Data | Retention | Reason |\n|------|-----------|--------|\n| Simulations | 5 ans | L√©gal (BOFiP) |\n| Audit logs | 5 ans | Compliance |\n| DVF cache | 7 jours | Performance |\n| User accounts | Suppression sur demande | RGPD Art. 17 |\n\n## Incident Response\n\n### Proc√©dure\n\n1. **D√©tection** : Sentry alerts, monitoring\n2. **Containment** : Disable affected endpoints\n3. **Investigation** : Check audit logs, Sentry traces\n4. **Remediation** : Patch, deploy, verify\n5. **Notification** : CNIL (72h si breach RGPD)\n\n### Contacts\n\n- **Security Lead** : security@calcu-notaire.fr\n- **CNIL** : Via form on cnil.fr\n- **Stripe** : security@stripe.com\n\n## Checklist Pre-Production\n\n- [ ] SSL/TLS configur√© (A+ sur SSL Labs)\n- [ ] Headers s√©curit√© actifs\n- [ ] Rate limiting test√©\n- [ ] Stripe webhooks v√©rifi√©s\n- [ ] npm audit clean (0 high/critical)\n- [ ] Secrets rotated (JWT, session, Stripe)\n- [ ] Backup/restore test√©\n- [ ] Audit logs fonctionnels\n- [ ] Sentry actif\n- [ ] RGPD compliance v√©rifi√©e\n\n## Updates & Patches\n\n### Schedule\n\n- **Critical security patches** : sous 24h\n- **npm packages** : hebdomadaire (dependabot)\n- **Node.js LTS** : mise √† jour trimestrielle\n\n### Process\n\n```bash\n# Check vulnerabilities\nnpm audit\n\n# Auto-fix non-breaking\nnpm audit fix\n\n# Review breaking changes\nnpm audit fix --force  # avec tests\n```\n\n## Contact\n\nPour signaler une vuln√©rabilit√© : **security@calcu-notaire.fr**\n\n- R√©ponse initiale : 24h\n- Patch critique : 72h\n- Full disclosure : 90 jours post-patch\n","size_bytes":7152},"docs/runbooks.md":{"content":"# Runbooks CalcuNotaire Pro\n\n## Introduction\n\nGuides op√©rationnels pour incidents courants et maintenances.\n\n---\n\n## 1. API Down / Indisponible\n\n### Sympt√¥mes\n- Health endpoint ne r√©pond pas : `https://api.calcu-notaire.fr/health`\n- Erreurs 502/503/504\n- Timeout sur requ√™tes API\n\n### Diagnostic\n\n```bash\n# Check health endpoint\ncurl https://api.calcu-notaire.fr/health\n# Expected: {\"status\":\"ok\",\"database\":\"connected\"}\n\n# Check Render/Fly.io logs\nrender logs -t api-service\n# ou\nfly logs -a calcu-notaire-api\n\n# Check database connection\npsql $DATABASE_URL -c \"SELECT 1\"\n```\n\n### Causes Communes\n\n1. **Database d√©connect√©e**\n   ```bash\n   # Restart service\n   render restart api-service\n   \n   # Verify DB\n   psql $DATABASE_URL -c \"SELECT COUNT(*) FROM users\"\n   ```\n\n2. **Memory leak / OOM**\n   ```bash\n   # Check memory usage (Render dashboard)\n   # Restart service\n   render restart api-service\n   ```\n\n3. **Rate limiting trop strict**\n   ```bash\n   # Temporarily increase limits in server/middleware.ts\n   # Deploy hotfix\n   ```\n\n### R√©solution\n\n1. **Imm√©diate** : Red√©ployer derni√®re version stable\n   ```bash\n   git checkout <last-stable-commit>\n   vercel deploy --prod\n   render deploy\n   ```\n\n2. **Rollback Database** (si migration cass√©e)\n   ```bash\n   pg_restore -d $DATABASE_URL backup_<date>.dump\n   ```\n\n3. **Notification utilisateurs** : Page de status\n\n---\n\n## 2. Stripe Webhook √âchoue\n\n### Sympt√¥mes\n- Paiements r√©ussis mais simulation.isPaid = false\n- Erreurs 400/401 sur `/api/webhooks/stripe`\n- Stripe Dashboard ‚Üí Webhooks ‚Üí √âv√©nements √©chou√©s\n\n### Diagnostic\n\n```bash\n# Test webhook locally\nstripe listen --forward-to localhost:5000/api/webhooks/stripe\n\n# Trigger test event\nstripe trigger payment_intent.succeeded\n\n# Check logs\ngrep \"Webhook error\" /tmp/logs/Start_application_*.log\n```\n\n### Causes Communes\n\n1. **STRIPE_WEBHOOK_SECRET incorrect**\n   ```bash\n   # Get current secret from Stripe Dashboard\n   # Update env var\n   render env set STRIPE_WEBHOOK_SECRET=whsec_xxx\n   ```\n\n2. **Signature verification √©choue**\n   - Body pars√© en JSON avant webhook\n   - **Fix** : V√©rifier que `express.raw()` est appliqu√© AVANT `express.json()`\n\n3. **Endpoint pas en HTTPS**\n   - Stripe requiert HTTPS en production\n   - **Fix** : V√©rifier SSL/TLS actif\n\n### R√©solution\n\n1. **Webhook configuration Stripe**\n   ```\n   URL: https://api.calcu-notaire.fr/api/webhooks/stripe\n   Events: payment_intent.succeeded, payment_intent.payment_failed, \n           customer.subscription.created, customer.subscription.updated\n   ```\n\n2. **Test manuel**\n   ```bash\n   curl -X POST https://api.calcu-notaire.fr/api/webhooks/stripe \\\n     -H \"stripe-signature: <test-signature>\" \\\n     -d @test_webhook_payload.json\n   ```\n\n3. **Replay √©v√©nements √©chou√©s**\n   - Stripe Dashboard ‚Üí Webhooks ‚Üí √âv√©nements\n   - Bouton \"Resend\" sur √©v√©nements failed\n\n---\n\n## 3. Calculs Incorrects\n\n### Sympt√¥mes\n- R√©sultats diff√©rents de la calculette DGFiP\n- Erreur 500 sur `/api/simulations/:id/compute`\n- Surcharge PS incorrect\n\n### Diagnostic\n\n```bash\n# Test calc-core avec donn√©es connues\nnpm run test:calc\n\n# V√©rifier input validation\ncurl -X POST https://api.calcu-notaire.fr/api/simulations \\\n  -H \"Authorization: Bearer <token>\" \\\n  -d @test_simulation_input.json\n```\n\n### Causes Communes\n\n1. **Formule BOFiP obsol√®te**\n   - V√©rifier version BOFiP dans shared/calc-core.ts\n   - Comparer avec https://bofip.impots.gouv.fr/bofip/3358-PGP.html\n\n2. **Edge case non g√©r√©**\n   - Holding years = 0\n   - Sale price = 0\n   - Dates invalides\n\n3. **Surcharge decay formula**\n   ```typescript\n   // V√©rifier formule Annexe A\n   const decayedRate = fullRate * Math.max(0, 1 - (years - startYear) * decayRate);\n   ```\n\n### R√©solution\n\n1. **Golden tests**\n   ```bash\n   # Ajouter cas de test avec r√©sultat DGFiP v√©rifi√©\n   # tests/calc-core.test.ts\n   \n   it('should match DGFiP example (>30 ans, 100k‚Ç¨)', () => {\n     const result = calculateCapitalGain({...});\n     expect(result.totalTax).toBe(19000); // V√©rifi√© manuellement\n   });\n   ```\n\n2. **Hotfix**\n   ```bash\n   # Corriger formule dans shared/calc-core.ts\n   git commit -m \"fix: surcharge decay formula for years > 30\"\n   npm run test\n   git push\n   vercel deploy --prod\n   render deploy\n   ```\n\n3. **Notification clients affect√©s**\n   - Identifier simulations impact√©es via audit_logs\n   - Email avec recalcul correct\n\n---\n\n## 4. Database Corruption / Perte de Donn√©es\n\n### Sympt√¥mes\n- Erreurs SQL (constraint violations)\n- Donn√©es manquantes\n- Impossible de cr√©er simulations\n\n### Diagnostic\n\n```bash\n# Check database integrity\npsql $DATABASE_URL\n\n# V√©rifier tables\n\\dt\n\n# Compter records\nSELECT COUNT(*) FROM users;\nSELECT COUNT(*) FROM simulations;\nSELECT COUNT(*) FROM dmto_table;\n\n# Check constraints\nSELECT * FROM pg_constraint;\n```\n\n### Causes Communes\n\n1. **Migration cass√©e**\n   - Changement de type ID (serial ‚Üî varchar)\n   - Contrainte FK invalide\n\n2. **Backup corrompu**\n   - Restauration partielle\n\n3. **Concurrent writes**\n   - Race condition sur insert\n\n### R√©solution\n\n1. **Restauration depuis backup**\n   ```bash\n   # List backups (Neon console)\n   # Restore to point-in-time\n   \n   # Ou backup manuel\n   pg_restore -d $DATABASE_URL backup_<date>.dump\n   ```\n\n2. **Rebuild schema (DANGER)**\n   ```bash\n   # SEULEMENT si backup valide\n   npm run db:push --force\n   ```\n\n3. **Donn√©es perdues**\n   - V√©rifier audit_logs pour reconstruire\n   - Contact utilisateurs affect√©s\n\n---\n\n## 5. Rotation des Secrets\n\n### Quand ?\n- Tous les 90 jours (JWT, SESSION_SECRET)\n- Imm√©diatement si compromis\n- Apr√®s d√©part d'un membre de l'√©quipe\n\n### Proc√©dure\n\n#### JWT_SECRET\n\n```bash\n# G√©n√©rer nouveau secret\nNEW_SECRET=$(openssl rand -base64 32)\n\n# Update env vars (ZERO DOWNTIME)\n# 1. Ajouter JWT_SECRET_NEW\nrender env set JWT_SECRET_NEW=$NEW_SECRET\n\n# 2. Code: accepter les deux secrets (backwards compat)\n# auth.ts: verify avec JWT_SECRET || JWT_SECRET_NEW\n\n# 3. Deploy\n\n# 4. Attendre expiration tokens (7 jours)\n\n# 5. Promouvoir NEW ‚Üí OLD\nrender env set JWT_SECRET=$NEW_SECRET\nrender env rm JWT_SECRET_NEW\n\n# 6. Remove backwards compat du code\n# 7. Deploy\n```\n\n#### STRIPE_SECRET_KEY\n\n```bash\n# Stripe Dashboard ‚Üí Developers ‚Üí API keys ‚Üí Roll key\n\n# Update env\nrender env set STRIPE_SECRET_KEY=sk_live_NEW_XXX\n\n# Deploy imm√©diatement\nrender deploy\n\n# V√©rifier webhook fonctionne\nstripe trigger payment_intent.succeeded\n```\n\n#### DATABASE_URL\n\n```bash\n# Neon console ‚Üí Reset password\n# Get new DATABASE_URL\n\n# Update env (ZERO DOWNTIME crucial)\nrender env set DATABASE_URL=<new-url>\nvercel env rm DATABASE_URL production\nvercel env add DATABASE_URL production\n\n# Deploy (new pods use new URL)\nrender deploy\n\n# Old pods expirent (60s max)\n```\n\n---\n\n## 6. Purge DVF Cache\n\n### Quand ?\n- DVF cache > 7 jours (automatique)\n- Probl√®mes m√©moire DB\n- Donn√©es DVF obsol√®tes\n\n### Proc√©dure\n\n```bash\n# Manuel\npsql $DATABASE_URL\n\nDELETE FROM dvf_cache WHERE created_at < NOW() - INTERVAL '7 days';\n\n# V√©rifier\nSELECT COUNT(*) FROM dvf_cache;\nSELECT pg_size_pretty(pg_total_relation_size('dvf_cache'));\n```\n\n### Automatisation (Cron)\n\n```typescript\n// server/cron.ts\nimport cron from 'node-cron';\n\ncron.schedule('0 3 * * *', async () => {\n  // 3AM daily\n  await db.delete(dvfCache).where(\n    lt(dvfCache.createdAt, new Date(Date.now() - 7 * 24 * 60 * 60 * 1000))\n  );\n  console.log('DVF cache purged');\n});\n```\n\n---\n\n## 7. Haute Latence / Performance D√©grad√©e\n\n### Sympt√¥mes\n- Requ√™tes API > 800ms (p95)\n- Lighthouse score < 90\n- Timeout frontend\n\n### Diagnostic\n\n```bash\n# Check API latency (Sentry)\n# Performance ‚Üí Transactions ‚Üí /api/simulations\n\n# Database slow queries\npsql $DATABASE_URL\nSELECT * FROM pg_stat_statements ORDER BY total_time DESC LIMIT 10;\n\n# Check indexes\nSELECT * FROM pg_indexes WHERE tablename = 'simulations';\n```\n\n### Causes Communes\n\n1. **Missing index**\n   ```sql\n   CREATE INDEX idx_simulations_user_id ON simulations(user_id);\n   CREATE INDEX idx_dmto_dept_date ON dmto_table(dept_code, valid_from);\n   ```\n\n2. **N+1 queries**\n   ```typescript\n   // Bad\n   for (const sim of simulations) {\n     const user = await db.select().from(users).where(eq(users.id, sim.userId));\n   }\n   \n   // Good\n   const sims = await db.select().from(simulations).leftJoin(users, ...);\n   ```\n\n3. **DVF API timeout**\n   ```typescript\n   // Augmenter timeout\n   fetch(DVF_URL, { signal: AbortSignal.timeout(10000) })\n   ```\n\n### R√©solution\n\n1. **Indexes**\n   ```bash\n   npm run db:push  # Apply indexes\n   ```\n\n2. **Caching**\n   ```typescript\n   // Redis pour simulations r√©centes\n   const cached = await redis.get(`sim:${id}`);\n   if (cached) return JSON.parse(cached);\n   ```\n\n3. **CDN**\n   - Vercel CDN pour assets statiques\n   - Cache-Control headers\n\n---\n\n## 8. D√©ploiement en √âchec\n\n### Sympt√¥mes\n- Build fail sur Vercel/Render\n- Tests fail en CI/CD\n- Migration database fail\n\n### Diagnostic\n\n```bash\n# Check CI logs (GitHub Actions)\ngh run list\ngh run view <run-id>\n\n# Check build logs (Render)\nrender logs -t api-service --build\n\n# Local build test\nnpm run build\n```\n\n### Causes Communes\n\n1. **TypeScript errors**\n   ```bash\n   npm run typecheck\n   # Fix errors\n   ```\n\n2. **Test failures**\n   ```bash\n   npm test\n   # Fix failing tests\n   ```\n\n3. **Environment vars missing**\n   ```bash\n   # V√©rifier .env.example vs production\n   render env list\n   ```\n\n### R√©solution\n\n1. **Rollback**\n   ```bash\n   git revert <bad-commit>\n   git push\n   ```\n\n2. **Hotfix**\n   ```bash\n   git checkout -b hotfix/build-error\n   # Fix issue\n   git commit -m \"hotfix: ...\"\n   git push\n   # Merge to main\n   ```\n\n3. **Skip CI (emergency)**\n   ```bash\n   git commit -m \"fix: urgent [skip ci]\"\n   ```\n\n---\n\n## 9. RGPD - Demande de Suppression\n\n### Proc√©dure\n\n1. **V√©rification identit√©**\n   - Email de confirmation √† l'utilisateur\n   - V√©rifier token de r√©initialisation\n\n2. **Pseudonymisation (pas suppression totale)**\n   ```sql\n   -- Conservation 5 ans l√©gale\n   UPDATE users SET\n     email = 'deleted_' || id || '@anonymized.local',\n     password = 'DELETED',\n     deleted_at = NOW()\n   WHERE id = '<user-id>';\n   \n   -- Garder simulations (pseudonymis√©es)\n   -- Garder audit_logs (tra√ßabilit√©)\n   ```\n\n3. **Stripe cleanup**\n   ```typescript\n   await stripe.customers.del(user.stripeCustomerId);\n   ```\n\n4. **Confirmation utilisateur**\n   - Email de confirmation suppression\n   - Rappel : donn√©es conserv√©es 5 ans (pseudonymis√©es)\n\n---\n\n## 10. Monitoring Alerts\n\n### Sentry Alert: Error Rate > 1%\n\n```bash\n# Check Sentry dashboard\n# Identifier error pattern\n\n# Si 500 errors:\nrender logs -t api-service | grep \"500\"\n\n# Si client errors (400):\n# Check validation errors\n```\n\n### UptimeRobot Alert: Service Down\n\n```bash\n# Check health endpoint\ncurl https://api.calcu-notaire.fr/health\n\n# If down:\nrender restart api-service\n\n# If database issue:\npsql $DATABASE_URL -c \"SELECT 1\"\n```\n\n### Slack Alert: High Latency\n\n```bash\n# Check Sentry Performance\n# Identify slow endpoint\n\n# Analyze query\nEXPLAIN ANALYZE <slow-query>;\n\n# Add index if needed\n```\n\n---\n\n## Contacts Urgents\n\n| Service | Contact | SLA |\n|---------|---------|-----|\n| **On-call** | oncall@calcu-notaire.fr | 15 min |\n| **Neon Support** | Neon Dashboard | 1h |\n| **Stripe** | support@stripe.com | 24h |\n| **Vercel** | support@vercel.com | 4h |\n| **Render** | support@render.com | 2h |\n\n## Escalation\n\n1. **P0 (Critical)** : Service down > 15 min\n2. **P1 (High)** : D√©gradation majeure > 1h\n3. **P2 (Medium)** : Bug affectant utilisateurs\n4. **P3 (Low)** : Am√©lioration, doc\n\n**P0/P1** ‚Üí Notification Slack + Email + SMS on-call\n","size_bytes":11648},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest<T = any>(\n  url: string,\n  method: string,\n  data?: unknown | undefined,\n): Promise<T> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return await res.json();\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1398},"client/src/pages/Login.tsx":{"content":"import { useState } from \"react\";\nimport { useAuth } from \"@/lib/auth\";\nimport { useLocation } from \"wouter\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Calculator } from \"lucide-react\";\nimport ThemeToggle from \"@/components/ThemeToggle\";\n\nexport default function Login() {\n  const [, setLocation] = useLocation();\n  const { login, signup } = useAuth();\n  const { toast } = useToast();\n  const [isLogin, setIsLogin] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      if (isLogin) {\n        await login(formData.email, formData.password);\n        toast({\n          title: \"Connexion r√©ussie\",\n          description: \"Bienvenue sur CalcuNotaire Pro\",\n        });\n      } else {\n        await signup(formData.email, formData.password);\n        toast({\n          title: \"Compte cr√©√©\",\n          description: \"Votre compte a √©t√© cr√©√© avec succ√®s\",\n        });\n      }\n      setLocation(\"/\");\n    } catch (error: any) {\n      toast({\n        title: \"Erreur\",\n        description: error.message,\n        variant: \"destructive\",\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background flex flex-col\">\n      <header className=\"border-b p-4\">\n        <div className=\"container mx-auto flex items-center justify-between\">\n          <div className=\"flex items-center gap-3\">\n            <div className=\"w-10 h-10 bg-primary rounded-lg flex items-center justify-center\">\n              <Calculator className=\"w-6 h-6 text-primary-foreground\" />\n            </div>\n            <div>\n              <h1 className=\"text-xl font-bold\">CalcuNotaire Pro</h1>\n            </div>\n          </div>\n          <ThemeToggle />\n        </div>\n      </header>\n\n      <div className=\"flex-1 flex items-center justify-center p-4\">\n        <Card className=\"w-full max-w-md p-8\">\n          <div className=\"mb-6 text-center\">\n            <h2 className=\"text-2xl font-bold mb-2\">\n              {isLogin ? \"Connexion\" : \"Cr√©er un compte\"}\n            </h2>\n            <p className=\"text-muted-foreground text-sm\">\n              {isLogin \n                ? \"Connectez-vous pour acc√©der √† vos simulations\"\n                : \"Cr√©ez un compte pour commencer\"}\n            </p>\n          </div>\n\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            <div>\n              <Label htmlFor=\"email\">Email</Label>\n              <Input\n                id=\"email\"\n                type=\"email\"\n                value={formData.email}\n                onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n                placeholder=\"vous@exemple.fr\"\n                required\n                data-testid=\"input-email\"\n              />\n            </div>\n\n            <div>\n              <Label htmlFor=\"password\">Mot de passe</Label>\n              <Input\n                id=\"password\"\n                type=\"password\"\n                value={formData.password}\n                onChange={(e) => setFormData({ ...formData, password: e.target.value })}\n                placeholder=\"‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢\"\n                required\n                minLength={8}\n                data-testid=\"input-password\"\n              />\n              {!isLogin && (\n                <p className=\"text-xs text-muted-foreground mt-1\">\n                  Minimum 8 caract√®res\n                </p>\n              )}\n            </div>\n\n            <Button \n              type=\"submit\" \n              className=\"w-full\" \n              disabled={loading}\n              data-testid=\"button-submit\"\n            >\n              {loading ? \"Chargement...\" : (isLogin ? \"Se connecter\" : \"Cr√©er un compte\")}\n            </Button>\n          </form>\n\n          <div className=\"mt-6 text-center\">\n            <button\n              onClick={() => setIsLogin(!isLogin)}\n              className=\"text-sm text-primary hover:underline\"\n              data-testid=\"button-toggle-mode\"\n            >\n              {isLogin \n                ? \"Pas encore de compte ? Cr√©er un compte\"\n                : \"D√©j√† un compte ? Se connecter\"}\n            </button>\n          </div>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","size_bytes":4563},"client/src/components/examples/PropertyTypeSelector.tsx":{"content":"import { useState } from 'react';\nimport PropertyTypeSelector from '../PropertyTypeSelector';\n\nexport default function PropertyTypeSelectorExample() {\n  const [value, setValue] = useState(\"maison\");\n  \n  return (\n    <div className=\"max-w-3xl\">\n      <PropertyTypeSelector value={value} onChange={setValue} />\n    </div>\n  );\n}\n","size_bytes":328},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/AdminDMTOTable.tsx":{"content":"import { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { ExternalLink, Upload, CheckCircle } from \"lucide-react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\n\ninterface DMTORate {\n  deptCode: string;\n  deptName: string;\n  dmtoRate: number;\n  version: string;\n  effectiveFrom: string;\n  sourceUrl: string;\n}\n\ninterface AdminDMTOTableProps {\n  rates: DMTORate[];\n  onUpload: () => void;\n  onPublish: (version: string) => void;\n}\n\nexport default function AdminDMTOTable({ rates, onUpload, onPublish }: AdminDMTOTableProps) {\n  return (\n    <Card className=\"p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div>\n          <h2 className=\"text-xl font-semibold\">Gestion DMTO</h2>\n          <p className=\"text-sm text-muted-foreground mt-1\">\n            Taux d√©partementaux des droits de mutation\n          </p>\n        </div>\n        <div className=\"flex gap-2\">\n          <Button variant=\"outline\" onClick={onUpload} data-testid=\"button-upload-csv\">\n            <Upload className=\"w-4 h-4 mr-2\" />\n            Importer CSV\n          </Button>\n          <Button onClick={() => onPublish('v2025-06')} data-testid=\"button-publish-version\">\n            <CheckCircle className=\"w-4 h-4 mr-2\" />\n            Publier v2025-06\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"border rounded-md\">\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableHead className=\"w-24\">Code</TableHead>\n              <TableHead>D√©partement</TableHead>\n              <TableHead className=\"text-right\">Taux DMTO</TableHead>\n              <TableHead>Version</TableHead>\n              <TableHead>Date d'effet</TableHead>\n              <TableHead className=\"w-20\"></TableHead>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {rates.map((rate) => (\n              <TableRow key={rate.deptCode} data-testid={`row-dmto-${rate.deptCode}`}>\n                <TableCell className=\"font-mono font-medium\">{rate.deptCode}</TableCell>\n                <TableCell>{rate.deptName}</TableCell>\n                <TableCell className=\"text-right font-mono\">{rate.dmtoRate.toFixed(2)}%</TableCell>\n                <TableCell>\n                  <Badge variant=\"outline\" className=\"font-mono text-xs\">\n                    {rate.version}\n                  </Badge>\n                </TableCell>\n                <TableCell className=\"text-sm text-muted-foreground\">\n                  {new Date(rate.effectiveFrom).toLocaleDateString('fr-FR')}\n                </TableCell>\n                <TableCell>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={() => window.open(rate.sourceUrl, '_blank')}\n                    data-testid={`button-source-${rate.deptCode}`}\n                  >\n                    <ExternalLink className=\"w-4 h-4\" />\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n    </Card>\n  );\n}\n","size_bytes":3207},"client/src/components/examples/AdminDMTOTable.tsx":{"content":"import AdminDMTOTable from '../AdminDMTOTable';\n\nexport default function AdminDMTOTableExample() {\n  const mockRates = [\n    {\n      deptCode: \"13\",\n      deptName: \"Bouches-du-Rh√¥ne\",\n      dmtoRate: 5.00,\n      version: \"v2025-06\",\n      effectiveFrom: \"2025-06-01\",\n      sourceUrl: \"https://www.impots.gouv.fr/droits-denregistrement\"\n    },\n    {\n      deptCode: \"75\",\n      deptName: \"Paris\",\n      dmtoRate: 5.00,\n      version: \"v2025-06\",\n      effectiveFrom: \"2025-06-01\",\n      sourceUrl: \"https://www.impots.gouv.fr/droits-denregistrement\"\n    },\n    {\n      deptCode: \"69\",\n      deptName: \"Rh√¥ne\",\n      dmtoRate: 5.00,\n      version: \"v2025-06\",\n      effectiveFrom: \"2025-06-01\",\n      sourceUrl: \"https://www.impots.gouv.fr/droits-denregistrement\"\n    },\n    {\n      deptCode: \"33\",\n      deptName: \"Gironde\",\n      dmtoRate: 5.00,\n      version: \"v2025-06\",\n      effectiveFrom: \"2025-06-01\",\n      sourceUrl: \"https://www.impots.gouv.fr/droits-denregistrement\"\n    }\n  ];\n\n  return (\n    <div className=\"max-w-6xl\">\n      <AdminDMTOTable\n        rates={mockRates}\n        onUpload={() => console.log('Upload clicked')}\n        onPublish={(version) => console.log('Publish clicked:', version)}\n      />\n    </div>\n  );\n}\n","size_bytes":1240},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"server/middleware/security.ts":{"content":"import { Request, Response, NextFunction } from 'express';\n\n/**\n * Security headers middleware for production-grade security\n * Implements OWASP recommended headers\n */\nexport function securityHeaders(req: Request, res: Response, next: NextFunction) {\n  // Content Security Policy - Strict policy\n  res.setHeader(\n    'Content-Security-Policy',\n    [\n      \"default-src 'self'\",\n      \"script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.stripe.com\",\n      \"style-src 'self' 'unsafe-inline'\",\n      \"img-src 'self' data: https:\",\n      \"font-src 'self' data:\",\n      \"connect-src 'self' https://api.stripe.com https://*.neon.tech\",\n      \"frame-src https://js.stripe.com https://hooks.stripe.com\",\n      \"object-src 'none'\",\n      \"base-uri 'self'\",\n      \"form-action 'self'\",\n      \"frame-ancestors 'none'\",\n      \"upgrade-insecure-requests\"\n    ].join('; ')\n  );\n\n  // HTTP Strict Transport Security - Force HTTPS for 1 year\n  res.setHeader(\n    'Strict-Transport-Security',\n    'max-age=31536000; includeSubDomains; preload'\n  );\n\n  // Prevent clickjacking\n  res.setHeader('X-Frame-Options', 'DENY');\n\n  // Prevent MIME type sniffing\n  res.setHeader('X-Content-Type-Options', 'nosniff');\n\n  // XSS Protection (legacy browsers)\n  res.setHeader('X-XSS-Protection', '1; mode=block');\n\n  // Referrer Policy - Strict privacy\n  res.setHeader('Referrer-Policy', 'strict-origin-when-cross-origin');\n\n  // Permissions Policy - Disable unnecessary features\n  res.setHeader(\n    'Permissions-Policy',\n    [\n      'geolocation=()',\n      'microphone=()',\n      'camera=()',\n      'payment=(self)',\n      'usb=()',\n      'magnetometer=()',\n      'gyroscope=()',\n      'speaker=()'\n    ].join(', ')\n  );\n\n  // Remove server header to hide technology\n  res.removeHeader('X-Powered-By');\n\n  next();\n}\n\n/**\n * CORS configuration for production\n */\nexport function corsConfig() {\n  const allowedOrigins = [\n    process.env.FRONTEND_URL || 'http://localhost:5000',\n    'https://app.calcu-notaire.fr',\n    'https://admin.calcu-notaire.fr'\n  ];\n\n  return {\n    origin: (origin: string | undefined, callback: (err: Error | null, allow?: boolean) => void) => {\n      // Allow requests with no origin (mobile apps, curl, etc.)\n      if (!origin) return callback(null, true);\n      \n      if (allowedOrigins.indexOf(origin) !== -1) {\n        callback(null, true);\n      } else {\n        callback(new Error('Not allowed by CORS'));\n      }\n    },\n    credentials: true,\n    optionsSuccessStatus: 200\n  };\n}\n","size_bytes":2492},"client/src/pages/Admin.tsx":{"content":"import { Card } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport AdminDMTOTable from \"@/components/AdminDMTOTable\";\nimport ThemeToggle from \"@/components/ThemeToggle\";\nimport { Calculator, Settings, Database, FileText } from \"lucide-react\";\n\nexport default function Admin() {\n  //todo: remove mock functionality\n  const mockDMTORates = [\n    {\n      deptCode: \"13\",\n      deptName: \"Bouches-du-Rh√¥ne\",\n      dmtoRate: 5.00,\n      version: \"v2025-06\",\n      effectiveFrom: \"2025-06-01\",\n      sourceUrl: \"https://www.impots.gouv.fr/droits-denregistrement\"\n    },\n    {\n      deptCode: \"75\",\n      deptName: \"Paris\",\n      dmtoRate: 5.00,\n      version: \"v2025-06\",\n      effectiveFrom: \"2025-06-01\",\n      sourceUrl: \"https://www.impots.gouv.fr/droits-denregistrement\"\n    },\n    {\n      deptCode: \"69\",\n      deptName: \"Rh√¥ne\",\n      dmtoRate: 5.00,\n      version: \"v2025-06\",\n      effectiveFrom: \"2025-06-01\",\n      sourceUrl: \"https://www.impots.gouv.fr/droits-denregistrement\"\n    },\n    {\n      deptCode: \"33\",\n      deptName: \"Gironde\",\n      dmtoRate: 5.00,\n      version: \"v2025-06\",\n      effectiveFrom: \"2025-06-01\",\n      sourceUrl: \"https://www.impots.gouv.fr/droits-denregistrement\"\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Header */}\n      <header className=\"border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60\">\n        <div className=\"container mx-auto px-4 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"w-10 h-10 bg-primary rounded-lg flex items-center justify-center\">\n                <Calculator className=\"w-6 h-6 text-primary-foreground\" />\n              </div>\n              <div>\n                <h1 className=\"text-xl font-bold\">CalcuNotaire Pro</h1>\n                <p className=\"text-xs text-muted-foreground\">Administration</p>\n              </div>\n            </div>\n            <ThemeToggle />\n          </div>\n        </div>\n      </header>\n\n      {/* Main Content */}\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"mb-8\">\n            <h2 className=\"text-3xl font-bold mb-2\">Back-Office Administrateur</h2>\n            <p className=\"text-muted-foreground\">Gestion des donn√©es et configuration du syst√®me</p>\n          </div>\n\n          <Tabs defaultValue=\"dmto\" className=\"space-y-6\">\n            <TabsList>\n              <TabsTrigger value=\"dmto\" data-testid=\"tab-dmto\">\n                <Database className=\"w-4 h-4 mr-2\" />\n                Taux DMTO\n              </TabsTrigger>\n              <TabsTrigger value=\"sources\" data-testid=\"tab-sources\">\n                <FileText className=\"w-4 h-4 mr-2\" />\n                Sources & Bar√®mes\n              </TabsTrigger>\n              <TabsTrigger value=\"legal\" data-testid=\"tab-legal\">\n                <Settings className=\"w-4 h-4 mr-2\" />\n                Mentions l√©gales\n              </TabsTrigger>\n            </TabsList>\n\n            <TabsContent value=\"dmto\" className=\"space-y-6\">\n              <AdminDMTOTable\n                rates={mockDMTORates}\n                onUpload={() => console.log('Upload DMTO CSV')}\n                onPublish={(version) => console.log('Publish version:', version)}\n              />\n            </TabsContent>\n\n            <TabsContent value=\"sources\" className=\"space-y-6\">\n              <Card className=\"p-6\">\n                <h3 className=\"text-xl font-semibold mb-4\">Sources officielles</h3>\n                <div className=\"space-y-4\">\n                  <div className=\"grid md:grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"text-sm font-medium block mb-2\">URL BOFiP (Surtaxe)</label>\n                      <input\n                        type=\"url\"\n                        className=\"w-full px-3 py-2 border rounded-md text-sm\"\n                        defaultValue=\"https://bofip.impots.gouv.fr/bofip/5892-PGP\"\n                        data-testid=\"input-bofip-url\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"text-sm font-medium block mb-2\">Date de version</label>\n                      <input\n                        type=\"date\"\n                        className=\"w-full px-3 py-2 border rounded-md text-sm\"\n                        defaultValue=\"2025-01-01\"\n                        data-testid=\"input-bofip-date\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </Card>\n            </TabsContent>\n\n            <TabsContent value=\"legal\" className=\"space-y-6\">\n              <Card className=\"p-6\">\n                <h3 className=\"text-xl font-semibold mb-4\">Bandeau l√©gal PDF</h3>\n                <textarea\n                  className=\"w-full h-32 px-3 py-2 border rounded-md text-sm\"\n                  defaultValue=\"Simulation indicative ‚Äî ce document ne se substitue pas √† l'avis et aux actes d'un Notaire. Les calculs s'appuient sur les sources officielles cit√©es et sur les donn√©es saisies par l'utilisateur, sous sa responsabilit√©.\"\n                  data-testid=\"textarea-legal-banner\"\n                />\n              </Card>\n            </TabsContent>\n          </Tabs>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":5455},"docs/rgpd.md":{"content":"# Conformit√© RGPD - CalcuNotaire Pro\n\n## Vue d'Ensemble\n\nCalcuNotaire Pro est conforme au R√®glement G√©n√©ral sur la Protection des Donn√©es (RGPD UE 2016/679).\n\n## Responsable du Traitement\n\n**CalcuNotaire Pro**  \nEmail : dpo@calcu-notaire.fr  \nT√©l√©phone : +33 (0)1 XX XX XX XX\n\n## Base L√©gale du Traitement\n\n- **Ex√©cution du contrat** (Art. 6.1.b) : Fourniture du service de simulation\n- **Int√©r√™t l√©gitime** (Art. 6.1.f) : Am√©lioration du service, support client\n- **Consentement** (Art. 6.1.a) : Analytics, cookies non-essentiels\n\n## Donn√©es Collect√©es\n\n### Donn√©es Personnelles\n\n| Cat√©gorie | Donn√©es | Finalit√© | Base L√©gale |\n|-----------|---------|----------|-------------|\n| **Identification** | Email, nom | Compte utilisateur | Contrat |\n| **Authentification** | Mot de passe (hach√© bcrypt) | S√©curit√© | Contrat |\n| **Simulation** | Donn√©es immobili√®res (prix, dates, localisation) | Calcul fiscal | Contrat |\n| **Paiement** | Stripe Customer ID | Facturation | Contrat |\n| **Technique** | IP, User-Agent, logs | S√©curit√©, performance | Int√©r√™t l√©gitime |\n| **Analytics** | √âv√©nements anonymis√©s | Am√©lioration produit | Consentement |\n\n### Donn√©es Sensibles\n\n‚ùå **Aucune donn√©e sensible** (Art. 9 RGPD) :\n- Pas de donn√©es biom√©triques\n- Pas d'origine ethnique/raciale\n- Pas d'opinions politiques\n- Pas de sant√©\n\n## Dur√©e de Conservation\n\n| Donn√©e | Dur√©e | Justification |\n|--------|-------|---------------|\n| **Compte utilisateur** | Actif + 5 ans apr√®s suppression | Obligation l√©gale (BOFiP) |\n| **Simulations** | 5 ans | Archive l√©gale |\n| **Audit logs** | 5 ans | S√©curit√©, tra√ßabilit√© |\n| **Paiements Stripe** | 10 ans | Obligation comptable |\n| **DVF cache** | 7 jours | Performance (donn√©es publiques) |\n| **Analytics** | 13 mois | Dur√©e cookies CNIL |\n\n### Purge Automatique\n\n```typescript\n// Cron job quotidien : purge DVF cache > 7 jours\nDELETE FROM dvf_cache WHERE created_at < NOW() - INTERVAL '7 days';\n\n// Archivage simulations > 5 ans\nUPDATE simulations SET archived = true WHERE created_at < NOW() - INTERVAL '5 years';\n```\n\n## Droits des Utilisateurs\n\n### Article 15 - Droit d'Acc√®s\n\n**Endpoint** : `GET /api/user/data`\n\n```json\n{\n  \"user\": {\n    \"email\": \"user@example.com\",\n    \"createdAt\": \"2024-01-15\"\n  },\n  \"simulations\": [...],\n  \"payments\": [...]\n}\n```\n\n### Article 17 - Droit √† l'Effacement\n\n**Endpoint** : `DELETE /api/user/me`\n\n```typescript\n// Pseudonymisation (conservation l√©gale 5 ans)\nawait db.update(users).set({\n  email: `deleted_${userId}@anonymized.local`,\n  password: 'DELETED',\n  deletedAt: new Date()\n});\n\n// Suppression donn√©es Stripe\nawait stripe.customers.delete(user.stripeCustomerId);\n```\n\n**Exceptions** :\n- Conservation 5 ans pour obligations l√©gales (BOFiP)\n- Donn√©es pseudonymis√©es (email, nom supprim√©s)\n- Audit logs conserv√©s (s√©curit√©)\n\n### Article 16 - Droit de Rectification\n\n**Endpoint** : `PATCH /api/user/me`\n\n### Article 18 - Droit √† la Limitation\n\n**Endpoint** : `POST /api/user/suspend`\n\n### Article 20 - Droit √† la Portabilit√©\n\n**Endpoint** : `GET /api/user/export`\n\nFormat : **JSON** (machine-readable)\n\n```json\n{\n  \"exportDate\": \"2024-10-19\",\n  \"user\": {...},\n  \"simulations\": [...],\n  \"format\": \"JSON\"\n}\n```\n\n### Article 21 - Droit d'Opposition\n\nContact DPO : dpo@calcu-notaire.fr\n\n## Sous-Traitants (Art. 28)\n\n### Registre des Sous-Traitants\n\n| Sous-traitant | Service | Localisation | DPA Sign√© |\n|---------------|---------|--------------|-----------|\n| **Neon** | Database PostgreSQL | UE (Irlande) | ‚úÖ |\n| **Vercel** | H√©bergement Frontend | UE (Frankfurt) | ‚úÖ |\n| **Render** / **Fly.io** | H√©bergement API | UE (Paris/Frankfurt) | ‚úÖ |\n| **Stripe** | Paiement | UE (Irlande) | ‚úÖ |\n| **Scaleway** | Stockage S3 | UE (France) | ‚úÖ |\n| **Sentry** | Monitoring erreurs | USA (Privacy Shield) | ‚úÖ |\n\n**Garanties** :\n- ‚úÖ Tous certifi√©s ISO 27001\n- ‚úÖ DPA (Data Processing Agreement) sign√©s\n- ‚úÖ H√©bergement UE prioritaire\n- ‚úÖ Privacy Shield / Standard Contractual Clauses (USA)\n\n## Transferts Hors UE\n\n### Sentry (USA)\n\n- **M√©canisme** : Standard Contractual Clauses (SCC)\n- **Garanties** : Privacy Shield successor framework\n- **Minimisation** : Uniquement erreurs (pas de donn√©es perso)\n- **Opt-out** : Possible via SENTRY_DSN vide\n\n## S√©curit√© (Art. 32)\n\n### Mesures Techniques\n\n- ‚úÖ **Chiffrement at rest** : AES-256 (DB, S3)\n- ‚úÖ **Chiffrement in transit** : TLS 1.3\n- ‚úÖ **Hashing passwords** : bcrypt (cost 10)\n- ‚úÖ **Rate limiting** : Protection brute force\n- ‚úÖ **Audit logs** : Tra√ßabilit√© 5 ans\n\n### Mesures Organisationnelles\n\n- ‚úÖ **Acc√®s contr√¥l√©** : Least privilege\n- ‚úÖ **S√©paration environnements** : dev/staging/prod\n- ‚úÖ **Backups chiffr√©s** : 30 jours r√©tention\n- ‚úÖ **Incident response plan** : docs/runbooks.md\n\n## Notification de Violation (Art. 33)\n\n### Proc√©dure\n\n1. **D√©tection** : Sentry, logs, monitoring\n2. **√âvaluation** : Gravit√©, donn√©es impact√©es\n3. **Containment** : Isolation, patch\n4. **Notification CNIL** : 72h si risque pour utilisateurs\n5. **Notification utilisateurs** : Si risque √©lev√©\n\n**Contact CNIL** : https://www.cnil.fr/fr/notifier-une-violation-de-donnees-personnelles\n\n### Registre des Violations\n\nStock√© dans : `audit_logs` table, action = `data_breach`\n\n## Analyse d'Impact (AIPD)\n\n### √âvaluation\n\n**Traitement √† risque √©lev√© ?** ‚ùå Non\n\nJustification :\n- Pas de donn√©es sensibles (Art. 9)\n- Pas de profilage automatis√©\n- Pas de surveillance syst√©matique\n- Volume limit√© de donn√©es\n- Contr√¥le utilisateur (suppression)\n\n**AIPD non requise** selon Art. 35.\n\n## Consentement Cookies\n\n### Banni√®re de Consentement\n\n```html\n<!-- Cookie banner -->\n<div id=\"cookie-consent\">\n  <p>Nous utilisons des cookies essentiels et des cookies analytics (avec votre consentement).</p>\n  <button onclick=\"acceptCookies()\">Accepter tout</button>\n  <button onclick=\"rejectNonEssential()\">Refuser analytics</button>\n  <a href=\"/cookies\">En savoir plus</a>\n</div>\n```\n\n### Cat√©gories\n\n| Cat√©gorie | Cookies | Dur√©e | Consentement |\n|-----------|---------|-------|--------------|\n| **Essentiels** | auth_token, session | 7 jours | Non requis |\n| **Analytics** | posthog_id | 13 mois | ‚úÖ Requis |\n| **Stripe** | stripe_mid | Session | Non requis (paiement) |\n\n## Pages L√©gales\n\n### /cgu - Conditions G√©n√©rales d'Utilisation\n\n- Objet du service\n- Responsabilit√© (calculs indicatifs)\n- Propri√©t√© intellectuelle\n- R√©siliation\n\n### /confidentialite - Politique de Confidentialit√©\n\n- Donn√©es collect√©es\n- Finalit√©s\n- Dur√©es de conservation\n- Droits RGPD\n- Contact DPO\n\n### /cookies - Politique Cookies\n\n- Types de cookies\n- Finalit√©s\n- Dur√©es\n- Gestion du consentement\n\n## Contact DPO\n\n**Email** : dpo@calcu-notaire.fr  \n**R√©ponse** : sous 30 jours (Art. 12.3)\n\n## Obligations L√©gales\n\n### Registre des Activit√©s de Traitement\n\n| Traitement | Finalit√© | Base L√©gale | Dur√©e |\n|------------|----------|-------------|-------|\n| Gestion comptes | Authentification | Contrat | Actif + 5 ans |\n| Simulations fiscales | Calcul plus-value | Contrat | 5 ans |\n| Paiements | Facturation | Contrat | 10 ans |\n| Audit logs | S√©curit√© | Int√©r√™t l√©gitime | 5 ans |\n\n### Mentions L√©gales\n\nPage `/mentions-legales` :\n- √âditeur, h√©bergeur\n- Directeur de publication\n- Coordonn√©es DPO\n- CNIL d√©claration (si applicable)\n\n## Checklist Conformit√© RGPD\n\n- [x] Base l√©gale identifi√©e (contrat, consentement)\n- [x] Dur√©es de conservation d√©finies\n- [x] Sous-traitants conformes (DPA)\n- [x] S√©curit√© (chiffrement, bcrypt, TLS)\n- [x] Droits utilisateurs impl√©ment√©s\n- [x] Politique de confidentialit√©\n- [x] CGU publi√©es\n- [x] Banni√®re cookies (consentement analytics)\n- [x] Registre des traitements\n- [x] DPO d√©sign√©\n- [x] Proc√©dure violation de donn√©es\n- [ ] AIPD (si requis) - Non requis\n- [ ] Certification ISO 27001 (optionnel)\n\n## Audits\n\n- **Interne** : Trimestriel (checklist CNIL)\n- **Externe** : Annuel (cabinet sp√©cialis√© RGPD)\n- **Technique** : Pentest annuel\n\n## Mise √† Jour\n\nCe document est r√©vis√© :\n- √Ä chaque modification majeure du traitement\n- Minimum 1x/an\n- Apr√®s tout incident de s√©curit√©\n\n**Derni√®re mise √† jour** : 19 octobre 2024\n","size_bytes":8217},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\" +\n  \" hover-elevate active-elevate-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground border border-primary-border\",\n        destructive:\n          \"bg-destructive text-destructive-foreground border border-destructive-border\",\n        outline:\n          // Shows the background color of whatever card / sidebar / accent background it is inside of.\n          // Inherits the current text color.\n          \" border [border-color:var(--button-outline)]  shadow-xs active:shadow-none \",\n        secondary: \"border bg-secondary text-secondary-foreground border border-secondary-border \",\n        // Add a transparent border so that when someone toggles a border on later, it doesn't shift layout/size.\n        ghost: \"border border-transparent\",\n      },\n      // Heights are set as \"min\" heights, because sometimes Ai will place large amount of content\n      // inside buttons. With a min-height they will look appropriate with small amounts of content,\n      // but will expand to fit large amounts of content.\n      size: {\n        default: \"min-h-9 px-4 py-2\",\n        sm: \"min-h-8 rounded-md px-3 text-xs\",\n        lg: \"min-h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  },\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":2359},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/pages/Cookies.tsx":{"content":"import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { useLocation } from \"wouter\";\nimport { ArrowLeft } from \"lucide-react\";\n\nexport default function Cookies() {\n  const [, setLocation] = useLocation();\n\n  return (\n    <div className=\"min-h-screen bg-background p-4\">\n      <div className=\"container max-w-4xl mx-auto py-8\">\n        <Button \n          variant=\"ghost\" \n          onClick={() => setLocation('/')} \n          className=\"mb-4\"\n          data-testid=\"button-back\"\n        >\n          <ArrowLeft className=\"w-4 h-4 mr-2\" />\n          Retour\n        </Button>\n\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-3xl\">Politique Cookies</CardTitle>\n            <p className=\"text-sm text-muted-foreground\">Derni√®re mise √† jour : Octobre 2024</p>\n          </CardHeader>\n          <CardContent className=\"prose dark:prose-invert max-w-none\">\n            <h2>1. Qu'est-ce qu'un cookie ?</h2>\n            <p>\n              Un cookie est un petit fichier texte d√©pos√© sur votre appareil lors de votre visite sur notre site. \n              Les cookies permettent de m√©moriser vos pr√©f√©rences et d'am√©liorer votre exp√©rience utilisateur.\n            </p>\n\n            <h2>2. Types de cookies utilis√©s</h2>\n            \n            <h3>2.1. Cookies strictement n√©cessaires (pas de consentement requis)</h3>\n            <p>\n              Ces cookies sont indispensables au fonctionnement du site :\n            </p>\n            <table className=\"w-full border-collapse\">\n              <thead>\n                <tr>\n                  <th className=\"border p-2 text-left\">Nom</th>\n                  <th className=\"border p-2 text-left\">Finalit√©</th>\n                  <th className=\"border p-2 text-left\">Dur√©e</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td className=\"border p-2\"><code>token</code></td>\n                  <td className=\"border p-2\">Authentification et session s√©curis√©e</td>\n                  <td className=\"border p-2\">7 jours</td>\n                </tr>\n                <tr>\n                  <td className=\"border p-2\"><code>csrf_token</code></td>\n                  <td className=\"border p-2\">Protection contre les attaques CSRF</td>\n                  <td className=\"border p-2\">Session</td>\n                </tr>\n              </tbody>\n            </table>\n\n            <h3>2.2. Cookies de pr√©f√©rences (consentement requis)</h3>\n            <table className=\"w-full border-collapse\">\n              <thead>\n                <tr>\n                  <th className=\"border p-2 text-left\">Nom</th>\n                  <th className=\"border p-2 text-left\">Finalit√©</th>\n                  <th className=\"border p-2 text-left\">Dur√©e</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td className=\"border p-2\"><code>theme</code></td>\n                  <td className=\"border p-2\">M√©morisation du mode sombre/clair</td>\n                  <td className=\"border p-2\">1 an</td>\n                </tr>\n                <tr>\n                  <td className=\"border p-2\"><code>cookie_consent</code></td>\n                  <td className=\"border p-2\">M√©morisation de vos choix de cookies</td>\n                  <td className=\"border p-2\">1 an</td>\n                </tr>\n              </tbody>\n            </table>\n\n            <h3>2.3. Cookies tiers</h3>\n            \n            <h4>Stripe (Paiements)</h4>\n            <p>\n              Stripe utilise des cookies pour traiter les paiements de mani√®re s√©curis√©e. \n              Consultez la <a href=\"https://stripe.com/privacy\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-primary hover:underline\">\n                politique de confidentialit√© Stripe\n              </a>.\n            </p>\n\n            <h2>3. Gestion des cookies</h2>\n            \n            <h3>3.1. Banni√®re de consentement</h3>\n            <p>\n              Lors de votre premi√®re visite, une banni√®re vous permet d'accepter ou de refuser les cookies non essentiels.\n            </p>\n\n            <h3>3.2. Param√®tres du navigateur</h3>\n            <p>\n              Vous pouvez configurer votre navigateur pour bloquer ou supprimer les cookies :\n            </p>\n            <ul>\n              <li>\n                <strong>Chrome :</strong> Param√®tres ‚Üí Confidentialit√© et s√©curit√© ‚Üí Cookies et autres donn√©es des sites\n              </li>\n              <li>\n                <strong>Firefox :</strong> Param√®tres ‚Üí Vie priv√©e et s√©curit√© ‚Üí Cookies et donn√©es de sites\n              </li>\n              <li>\n                <strong>Safari :</strong> Pr√©f√©rences ‚Üí Confidentialit√© ‚Üí G√©rer les cookies\n              </li>\n              <li>\n                <strong>Edge :</strong> Param√®tres ‚Üí Cookies et autorisations de site ‚Üí Cookies et donn√©es de sites\n              </li>\n            </ul>\n\n            <h3>3.3. Cons√©quences du refus des cookies</h3>\n            <p>\n              Le refus des cookies essentiels emp√™chera :\n            </p>\n            <ul>\n              <li>La connexion √† votre compte</li>\n              <li>L'enregistrement de vos simulations</li>\n              <li>Le traitement des paiements</li>\n            </ul>\n            <p>\n              Le refus des cookies de pr√©f√©rences entra√Ænera :\n            </p>\n            <ul>\n              <li>La perte de vos pr√©f√©rences de th√®me</li>\n              <li>L'affichage r√©p√©t√© de la banni√®re de cookies</li>\n            </ul>\n\n            <h2>4. Dur√©e de conservation</h2>\n            <p>\n              Les cookies de session sont supprim√©s √† la fermeture du navigateur. \n              Les cookies persistants ont une dur√©e maximale de 13 mois (recommandation CNIL).\n            </p>\n\n            <h2>5. Mises √† jour de cette politique</h2>\n            <p>\n              Cette politique peut √™tre modifi√©e pour refl√©ter les √©volutions de nos pratiques ou des exigences l√©gales. \n              La date de derni√®re mise √† jour est indiqu√©e en haut de cette page.\n            </p>\n\n            <h2>6. Contact</h2>\n            <p>\n              Pour toute question concernant les cookies :<br />\n              <strong>Email :</strong> privacy@calcunotaire.pro\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","size_bytes":6471},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/WizardProgress.tsx":{"content":"import { Check } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\n\ninterface WizardProgressProps {\n  currentStep: number;\n  steps: Array<{ id: number; label: string }>;\n}\n\nexport default function WizardProgress({ currentStep, steps }: WizardProgressProps) {\n  return (\n    <div className=\"w-full py-6\">\n      <div className=\"flex items-center justify-between max-w-4xl mx-auto px-4\">\n        {steps.map((step, index) => {\n          const isCompleted = currentStep > step.id;\n          const isCurrent = currentStep === step.id;\n          const isUpcoming = currentStep < step.id;\n\n          return (\n            <div key={step.id} className=\"flex items-center flex-1\">\n              <div className=\"flex flex-col items-center\">\n                <div\n                  className={cn(\n                    \"w-10 h-10 rounded-full border-2 flex items-center justify-center transition-colors font-medium text-sm\",\n                    isCompleted && \"bg-primary border-primary text-primary-foreground\",\n                    isCurrent && \"border-primary text-primary bg-background\",\n                    isUpcoming && \"border-border text-muted-foreground bg-background\"\n                  )}\n                  data-testid={`step-indicator-${step.id}`}\n                >\n                  {isCompleted ? <Check className=\"w-5 h-5\" /> : step.id}\n                </div>\n                <span\n                  className={cn(\n                    \"mt-2 text-xs font-medium text-center hidden sm:block\",\n                    isCurrent && \"text-foreground\",\n                    isCompleted && \"text-muted-foreground\",\n                    isUpcoming && \"text-muted-foreground\"\n                  )}\n                >\n                  {step.label}\n                </span>\n              </div>\n              {index < steps.length - 1 && (\n                <div className=\"flex-1 h-0.5 mx-2 bg-border relative top-[-20px]\">\n                  <div\n                    className={cn(\n                      \"h-full transition-all\",\n                      isCompleted ? \"bg-primary w-full\" : \"bg-transparent w-0\"\n                    )}\n                  />\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","size_bytes":2249},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/pages/Home.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { useAuth } from \"@/lib/auth\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Calculator, FileText, LogOut, Download, Share2 } from \"lucide-react\";\nimport { apiRequest, queryClient } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport ThemeToggle from \"@/components/ThemeToggle\";\n\ninterface SimulationResult {\n  grossCapitalGain: number;\n  holdingYears: number;\n  irTax: number;\n  psTax: number;\n  surcharge: number;\n  totalTax: number;\n  netProceeds: number;\n  isRpExempt: boolean;\n  isFirstSaleExempt: boolean;\n}\n\nexport default function Home() {\n  const { user, logout } = useAuth();\n  const { toast } = useToast();\n  const [formData, setFormData] = useState({\n    role: 'pp',\n    occupation: 'rs',\n    salePrice: '',\n    purchasePrice: '',\n    purchaseDate: '',\n    saleDate: '',\n    acquisitionFeesType: 'flat',\n    acquisitionFeesAmount: '0',\n    worksType: 'flat',\n    worksAmount: '0',\n    otherAcquisitionCosts: '0',\n    crd: '0',\n    annualInterestRate: '0',\n    releaseFeeCost: '0',\n    agencyFees: '0',\n    diagnosticsCosts: '0',\n    propertyTaxProration: '0',\n    otherCessionCosts: '0',\n  });\n  const [currentSimulationId, setCurrentSimulationId] = useState<string | null>(null);\n  const [results, setResults] = useState<SimulationResult | null>(null);\n\n  // Create simulation\n  const createSimulation = useMutation({\n    mutationFn: async (inputData: any) => {\n      const response = await apiRequest('/api/simulations', 'POST', inputData);\n      return response;\n    },\n    onSuccess: (data) => {\n      setCurrentSimulationId(data.id);\n      toast({\n        title: \"Simulation cr√©√©e\",\n        description: \"Calcul en cours...\",\n      });\n      computeSimulation.mutate(data.id);\n    },\n  });\n\n  // Compute simulation\n  const computeSimulation = useMutation({\n    mutationFn: async (simulationId: string) => {\n      const response = await apiRequest(`/api/simulations/${simulationId}/compute`, 'POST');\n      return response;\n    },\n    onSuccess: (data) => {\n      setResults(data.resultData);\n      queryClient.invalidateQueries({ queryKey: ['/api/simulations'] });\n      toast({\n        title: \"Calcul termin√©\",\n        description: \"Les r√©sultats sont disponibles ci-dessous\",\n      });\n    },\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // Build input data\n    const inputData = {\n      role: formData.role,\n      occupation: formData.occupation,\n      salePrice: parseFloat(formData.salePrice),\n      purchasePrice: parseFloat(formData.purchasePrice),\n      purchaseDate: formData.purchaseDate,\n      saleDate: formData.saleDate,\n      acquisitionFeesType: formData.acquisitionFeesType,\n      acquisitionFeesAmount: formData.acquisitionFeesType === 'actual' ? parseFloat(formData.acquisitionFeesAmount) : undefined,\n      worksType: formData.worksType,\n      worksAmount: formData.worksType === 'actual' ? parseFloat(formData.worksAmount) : undefined,\n      otherAcquisitionCosts: parseFloat(formData.otherAcquisitionCosts),\n      crd: parseFloat(formData.crd),\n      annualInterestRate: parseFloat(formData.annualInterestRate) || undefined,\n      releaseFeeCost: parseFloat(formData.releaseFeeCost),\n      agencyFees: parseFloat(formData.agencyFees),\n      diagnosticsCosts: parseFloat(formData.diagnosticsCosts),\n      propertyTaxProration: parseFloat(formData.propertyTaxProration),\n      otherCessionCosts: parseFloat(formData.otherCessionCosts),\n    };\n\n    createSimulation.mutate(inputData);\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('fr-FR', {\n      style: 'currency',\n      currency: 'EUR',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(amount);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <header className=\"border-b p-4\">\n        <div className=\"container mx-auto flex items-center justify-between\">\n          <div className=\"flex items-center gap-3\">\n            <div className=\"w-10 h-10 bg-primary rounded-lg flex items-center justify-center\">\n              <Calculator className=\"w-6 h-6 text-primary-foreground\" />\n            </div>\n            <div>\n              <h1 className=\"text-xl font-bold\">CalcuNotaire Pro</h1>\n              <p className=\"text-xs text-muted-foreground\">{user?.email}</p>\n            </div>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <ThemeToggle />\n            <Button variant=\"ghost\" size=\"sm\" onClick={logout} data-testid=\"button-logout\">\n              <LogOut className=\"w-4 h-4\" />\n            </Button>\n          </div>\n        </div>\n      </header>\n\n      <main className=\"container mx-auto p-4 md:p-8\">\n        <div className=\"grid lg:grid-cols-2 gap-8\">\n          {/* Form */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Calculateur de Plus-Value Immobili√®re</CardTitle>\n              <CardDescription>Remplissez les champs ci-dessous pour calculer votre plus-value et vos imp√¥ts</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <form onSubmit={handleSubmit} className=\"space-y-6\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <Label htmlFor=\"role\">Type de vendeur</Label>\n                    <Select value={formData.role} onValueChange={(v) => setFormData({...formData, role: v})}>\n                      <SelectTrigger data-testid=\"select-role\">\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"pp\">Personne Physique (PP)</SelectItem>\n                        <SelectItem value=\"sci_ir\">SCI IR</SelectItem>\n                        <SelectItem value=\"sci_is\">SCI IS</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"occupation\">Occupation</Label>\n                    <Select value={formData.occupation} onValueChange={(v) => setFormData({...formData, occupation: v})}>\n                      <SelectTrigger data-testid=\"select-occupation\">\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"rp\">R√©sidence Principale</SelectItem>\n                        <SelectItem value=\"rs\">R√©sidence Secondaire</SelectItem>\n                        <SelectItem value=\"first_sale_reinvestment\">Premi√®re vente + r√©investissement</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n\n                <Separator />\n\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <Label htmlFor=\"purchasePrice\">Prix d'achat (‚Ç¨)</Label>\n                    <Input\n                      id=\"purchasePrice\"\n                      type=\"number\"\n                      value={formData.purchasePrice}\n                      onChange={(e) => setFormData({...formData, purchasePrice: e.target.value})}\n                      required\n                      data-testid=\"input-purchase-price\"\n                    />\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"salePrice\">Prix de vente (‚Ç¨)</Label>\n                    <Input\n                      id=\"salePrice\"\n                      type=\"number\"\n                      value={formData.salePrice}\n                      onChange={(e) => setFormData({...formData, salePrice: e.target.value})}\n                      required\n                      data-testid=\"input-sale-price\"\n                    />\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"purchaseDate\">Date d'acquisition</Label>\n                    <Input\n                      id=\"purchaseDate\"\n                      type=\"date\"\n                      value={formData.purchaseDate}\n                      onChange={(e) => setFormData({...formData, purchaseDate: e.target.value})}\n                      required\n                      data-testid=\"input-purchase-date\"\n                    />\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"saleDate\">Date de cession</Label>\n                    <Input\n                      id=\"saleDate\"\n                      type=\"date\"\n                      value={formData.saleDate}\n                      onChange={(e) => setFormData({...formData, saleDate: e.target.value})}\n                      required\n                      data-testid=\"input-sale-date\"\n                    />\n                  </div>\n                </div>\n\n                <Separator />\n\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <Label htmlFor=\"agencyFees\">Frais d'agence (‚Ç¨)</Label>\n                    <Input\n                      id=\"agencyFees\"\n                      type=\"number\"\n                      value={formData.agencyFees}\n                      onChange={(e) => setFormData({...formData, agencyFees: e.target.value})}\n                      data-testid=\"input-agency-fees\"\n                    />\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"diagnosticsCosts\">Diagnostics (‚Ç¨)</Label>\n                    <Input\n                      id=\"diagnosticsCosts\"\n                      type=\"number\"\n                      value={formData.diagnosticsCosts}\n                      onChange={(e) => setFormData({...formData, diagnosticsCosts: e.target.value})}\n                      data-testid=\"input-diagnostics\"\n                    />\n                  </div>\n                </div>\n\n                <Button \n                  type=\"submit\" \n                  className=\"w-full\" \n                  disabled={createSimulation.isPending || computeSimulation.isPending}\n                  data-testid=\"button-calculate\"\n                >\n                  {createSimulation.isPending || computeSimulation.isPending ? 'Calcul en cours...' : 'Calculer'}\n                </Button>\n              </form>\n            </CardContent>\n          </Card>\n\n          {/* Results */}\n          <Card>\n            <CardHeader>\n              <CardTitle>R√©sultats</CardTitle>\n              <CardDescription>\n                {results ? 'Calcul bas√© sur les formules BOFiP officielles' : 'Remplissez le formulaire pour voir les r√©sultats'}\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              {results ? (\n                <div className=\"space-y-4\">\n                  {results.isRpExempt && (\n                    <div className=\"p-4 bg-green-50 dark:bg-green-950 border border-green-200 dark:border-green-800 rounded-lg\">\n                      <p className=\"text-sm font-medium text-green-900 dark:text-green-100\">\n                        ‚úÖ Exon√©ration R√©sidence Principale\n                      </p>\n                      <p className=\"text-xs text-green-700 dark:text-green-300 mt-1\">\n                        Cette vente est totalement exon√©r√©e d'imp√¥t sur la plus-value\n                      </p>\n                    </div>\n                  )}\n\n                  {results.isFirstSaleExempt && (\n                    <div className=\"p-4 bg-green-50 dark:bg-green-950 border border-green-200 dark:border-green-800 rounded-lg\">\n                      <p className=\"text-sm font-medium text-green-900 dark:text-green-100\">\n                        ‚úÖ Exon√©ration Premi√®re Vente\n                      </p>\n                    </div>\n                  )}\n\n                  <div className=\"space-y-3\">\n                    <div className=\"flex justify-between items-center p-3 bg-muted rounded-lg\">\n                      <span className=\"text-sm font-medium\">Plus-value brute</span>\n                      <span className=\"text-lg font-bold\" data-testid=\"text-gross-gain\">\n                        {formatCurrency(results.grossCapitalGain)}\n                      </span>\n                    </div>\n\n                    <div className=\"flex justify-between items-center p-3 bg-muted rounded-lg\">\n                      <span className=\"text-sm font-medium\">Dur√©e de d√©tention</span>\n                      <span className=\"text-lg font-bold\">\n                        {results.holdingYears} ans\n                      </span>\n                    </div>\n\n                    <Separator />\n\n                    <div className=\"flex justify-between items-center p-3\">\n                      <span className=\"text-sm\">Imp√¥t sur le revenu (19%)</span>\n                      <span className=\"font-semibold\" data-testid=\"text-ir-tax\">\n                        {formatCurrency(results.irTax)}\n                      </span>\n                    </div>\n\n                    <div className=\"flex justify-between items-center p-3\">\n                      <span className=\"text-sm\">Pr√©l√®vements sociaux (17.2%)</span>\n                      <span className=\"font-semibold\" data-testid=\"text-ps-tax\">\n                        {formatCurrency(results.psTax)}\n                      </span>\n                    </div>\n\n                    {results.surcharge > 0 && (\n                      <div className=\"flex justify-between items-center p-3\">\n                        <span className=\"text-sm\">Surtaxe (PV &gt; 50k‚Ç¨)</span>\n                        <span className=\"font-semibold text-orange-600 dark:text-orange-400\">\n                          {formatCurrency(results.surcharge)}\n                        </span>\n                      </div>\n                    )}\n\n                    <Separator />\n\n                    <div className=\"flex justify-between items-center p-4 bg-primary/10 rounded-lg\">\n                      <span className=\"font-semibold\">Total imp√¥ts</span>\n                      <span className=\"text-xl font-bold text-primary\" data-testid=\"text-total-tax\">\n                        {formatCurrency(results.totalTax)}\n                      </span>\n                    </div>\n\n                    <div className=\"flex justify-between items-center p-4 bg-green-50 dark:bg-green-950 rounded-lg\">\n                      <span className=\"font-semibold text-green-900 dark:text-green-100\">Net vendeur</span>\n                      <span className=\"text-xl font-bold text-green-700 dark:text-green-300\" data-testid=\"text-net-proceeds\">\n                        {formatCurrency(results.netProceeds)}\n                      </span>\n                    </div>\n                  </div>\n\n                  {currentSimulationId && (\n                    <div className=\"mt-6 space-y-2\">\n                      <div className=\"flex gap-2\">\n                        <Button \n                          variant=\"outline\" \n                          className=\"flex-1\" \n                          onClick={() => window.open(`/api/simulations/${currentSimulationId}/pdf`, '_blank')}\n                          data-testid=\"button-download-pdf\"\n                        >\n                          <FileText className=\"w-4 h-4 mr-2\" />\n                          PDF\n                        </Button>\n                        <Button \n                          variant=\"outline\" \n                          className=\"flex-1\"\n                          onClick={() => window.open(`/api/simulations/${currentSimulationId}/csv`, '_blank')}\n                          data-testid=\"button-download-csv\"\n                        >\n                          <Download className=\"w-4 h-4 mr-2\" />\n                          CSV\n                        </Button>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              ) : (\n                <div className=\"text-center py-12 text-muted-foreground\">\n                  <Calculator className=\"w-12 h-12 mx-auto mb-4 opacity-20\" />\n                  <p>Remplissez le formulaire et cliquez sur \"Calculer\"</p>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </div>\n      </main>\n    </div>\n  );\n}\n","size_bytes":16562},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"client/src/components/ThemeToggle.tsx":{"content":"import { Moon, Sun } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { useEffect, useState } from \"react\";\n\nexport default function ThemeToggle() {\n  const [theme, setTheme] = useState<\"light\" | \"dark\">(\"light\");\n\n  useEffect(() => {\n    const savedTheme = localStorage.getItem(\"theme\") as \"light\" | \"dark\" | null;\n    const initialTheme = savedTheme || \"light\";\n    setTheme(initialTheme);\n    document.documentElement.classList.toggle(\"dark\", initialTheme === \"dark\");\n  }, []);\n\n  const toggleTheme = () => {\n    const newTheme = theme === \"light\" ? \"dark\" : \"light\";\n    setTheme(newTheme);\n    localStorage.setItem(\"theme\", newTheme);\n    document.documentElement.classList.toggle(\"dark\", newTheme === \"dark\");\n  };\n\n  return (\n    <Button\n      variant=\"ghost\"\n      size=\"icon\"\n      onClick={toggleTheme}\n      data-testid=\"button-theme-toggle\"\n    >\n      {theme === \"light\" ? (\n        <Moon className=\"w-5 h-5\" />\n      ) : (\n        <Sun className=\"w-5 h-5\" />\n      )}\n    </Button>\n  );\n}\n","size_bytes":1032},"client/src/components/examples/LiveResultsPanel.tsx":{"content":"import LiveResultsPanel from '../LiveResultsPanel';\n\nexport default function LiveResultsPanelExample() {\n  return (\n    <div className=\"max-w-sm\">\n      <LiveResultsPanel\n        grossCapitalGain={150000}\n        irAllowance={65}\n        psAllowance={85}\n        irTax={9975}\n        psTax={3870}\n        surcharge={2500}\n        exemptions={[]}\n        netProceeds={425000}\n        salePrice={600000}\n      />\n    </div>\n  );\n}\n","size_bytes":429},"client/src/components/examples/WizardNavigation.tsx":{"content":"import WizardNavigation from '../WizardNavigation';\n\nexport default function WizardNavigationExample() {\n  return (\n    <div className=\"max-w-4xl\">\n      <WizardNavigation\n        currentStep={3}\n        totalSteps={6}\n        onPrevious={() => console.log('Previous clicked')}\n        onNext={() => console.log('Next clicked')}\n        canGoNext={true}\n        isLastStep={false}\n      />\n    </div>\n  );\n}\n","size_bytes":408},"server/middleware.ts":{"content":"import rateLimit from 'express-rate-limit';\n\n/**\n * Rate limiting for authentication endpoints\n */\nexport const authRateLimiter = rateLimit({\n  windowMs: 15 * 60 * 1000, // 15 minutes\n  max: 5, // 5 requests per window\n  message: 'Too many authentication attempts, please try again later',\n  standardHeaders: true,\n  legacyHeaders: false,\n});\n\n/**\n * Rate limiting for compute/calculation endpoints\n */\nexport const computeRateLimiter = rateLimit({\n  windowMs: 60 * 1000, // 1 minute\n  max: 10, // 10 calculations per minute\n  message: 'Too many calculation requests, please slow down',\n  standardHeaders: true,\n  legacyHeaders: false,\n});\n\n/**\n * General API rate limiter\n */\nexport const apiRateLimiter = rateLimit({\n  windowMs: 15 * 60 * 1000, // 15 minutes\n  max: 100, // 100 requests per window\n  standardHeaders: true,\n  legacyHeaders: false,\n});\n","size_bytes":853},"client/src/App.tsx":{"content":"import { Switch, Route, Redirect } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { AuthProvider, useAuth } from \"@/lib/auth\";\nimport { CookieBanner } from \"@/components/CookieBanner\";\nimport Home from \"@/pages/Home\";\nimport Admin from \"@/pages/Admin\";\nimport Login from \"@/pages/Login\";\nimport CGU from \"@/pages/CGU\";\nimport Privacy from \"@/pages/Privacy\";\nimport Cookies from \"@/pages/Cookies\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction ProtectedRoute({ component: Component, ...rest }: any) {\n  const { isAuthenticated, loading } = useAuth();\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-spin w-8 h-8 border-4 border-primary border-t-transparent rounded-full\" />\n      </div>\n    );\n  }\n\n  return isAuthenticated ? <Component {...rest} /> : <Redirect to=\"/login\" />;\n}\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/cgu\" component={CGU} />\n      <Route path=\"/privacy\" component={Privacy} />\n      <Route path=\"/cookies\" component={Cookies} />\n      <Route path=\"/\">\n        {() => <ProtectedRoute component={Home} />}\n      </Route>\n      <Route path=\"/admin\">\n        {() => <ProtectedRoute component={Admin} />}\n      </Route>\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <AuthProvider>\n        <TooltipProvider>\n          <Toaster />\n          <Router />\n          <CookieBanner />\n        </TooltipProvider>\n      </AuthProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1847},"client/src/components/ui/sidebar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, VariantProps } from \"class-variance-authority\"\nimport { PanelLeftIcon } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nfunction SidebarProvider({\n  defaultOpen = true,\n  open: openProp,\n  onOpenChange: setOpenProp,\n  className,\n  style,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  defaultOpen?: boolean\n  open?: boolean\n  onOpenChange?: (open: boolean) => void\n}) {\n  const isMobile = useIsMobile()\n  const [openMobile, setOpenMobile] = React.useState(false)\n\n  // This is the internal state of the sidebar.\n  // We use openProp and setOpenProp for control from outside the component.\n  const [_open, _setOpen] = React.useState(defaultOpen)\n  const open = openProp ?? _open\n  const setOpen = React.useCallback(\n    (value: boolean | ((value: boolean) => boolean)) => {\n      const openState = typeof value === \"function\" ? value(open) : value\n      if (setOpenProp) {\n        setOpenProp(openState)\n      } else {\n        _setOpen(openState)\n      }\n\n      // This sets the cookie to keep the sidebar state.\n      document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n    },\n    [setOpenProp, open]\n  )\n\n  // Helper to toggle the sidebar.\n  const toggleSidebar = React.useCallback(() => {\n    return isMobile ? setOpenMobile((open) => !open) : setOpen((open) => !open)\n  }, [isMobile, setOpen, setOpenMobile])\n\n  // Adds a keyboard shortcut to toggle the sidebar.\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (\n        event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n        (event.metaKey || event.ctrlKey)\n      ) {\n        event.preventDefault()\n        toggleSidebar()\n      }\n    }\n\n    window.addEventListener(\"keydown\", handleKeyDown)\n    return () => window.removeEventListener(\"keydown\", handleKeyDown)\n  }, [toggleSidebar])\n\n  // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n  // This makes it easier to style the sidebar with Tailwind classes.\n  const state = open ? \"expanded\" : \"collapsed\"\n\n  const contextValue = React.useMemo<SidebarContextProps>(\n    () => ({\n      state,\n      open,\n      setOpen,\n      isMobile,\n      openMobile,\n      setOpenMobile,\n      toggleSidebar,\n    }),\n    [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n  )\n\n  return (\n    <SidebarContext.Provider value={contextValue}>\n      <TooltipProvider delayDuration={0}>\n        <div\n          data-slot=\"sidebar-wrapper\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH,\n              \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n              ...style,\n            } as React.CSSProperties\n          }\n          className={cn(\n            \"group/sidebar-wrapper has-data-[variant=inset]:bg-sidebar flex min-h-svh w-full\",\n            className\n          )}\n          {...props}\n        >\n          {children}\n        </div>\n      </TooltipProvider>\n    </SidebarContext.Provider>\n  )\n}\n\nfunction Sidebar({\n  side = \"left\",\n  variant = \"sidebar\",\n  collapsible = \"offcanvas\",\n  className,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  side?: \"left\" | \"right\"\n  variant?: \"sidebar\" | \"floating\" | \"inset\"\n  collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n}) {\n  const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n  if (collapsible === \"none\") {\n    return (\n      <div\n        data-slot=\"sidebar\"\n        className={cn(\n          \"bg-sidebar text-sidebar-foreground flex h-full w-[var(--sidebar-width)] flex-col\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n\n  if (isMobile) {\n    return (\n      <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n        <SheetContent\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar\"\n          data-mobile=\"true\"\n          className=\"bg-sidebar text-sidebar-foreground w-[var(--sidebar-width)] p-0 [&>button]:hidden\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n            } as React.CSSProperties\n          }\n          side={side}\n        >\n          <SheetHeader className=\"sr-only\">\n            <SheetTitle>Sidebar</SheetTitle>\n            <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n          </SheetHeader>\n          <div className=\"flex h-full w-full flex-col\">{children}</div>\n        </SheetContent>\n      </Sheet>\n    )\n  }\n\n  return (\n    <div\n      className=\"group peer text-sidebar-foreground hidden md:block\"\n      data-state={state}\n      data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n      data-variant={variant}\n      data-side={side}\n      data-slot=\"sidebar\"\n    >\n      {/* This is what handles the sidebar gap on desktop */}\n      <div\n        data-slot=\"sidebar-gap\"\n        className={cn(\n          \"relative w-[var(--sidebar-width)] bg-transparent transition-[width] duration-200 ease-linear\",\n          \"group-data-[collapsible=offcanvas]:w-0\",\n          \"group-data-[side=right]:rotate-180\",\n          variant === \"floating\" || variant === \"inset\"\n            ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+var(--spacing-4))]\"\n            : \"group-data-[collapsible=icon]:w-[var(--sidebar-width-icon)]\"\n        )}\n      />\n      <div\n        data-slot=\"sidebar-container\"\n        className={cn(\n          \"fixed inset-y-0 z-10 hidden h-svh w-[var(--sidebar-width)] transition-[left,right,width] duration-200 ease-linear md:flex\",\n          side === \"left\"\n            ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n            : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n          // Adjust the padding for floating and inset variants.\n          variant === \"floating\" || variant === \"inset\"\n            ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+var(--spacing-4)+2px)]\"\n            : \"group-data-[collapsible=icon]:w-[var(--sidebar-width-icon)] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n          className\n        )}\n        {...props}\n      >\n        <div\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar-inner\"\n          className=\"bg-sidebar group-data-[variant=floating]:border-sidebar-border flex h-full w-full flex-col group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:shadow-sm\"\n        >\n          {children}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction SidebarTrigger({\n  className,\n  onClick,\n  ...props\n}: React.ComponentProps<typeof Button>) {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      data-sidebar=\"trigger\"\n      data-slot=\"sidebar-trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeftIcon />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n}\n\nfunction SidebarRail({ className, ...props }: React.ComponentProps<\"button\">) {\n  const { toggleSidebar } = useSidebar()\n\n  // Note: Tailwind v3.4 doesn't support \"in-\" selectors. So the rail won't work perfectly.\n  return (\n    <button\n      data-sidebar=\"rail\"\n      data-slot=\"sidebar-rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"hover:after:bg-sidebar-border absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear group-data-[side=left]:-right-4 group-data-[side=right]:left-0 after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] sm:flex\",\n        \"in-data-[side=left]:cursor-w-resize in-data-[side=right]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"hover:group-data-[collapsible=offcanvas]:bg-sidebar group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInset({ className, ...props }: React.ComponentProps<\"main\">) {\n  return (\n    <main\n      data-slot=\"sidebar-inset\"\n      className={cn(\n        \"bg-background relative flex w-full flex-1 flex-col\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow-sm md:peer-data-[variant=inset]:peer-data-[state=collapsed]:ml-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInput({\n  className,\n  ...props\n}: React.ComponentProps<typeof Input>) {\n  return (\n    <Input\n      data-slot=\"sidebar-input\"\n      data-sidebar=\"input\"\n      className={cn(\"bg-background h-8 w-full shadow-none\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-header\"\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-footer\"\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof Separator>) {\n  return (\n    <Separator\n      data-slot=\"sidebar-separator\"\n      data-sidebar=\"separator\"\n      className={cn(\"bg-sidebar-border mx-2 w-auto\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-content\"\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroup({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group\"\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupLabel({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"div\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-label\"\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"text-sidebar-foreground/70 ring-sidebar-ring flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium outline-hidden transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:h-4 [&>svg]:w-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupAction({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-action\"\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground absolute top-3.5 right-3 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupContent({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group-content\"\n      data-sidebar=\"group-content\"\n      className={cn(\"w-full text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenu({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu\"\n      data-sidebar=\"menu\"\n      className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuItem({ className, ...props }: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-item\"\n      data-sidebar=\"menu-item\"\n      className={cn(\"group/menu-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-hidden ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-data-[sidebar=menu-action]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:w-8! group-data-[collapsible=icon]:h-8! group-data-[collapsible=icon]:p-2! [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:p-0!\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction SidebarMenuButton({\n  asChild = false,\n  isActive = false,\n  variant = \"default\",\n  size = \"default\",\n  tooltip,\n  className,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  isActive?: boolean\n  tooltip?: string | React.ComponentProps<typeof TooltipContent>\n} & VariantProps<typeof sidebarMenuButtonVariants>) {\n  const Comp = asChild ? Slot : \"button\"\n  const { isMobile, state } = useSidebar()\n\n  const button = (\n    <Comp\n      data-slot=\"sidebar-menu-button\"\n      data-sidebar=\"menu-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n      {...props}\n    />\n  )\n\n  if (!tooltip) {\n    return button\n  }\n\n  if (typeof tooltip === \"string\") {\n    tooltip = {\n      children: tooltip,\n    }\n  }\n\n  return (\n    <Tooltip>\n      <TooltipTrigger asChild>{button}</TooltipTrigger>\n      <TooltipContent\n        side=\"right\"\n        align=\"center\"\n        hidden={state !== \"collapsed\" || isMobile}\n        {...tooltip}\n      />\n    </Tooltip>\n  )\n}\n\nfunction SidebarMenuAction({\n  className,\n  asChild = false,\n  showOnHover = false,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  showOnHover?: boolean\n}) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-action\"\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground peer-hover/menu-button:text-sidebar-accent-foreground absolute top-1.5 right-1 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"peer-data-[active=true]/menu-button:text-sidebar-accent-foreground group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuBadge({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-menu-badge\"\n      data-sidebar=\"menu-badge\"\n      className={cn(\n        \"text-sidebar-foreground pointer-events-none absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums select-none\",\n        \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSkeleton({\n  className,\n  showIcon = false,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  showIcon?: boolean\n}) {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      data-slot=\"sidebar-menu-skeleton\"\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[var(--skeleton-width)] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n}\n\nfunction SidebarMenuSub({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu-sub\"\n      data-sidebar=\"menu-sub\"\n      className={cn(\n        \"border-sidebar-border mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l px-2.5 py-0.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubItem({\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-sub-item\"\n      data-sidebar=\"menu-sub-item\"\n      className={cn(\"group/menu-sub-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubButton({\n  asChild = false,\n  size = \"md\",\n  isActive = false,\n  className,\n  ...props\n}: React.ComponentProps<\"a\"> & {\n  asChild?: boolean\n  size?: \"sm\" | \"md\"\n  isActive?: boolean\n}) {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-sub-button\"\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground active:bg-sidebar-accent active:text-sidebar-accent-foreground [&>svg]:text-sidebar-accent-foreground flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 outline outline-2 outline-transparent outline-offset-2 focus-visible:ring-2 disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":21846},"client/src/components/CookieBanner.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Card } from '@/components/ui/card';\nimport { Link } from 'wouter';\nimport { X, Cookie } from 'lucide-react';\n\nconst COOKIE_CONSENT_KEY = 'calcunotaire-cookie-consent';\n\nexport function CookieBanner() {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    // V√©rifier si l'utilisateur a d√©j√† donn√© son consentement\n    const consent = localStorage.getItem(COOKIE_CONSENT_KEY);\n    if (!consent) {\n      // Afficher la banni√®re apr√®s un d√©lai pour ne pas √™tre intrusif\n      const timer = setTimeout(() => {\n        setIsVisible(true);\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n  }, []);\n\n  const acceptAll = () => {\n    localStorage.setItem(COOKIE_CONSENT_KEY, JSON.stringify({\n      necessary: true,\n      analytics: true,\n      marketing: false, // Pas de marketing pour CalcuNotaire\n      timestamp: new Date().toISOString()\n    }));\n    setIsVisible(false);\n  };\n\n  const acceptNecessary = () => {\n    localStorage.setItem(COOKIE_CONSENT_KEY, JSON.stringify({\n      necessary: true,\n      analytics: false,\n      marketing: false,\n      timestamp: new Date().toISOString()\n    }));\n    setIsVisible(false);\n  };\n\n  const dismiss = () => {\n    // Fermer temporairement sans enregistrer de pr√©f√©rence\n    setIsVisible(false);\n  };\n\n  if (!isVisible) return null;\n\n  return (\n    <div className=\"fixed bottom-0 left-0 right-0 z-50 p-4 animate-in slide-in-from-bottom-5\">\n      <Card className=\"max-w-4xl mx-auto p-6 border-primary/20 shadow-xl bg-background/95 backdrop-blur-sm\">\n        <div className=\"flex items-start gap-4\">\n          <div className=\"flex-shrink-0 mt-1\">\n            <Cookie className=\"h-6 w-6 text-primary\" />\n          </div>\n          \n          <div className=\"flex-1 space-y-3\">\n            <div>\n              <h3 className=\"font-semibold text-lg mb-2\" data-testid=\"text-cookie-title\">\n                Gestion des cookies\n              </h3>\n              <p className=\"text-sm text-muted-foreground leading-relaxed\">\n                Nous utilisons des <strong>cookies essentiels</strong> pour garantir le bon fonctionnement de CalcuNotaire Pro \n                (authentification, sauvegardes locales). \n                Les <strong>cookies analytiques</strong> nous aident √† am√©liorer votre exp√©rience. \n                Nous ne vendons jamais vos donn√©es. \n                <Link href=\"/cookies\">\n                  <a className=\"text-primary hover:underline ml-1\" data-testid=\"link-cookie-policy\">\n                    En savoir plus\n                  </a>\n                </Link>\n              </p>\n            </div>\n\n            <div className=\"flex flex-wrap gap-2 pt-2\">\n              <Button \n                onClick={acceptAll}\n                variant=\"default\"\n                size=\"sm\"\n                data-testid=\"button-accept-all\"\n              >\n                Tout accepter\n              </Button>\n              \n              <Button \n                onClick={acceptNecessary}\n                variant=\"outline\"\n                size=\"sm\"\n                data-testid=\"button-accept-necessary\"\n              >\n                Seulement n√©cessaires\n              </Button>\n              \n              <Link href=\"/cookies\">\n                <Button \n                  variant=\"ghost\"\n                  size=\"sm\"\n                  data-testid=\"button-customize\"\n                  as=\"span\"\n                >\n                  Personnaliser\n                </Button>\n              </Link>\n            </div>\n          </div>\n\n          <button\n            onClick={dismiss}\n            className=\"flex-shrink-0 p-1 rounded-md hover-elevate active-elevate-2\"\n            aria-label=\"Fermer la banni√®re\"\n            data-testid=\"button-close-banner\"\n          >\n            <X className=\"h-5 w-5\" />\n          </button>\n        </div>\n      </Card>\n    </div>\n  );\n}\n\n/**\n * Hook pour v√©rifier si l'utilisateur a consenti aux analytics\n */\nexport function useAnalyticsConsent(): boolean {\n  const [hasConsent, setHasConsent] = useState(false);\n\n  useEffect(() => {\n    const consent = localStorage.getItem(COOKIE_CONSENT_KEY);\n    if (consent) {\n      try {\n        const parsed = JSON.parse(consent);\n        setHasConsent(parsed.analytics === true);\n      } catch {\n        setHasConsent(false);\n      }\n    }\n  }, []);\n\n  return hasConsent;\n}\n","size_bytes":4444},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/examples/WizardProgress.tsx":{"content":"import WizardProgress from '../WizardProgress';\n\nexport default function WizardProgressExample() {\n  const steps = [\n    { id: 1, label: \"Essentiels\" },\n    { id: 2, label: \"Acquisition\" },\n    { id: 3, label: \"Cession\" },\n    { id: 4, label: \"SCI\" },\n    { id: 5, label: \"Surface\" },\n    { id: 6, label: \"R√©sultats\" }\n  ];\n\n  return <WizardProgress currentStep={3} steps={steps} />;\n}\n","size_bytes":387},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \".5625rem\", /* 9px */\n        md: \".375rem\", /* 6px */\n        sm: \".1875rem\", /* 3px */\n      },\n      colors: {\n        background: \"hsl(var(--background) / <alpha-value>)\",\n        foreground: \"hsl(var(--foreground) / <alpha-value>)\",\n        border: \"hsl(var(--border) / <alpha-value>)\",\n        input: \"hsl(var(--input) / <alpha-value>)\",\n        success: \"hsl(142 71% 45% / <alpha-value>)\",\n        warning: \"hsl(38 92% 50% / <alpha-value>)\",\n        error: \"hsl(0 72% 51% / <alpha-value>)\",\n        info: \"hsl(199 89% 48% / <alpha-value>)\",\n        card: {\n          DEFAULT: \"hsl(var(--card) / <alpha-value>)\",\n          foreground: \"hsl(var(--card-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--card-border) / <alpha-value>)\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover) / <alpha-value>)\",\n          foreground: \"hsl(var(--popover-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--popover-border) / <alpha-value>)\",\n        },\n        primary: {\n          DEFAULT: \"hsl(var(--primary) / <alpha-value>)\",\n          foreground: \"hsl(var(--primary-foreground) / <alpha-value>)\",\n          border: \"var(--primary-border)\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary) / <alpha-value>)\",\n          foreground: \"hsl(var(--secondary-foreground) / <alpha-value>)\",\n          border: \"var(--secondary-border)\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted) / <alpha-value>)\",\n          foreground: \"hsl(var(--muted-foreground) / <alpha-value>)\",\n          border: \"var(--muted-border)\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent) / <alpha-value>)\",\n          foreground: \"hsl(var(--accent-foreground) / <alpha-value>)\",\n          border: \"var(--accent-border)\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive) / <alpha-value>)\",\n          foreground: \"hsl(var(--destructive-foreground) / <alpha-value>)\",\n          border: \"var(--destructive-border)\",\n        },\n        ring: \"hsl(var(--ring) / <alpha-value>)\",\n        chart: {\n          \"1\": \"hsl(var(--chart-1) / <alpha-value>)\",\n          \"2\": \"hsl(var(--chart-2) / <alpha-value>)\",\n          \"3\": \"hsl(var(--chart-3) / <alpha-value>)\",\n          \"4\": \"hsl(var(--chart-4) / <alpha-value>)\",\n          \"5\": \"hsl(var(--chart-5) / <alpha-value>)\",\n        },\n        sidebar: {\n          ring: \"hsl(var(--sidebar-ring) / <alpha-value>)\",\n          DEFAULT: \"hsl(var(--sidebar) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--sidebar-border) / <alpha-value>)\",\n        },\n        \"sidebar-primary\": {\n          DEFAULT: \"hsl(var(--sidebar-primary) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-primary-foreground) / <alpha-value>)\",\n          border: \"var(--sidebar-primary-border)\",\n        },\n        \"sidebar-accent\": {\n          DEFAULT: \"hsl(var(--sidebar-accent) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-accent-foreground) / <alpha-value>)\",\n          border: \"var(--sidebar-accent-border)\"\n        },\n        status: {\n          online: \"rgb(34 197 94)\",\n          away: \"rgb(245 158 11)\",\n          busy: \"rgb(239 68 68)\",\n          offline: \"rgb(156 163 175)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":4206},"server/db.ts":{"content":"import { drizzle } from 'drizzle-orm/neon-serverless';\nimport { neonConfig, Pool } from '@neondatabase/serverless';\nimport * as schema from '@shared/schema';\nimport ws from 'ws';\n\n// Configure WebSocket for local development\nneonConfig.webSocketConstructor = ws;\n\nif (!process.env.DATABASE_URL) {\n  throw new Error('DATABASE_URL must be set');\n}\n\nexport const pool = new Pool({ connectionString: process.env.DATABASE_URL });\nexport const db = drizzle(pool, { schema });\n","size_bytes":470},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"server/stripe.ts":{"content":"import Stripe from 'stripe';\nimport { db } from './db';\nimport { simulations, users } from '@shared/schema';\nimport { eq } from 'drizzle-orm';\n\n// Initialize Stripe (will be configured when keys are provided)\nlet stripe: Stripe | null = null;\n\nexport function initializeStripe() {\n  if (process.env.STRIPE_SECRET_KEY) {\n    stripe = new Stripe(process.env.STRIPE_SECRET_KEY, {\n      apiVersion: '2024-12-18.acacia',\n    });\n    console.log('‚úÖ Stripe initialized');\n  } else {\n    console.warn('‚ö†Ô∏è  STRIPE_SECRET_KEY not set - payment features disabled');\n  }\n  return stripe;\n}\n\nexport function getStripe(): Stripe {\n  if (!stripe) {\n    stripe = initializeStripe();\n  }\n  if (!stripe) {\n    throw new Error('Stripe is not configured');\n  }\n  return stripe;\n}\n\n/**\n * Create payment intent for one-shot simulation purchase (39‚Ç¨)\n */\nexport async function createSimulationPayment(simulationId: string, userId: string) {\n  const stripeClient = getStripe();\n  \n  const [simulation] = await db.select()\n    .from(simulations)\n    .where(eq(simulations.id, simulationId))\n    .limit(1);\n  \n  if (!simulation) {\n    throw new Error('Simulation not found');\n  }\n  \n  if (simulation.userId !== userId) {\n    throw new Error('Unauthorized');\n  }\n  \n  if (simulation.isPaid) {\n    throw new Error('Simulation already paid');\n  }\n  \n  // Create payment intent for 39‚Ç¨\n  const paymentIntent = await stripeClient.paymentIntents.create({\n    amount: 3900, // 39‚Ç¨ in cents\n    currency: 'eur',\n    metadata: {\n      simulationId,\n      userId,\n      type: 'oneshot',\n    },\n    description: `CalcuNotaire Pro - Simulation ${simulationId}`,\n  });\n  \n  return paymentIntent;\n}\n\n/**\n * Create subscription for Pro plan\n */\nexport async function createSubscription(userId: string, priceId: string) {\n  const stripeClient = getStripe();\n  \n  const [user] = await db.select()\n    .from(users)\n    .where(eq(users.id, userId))\n    .limit(1);\n  \n  if (!user) {\n    throw new Error('User not found');\n  }\n  \n  // Create or retrieve Stripe customer (persisted in DB)\n  let customerId: string;\n  \n  if (user.stripeCustomerId) {\n    // Verify customer exists in Stripe\n    try {\n      await stripeClient.customers.retrieve(user.stripeCustomerId);\n      customerId = user.stripeCustomerId;\n    } catch {\n      // Customer was deleted, create new one\n      const customer = await stripeClient.customers.create({\n        email: user.email,\n        metadata: { userId: user.id },\n      });\n      customerId = customer.id;\n      \n      await db.update(users)\n        .set({ stripeCustomerId: customerId })\n        .where(eq(users.id, userId));\n    }\n  } else {\n    // Create new customer and persist\n    const customer = await stripeClient.customers.create({\n      email: user.email,\n      metadata: { userId: user.id },\n    });\n    customerId = customer.id;\n    \n    await db.update(users)\n      .set({ stripeCustomerId: customerId })\n      .where(eq(users.id, userId));\n  }\n  \n  // Create subscription\n  const subscription = await stripeClient.subscriptions.create({\n    customer: customerId,\n    items: [{ price: priceId }],\n    payment_behavior: 'default_incomplete',\n    payment_settings: { save_default_payment_method: 'on_subscription' },\n    expand: ['latest_invoice.payment_intent'],\n  });\n  \n  return subscription;\n}\n\n/**\n * Handle successful payment\n */\nexport async function handlePaymentSuccess(paymentIntentId: string) {\n  const stripeClient = getStripe();\n  \n  const paymentIntent = await stripeClient.paymentIntents.retrieve(paymentIntentId);\n  \n  if (paymentIntent.metadata.type === 'oneshot' && paymentIntent.metadata.simulationId) {\n    // Mark simulation as paid\n    await db.update(simulations)\n      .set({\n        isPaid: true,\n        paymentType: 'oneshot',\n        stripePaymentId: paymentIntentId,\n        updatedAt: new Date(),\n      })\n      .where(eq(simulations.id, paymentIntent.metadata.simulationId));\n    \n    console.log(`‚úÖ Simulation ${paymentIntent.metadata.simulationId} marked as paid`);\n  }\n}\n\n/**\n * Verify Stripe webhook signature\n */\nexport function constructWebhookEvent(payload: string | Buffer, signature: string) {\n  const stripeClient = getStripe();\n  const webhookSecret = process.env.STRIPE_WEBHOOK_SECRET;\n  \n  if (!webhookSecret) {\n    throw new Error('STRIPE_WEBHOOK_SECRET not configured');\n  }\n  \n  return stripeClient.webhooks.constructEvent(payload, signature, webhookSecret);\n}\n","size_bytes":4419},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"design_guidelines.md":{"content":"# CalcuNotaire Pro - Design Guidelines\n\n## Design Approach\n\n**System: Professional Fintech/Legaltech Design System**\n\nDrawing inspiration from established French professional tools (impots.gouv.fr for trust) combined with modern fintech aesthetics (Stripe's clarity, Qonto's professionalism). This application demands credibility, precision, and effortless navigation through complex financial calculations.\n\n**Core Principles:**\n- Trust & Authority: Every element reinforces professional credibility\n- Progressive Disclosure: Complex information revealed logically across 6 wizard steps\n- Real-time Feedback: Live calculation panel maintains context throughout journey\n- Accessibility First: Financial tools must be universally usable (AA compliance)\n\n## Color Palette\n\n**Light Mode:**\n- Primary Brand: 215 85% 25% (Deep authoritative blue - trust and finance)\n- Primary Hover: 215 85% 20%\n- Secondary Accent: 160 50% 45% (Balanced teal for confirmations/success)\n- Background Base: 0 0% 100%\n- Background Subtle: 210 20% 98%\n- Background Card: 0 0% 100%\n- Border Default: 214 15% 91%\n- Border Focus: 215 85% 55%\n- Text Primary: 222 47% 11%\n- Text Secondary: 215 16% 47%\n- Text Muted: 215 14% 71%\n\n**Dark Mode:**\n- Primary Brand: 215 80% 60%\n- Primary Hover: 215 80% 55%\n- Secondary Accent: 160 45% 55%\n- Background Base: 222 47% 11%\n- Background Subtle: 217 33% 17%\n- Background Card: 217 33% 15%\n- Border Default: 215 20% 25%\n- Border Focus: 215 80% 50%\n- Text Primary: 210 40% 98%\n- Text Secondary: 215 20% 65%\n- Text Muted: 215 15% 50%\n\n**Semantic Colors:**\n- Success: 142 71% 45% (green for exemptions, validated calculations)\n- Warning: 38 92% 50% (amber for alerts, compliance notices)\n- Error: 0 72% 51% (red for validation errors, tax liabilities)\n- Info: 199 89% 48% (cyan for DVF comparables, informational notices)\n- Tax Highlight: 38 100% 95% (very light amber background for tax amounts in light mode) / 38 50% 15% (dark mode)\n\n## Typography\n\n**Font Families:**\n- Primary: 'Inter' (via Google Fonts) - Professional, highly readable for numbers and forms\n- Monospace: 'JetBrains Mono' - For financial figures, calculations, formulas\n\n**Scale & Hierarchy:**\n- Display (Hero/Marketing): text-5xl (48px), font-bold, tracking-tight\n- H1 (Page Title): text-3xl (30px), font-semibold, tracking-tight\n- H2 (Section): text-2xl (24px), font-semibold\n- H3 (Subsection): text-xl (20px), font-semibold\n- H4 (Card Title): text-lg (18px), font-medium\n- Body Large: text-base (16px), font-normal\n- Body: text-sm (14px), font-normal\n- Small: text-xs (12px), font-normal\n- Financial Figures: text-lg to text-2xl, font-mono, font-semibold\n\n## Layout System\n\n**Spacing Primitives:**\n- Core units: 2, 4, 6, 8, 12, 16, 24 (tailwind units)\n- Form spacing: gap-6 between major sections, gap-4 within groups\n- Card padding: p-6 (desktop), p-4 (mobile)\n- Section margins: mb-8 to mb-12\n- Wizard step container: max-w-4xl mx-auto px-4\n\n**Grid System:**\n- Wizard Main Content: Single column max-w-2xl for forms\n- Results Panel: Sticky sidebar (lg:w-96) on desktop, expandable drawer on mobile\n- Admin Tables: Full-width responsive tables with horizontal scroll\n- DVF Comparables: Grid 1/2/3 columns (sm/md/lg)\n\n## Component Library\n\n### Navigation\n- **Wizard Progress**: Horizontal step indicator with numbered circles, connecting lines, completed/current/future states\n- **Admin Sidebar**: Vertical navigation with icons, active state highlighting, collapsible on mobile\n\n### Forms\n- **Input Fields**: Rounded borders (rounded-md), focus ring (ring-2 ring-primary), clear labels above, helper text below in text-muted\n- **Currency Inputs**: Right-aligned monospace text, ‚Ç¨ symbol suffix, thousands separator\n- **Date Pickers**: Calendar dropdown with French locale, clear format display (DD/MM/YYYY)\n- **Autocomplete**: Dropdown with search, highlights matching text, shows commune + INSEE code\n- **Radio Groups**: Card-based selection for major choices (PP/SCI IR/SCI IS, RP/RS/1st sale), visual differentiation with border-2 on selected\n- **Checkboxes**: Large touch targets, clear labels, used for exemption conditions\n\n### Data Display\n- **Results Panel**: Sticky card with sections: Gross Capital Gain, Tax Breakdown (IR/PS/Surcharge), Exemptions Applied, Net Proceeds. Each value in large monospace font with label\n- **Calculation Breakdown**: Accordion or tabbed sections showing formulas step-by-step\n- **DVF Comparables**: Cards with property image placeholder, address, price, date, link to Etalab\n- **DMTO Table**: Striped rows, sortable columns, version badge, source link icon\n- **Alert Banners**: Full-width colored backgrounds (warning/info/success) with icon, bold message, dismissible\n\n### Actions\n- **Primary Button**: Solid background (bg-primary), white text, rounded-lg, shadow-sm, px-6 py-3\n- **Secondary Button**: Outline (border-2 border-primary), primary text, rounded-lg, px-6 py-3\n- **Wizard Navigation**: Previous (secondary), Next/Calculate (primary), fixed bottom bar on mobile\n- **Paywall CTA**: Large prominent button, contrasting color, micro-animation on hover\n- **Icon Buttons**: For admin actions, hover states with tooltip\n\n### Overlays\n- **Modals**: Centered, max-w-lg, backdrop blur, used for confirmations, previews\n- **Paywall**: Full-screen overlay with pricing cards, feature comparison, payment form integration\n- **PDF Preview**: Full-screen modal with download/share actions\n\n### Specialized Components\n- **Tax Bracket Visualizer**: Horizontal bar chart showing surcharge calculation by tranches (if PV > 50k‚Ç¨)\n- **Net Proceeds Waterfall**: Visual breakdown from sale price ‚Üí net in pocket with each deduction shown\n- **Version Badge**: Small pill showing \"DMTO v2025-06\" with link icon to source\n- **Compliance Checklist**: Green checkmarks or red X's with explanation text for exemption conditions\n- **Legal Disclaimer Banner**: Distinct visual treatment (border-l-4 border-warning) with official text\n\n## Animations\n\n**Minimal, Purposeful Only:**\n- Wizard step transitions: Subtle fade + slide (200ms)\n- Live calculation updates: Number count-up animation (300ms) when values change\n- Form validation: Shake animation on error (400ms)\n- NO decorative animations, parallax, or scroll effects\n\n## Images\n\n**Strategic Use:**\n- **Marketing Pages Only**: Hero section with professional imagery (notary office, documents, French architecture) - blurred background, text overlay\n- **Application UI**: Icon-based, no decorative images\n- **DVF Comparables**: Property image placeholders with fallback to property type icon\n- **Admin**: Data-focused, no images needed\n\n**Hero Image (Marketing/Landing only):**\nLarge hero banner (h-[70vh]) with professional photograph: elegant French notary office or real estate documents, subtle gradient overlay (from-slate-900/80 to-transparent), centered heading + tagline + CTA\n\n## Platform-Specific Notes\n\n**Desktop (lg+):**\n- Two-column layout: Wizard form (flex-1) + sticky results panel (w-96)\n- Full wizard progress at top\n- Horizontal button groups\n\n**Tablet (md):**\n- Single column with expandable results drawer\n- Condensed wizard progress\n\n**Mobile:**\n- Full-width forms, large touch targets (min 44px)\n- Fixed bottom navigation bar for wizard\n- Results panel as collapsible sticky bottom sheet\n- Simplified tables with card view\n\n**Admin Back-Office:**\n- Professional dashboard aesthetic\n- Data tables with filter/search\n- CSV upload with drag-drop zone\n- Version publishing workflow with confirmation dialog\n- Audit logs with timestamp + user + action details\n\nThis design system creates a professional, trustworthy environment for complex financial calculations while maintaining clarity and usability throughout the 6-step wizard journey.","size_bytes":7723},"server/pdf-generator.ts":{"content":"import puppeteer from 'puppeteer';\nimport QRCode from 'qrcode';\nimport type { Simulation } from '@shared/schema';\n\nexport async function generateSimulationPDF(simulation: Simulation, baseUrl: string): Promise<Buffer> {\n  const browser = await puppeteer.launch({\n    headless: true,\n    executablePath: '/nix/store/zi4f80l169xlmivz8vja8wlphq74qqk0-chromium-125.0.6422.141/bin/chromium',\n    args: [\n      '--no-sandbox',\n      '--disable-setuid-sandbox',\n      '--disable-dev-shm-usage',\n      '--disable-gpu'\n    ]\n  });\n\n  try {\n    const page = await browser.newPage();\n    \n    // Generate QR code for sharing\n    const shareUrl = simulation.shareToken \n      ? `${baseUrl}/share/${simulation.shareToken}` \n      : baseUrl;\n    const qrCodeDataUrl = await QRCode.toDataURL(shareUrl);\n    \n    const inputData = simulation.inputData as any;\n    const resultData = simulation.resultData as any;\n    \n    // Build HTML content\n    const html = `\n<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>CalcuNotaire Pro - Simulation ${simulation.id}</title>\n  <style>\n    * { margin: 0; padding: 0; box-sizing: border-box; }\n    body {\n      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n      color: #1a1a1a;\n      line-height: 1.6;\n      padding: 40px;\n    }\n    .header {\n      border-bottom: 4px solid #1e3a8a;\n      padding-bottom: 20px;\n      margin-bottom: 30px;\n    }\n    .header h1 {\n      color: #1e3a8a;\n      font-size: 28px;\n      margin-bottom: 5px;\n    }\n    .header p {\n      color: #6b7280;\n      font-size: 14px;\n    }\n    .section {\n      margin-bottom: 30px;\n    }\n    .section-title {\n      background: #f3f4f6;\n      padding: 10px 15px;\n      font-size: 18px;\n      font-weight: 600;\n      color: #1e3a8a;\n      margin-bottom: 15px;\n      border-left: 4px solid #1e3a8a;\n    }\n    .info-grid {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      gap: 15px;\n      margin-bottom: 15px;\n    }\n    .info-item {\n      padding: 12px;\n      background: #f9fafb;\n      border-radius: 4px;\n    }\n    .info-label {\n      font-size: 12px;\n      color: #6b7280;\n      margin-bottom: 4px;\n    }\n    .info-value {\n      font-size: 16px;\n      font-weight: 600;\n      color: #1a1a1a;\n    }\n    .result-box {\n      background: #ecfdf5;\n      border: 2px solid #10b981;\n      padding: 20px;\n      border-radius: 8px;\n      margin-top: 20px;\n    }\n    .result-box h3 {\n      color: #065f46;\n      margin-bottom: 15px;\n    }\n    .result-row {\n      display: flex;\n      justify-content: space-between;\n      padding: 8px 0;\n      border-bottom: 1px solid #d1fae5;\n    }\n    .result-row:last-child {\n      border-bottom: none;\n      font-size: 20px;\n      font-weight: bold;\n      padding-top: 15px;\n      margin-top: 10px;\n      border-top: 2px solid #10b981;\n    }\n    .formula {\n      background: #fffbeb;\n      border-left: 3px solid #f59e0b;\n      padding: 15px;\n      margin: 15px 0;\n      font-family: 'Courier New', monospace;\n      font-size: 13px;\n    }\n    .formula-title {\n      font-weight: 600;\n      color: #92400e;\n      margin-bottom: 8px;\n    }\n    .footer {\n      margin-top: 50px;\n      padding-top: 20px;\n      border-top: 2px solid #e5e7eb;\n    }\n    .legal {\n      font-size: 10px;\n      color: #6b7280;\n      line-height: 1.4;\n      margin-bottom: 15px;\n    }\n    .qr-section {\n      text-align: center;\n      margin-top: 20px;\n    }\n    .qr-section img {\n      width: 120px;\n      height: 120px;\n    }\n    .timestamp {\n      text-align: right;\n      font-size: 11px;\n      color: #9ca3af;\n      margin-top: 10px;\n    }\n    .certified {\n      background: #eff6ff;\n      border: 1px solid #3b82f6;\n      padding: 15px;\n      border-radius: 6px;\n      margin-top: 20px;\n    }\n    .certified-title {\n      color: #1e40af;\n      font-weight: 600;\n      margin-bottom: 8px;\n    }\n    .alert {\n      background: #fef3c7;\n      border-left: 4px solid #f59e0b;\n      padding: 12px;\n      margin: 15px 0;\n    }\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      margin: 15px 0;\n    }\n    th, td {\n      padding: 10px;\n      text-align: left;\n      border-bottom: 1px solid #e5e7eb;\n    }\n    th {\n      background: #f3f4f6;\n      font-weight: 600;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"header\">\n    <h1>üìä CalcuNotaire Pro</h1>\n    <p>Simulation de Plus-Value Immobili√®re</p>\n    <p style=\"margin-top: 5px;\">R√©f: ${simulation.id.substring(0, 8).toUpperCase()}</p>\n  </div>\n\n  <div class=\"section\">\n    <div class=\"section-title\">üìã Informations du bien</div>\n    <div class=\"info-grid\">\n      <div class=\"info-item\">\n        <div class=\"info-label\">Type de vendeur</div>\n        <div class=\"info-value\">${inputData.role === 'pp' ? 'Personne Physique' : inputData.role === 'sci_ir' ? 'SCI IR' : 'SCI IS'}</div>\n      </div>\n      <div class=\"info-item\">\n        <div class=\"info-label\">Occupation</div>\n        <div class=\"info-value\">${inputData.occupation === 'rp' ? 'R√©sidence Principale' : inputData.occupation === 'rs' ? 'R√©sidence Secondaire' : 'Premi√®re vente'}</div>\n      </div>\n      <div class=\"info-item\">\n        <div class=\"info-label\">Prix d'acquisition</div>\n        <div class=\"info-value\">${new Intl.NumberFormat('fr-FR', {style: 'currency', currency: 'EUR'}).format(inputData.purchasePrice)}</div>\n      </div>\n      <div class=\"info-item\">\n        <div class=\"info-label\">Prix de cession</div>\n        <div class=\"info-value\">${new Intl.NumberFormat('fr-FR', {style: 'currency', currency: 'EUR'}).format(inputData.salePrice)}</div>\n      </div>\n      <div class=\"info-item\">\n        <div class=\"info-label\">Date d'acquisition</div>\n        <div class=\"info-value\">${new Date(inputData.purchaseDate).toLocaleDateString('fr-FR')}</div>\n      </div>\n      <div class=\"info-item\">\n        <div class=\"info-label\">Date de cession</div>\n        <div class=\"info-value\">${new Date(inputData.saleDate).toLocaleDateString('fr-FR')}</div>\n      </div>\n    </div>\n  </div>\n\n  ${resultData.isRpExempt ? `\n  <div class=\"alert\">\n    <strong>‚úÖ Exon√©ration R√©sidence Principale</strong><br>\n    Cette vente b√©n√©ficie d'une exon√©ration totale d'imp√¥t sur la plus-value (article 150 U du CGI).\n  </div>\n  ` : ''}\n\n  <div class=\"section\">\n    <div class=\"section-title\">üßÆ Calculs d√©taill√©s (formules BOFiP)</div>\n    \n    <div class=\"formula\">\n      <div class=\"formula-title\">Plus-value brute</div>\n      Prix de cession - Prix d'acquisition corrig√©<br>\n      = ${new Intl.NumberFormat('fr-FR', {style: 'currency', currency: 'EUR'}).format(inputData.salePrice)} - ${new Intl.NumberFormat('fr-FR', {style: 'currency', currency: 'EUR'}).format(resultData.acquisitionBase || inputData.purchasePrice)}<br>\n      = <strong>${new Intl.NumberFormat('fr-FR', {style: 'currency', currency: 'EUR'}).format(resultData.grossCapitalGain)}</strong>\n    </div>\n\n    ${!resultData.isRpExempt && !resultData.isFirstSaleExempt ? `\n    <div class=\"formula\">\n      <div class=\"formula-title\">Abattements pour dur√©e de d√©tention (${resultData.holdingYears} ans)</div>\n      ‚Ä¢ IR (19%) : ${resultData.irAllowancePercent}% d'abattement<br>\n      ‚Ä¢ PS (17.2%) : ${resultData.psAllowancePercent}% d'abattement\n    </div>\n\n    <table>\n      <tr>\n        <th>Imp√¥t</th>\n        <th>Base taxable</th>\n        <th>Taux</th>\n        <th>Montant</th>\n      </tr>\n      <tr>\n        <td>Imp√¥t sur le revenu</td>\n        <td>${new Intl.NumberFormat('fr-FR', {style: 'currency', currency: 'EUR'}).format(resultData.irTaxableBase)}</td>\n        <td>19%</td>\n        <td><strong>${new Intl.NumberFormat('fr-FR', {style: 'currency', currency: 'EUR'}).format(resultData.irTax)}</strong></td>\n      </tr>\n      <tr>\n        <td>Pr√©l√®vements sociaux</td>\n        <td>${new Intl.NumberFormat('fr-FR', {style: 'currency', currency: 'EUR'}).format(resultData.psTaxableBase)}</td>\n        <td>17.2%</td>\n        <td><strong>${new Intl.NumberFormat('fr-FR', {style: 'currency', currency: 'EUR'}).format(resultData.psTax)}</strong></td>\n      </tr>\n      ${resultData.surcharge > 0 ? `\n      <tr>\n        <td>Surtaxe (PV &gt; 50k‚Ç¨)</td>\n        <td colspan=\"2\">${resultData.surchangeTranche}</td>\n        <td><strong>${new Intl.NumberFormat('fr-FR', {style: 'currency', currency: 'EUR'}).format(resultData.surcharge)}</strong></td>\n      </tr>\n      ` : ''}\n    </table>\n    ` : ''}\n  </div>\n\n  <div class=\"result-box\">\n    <h3>üí∞ R√©sum√© financier</h3>\n    <div class=\"result-row\">\n      <span>Plus-value brute</span>\n      <span>${new Intl.NumberFormat('fr-FR', {style: 'currency', currency: 'EUR'}).format(resultData.grossCapitalGain)}</span>\n    </div>\n    <div class=\"result-row\">\n      <span>Imp√¥t sur le revenu (19%)</span>\n      <span>${new Intl.NumberFormat('fr-FR', {style: 'currency', currency: 'EUR'}).format(resultData.irTax || 0)}</span>\n    </div>\n    <div class=\"result-row\">\n      <span>Pr√©l√®vements sociaux (17.2%)</span>\n      <span>${new Intl.NumberFormat('fr-FR', {style: 'currency', currency: 'EUR'}).format(resultData.psTax || 0)}</span>\n    </div>\n    ${resultData.surcharge > 0 ? `\n    <div class=\"result-row\">\n      <span>Surtaxe</span>\n      <span>${new Intl.NumberFormat('fr-FR', {style: 'currency', currency: 'EUR'}).format(resultData.surcharge)}</span>\n    </div>\n    ` : ''}\n    <div class=\"result-row\">\n      <span>Total imp√¥ts</span>\n      <span>${new Intl.NumberFormat('fr-FR', {style: 'currency', currency: 'EUR'}).format(resultData.totalTax || 0)}</span>\n    </div>\n    <div class=\"result-row\">\n      <span>Net vendeur</span>\n      <span style=\"color: #065f46;\">${new Intl.NumberFormat('fr-FR', {style: 'currency', currency: 'EUR'}).format(resultData.netProceeds)}</span>\n    </div>\n  </div>\n\n  <div class=\"certified\">\n    <div class=\"certified-title\">‚úì Certification du document</div>\n    <p style=\"font-size: 12px; color: #1e40af;\">\n      Ce document a √©t√© g√©n√©r√© automatiquement par CalcuNotaire Pro le ${new Date().toLocaleString('fr-FR')}.<br>\n      Les calculs sont bas√©s sur les formules officielles du Bulletin Officiel des Finances Publiques (BOFiP).<br>\n      Version du moteur de calcul: v1.0.0\n    </p>\n  </div>\n\n  <div class=\"footer\">\n    <div class=\"legal\">\n      <strong>MENTIONS L√âGALES</strong><br>\n      Ce document constitue une simulation indicative et ne saurait se substituer √† l'avis d'un professionnel (notaire, avocat fiscaliste, expert-comptable). \n      CalcuNotaire Pro ne peut √™tre tenu responsable des d√©cisions prises sur la base de ce document. Les taux d'imposition et r√©glementations fiscales \n      sont susceptibles d'√©voluer. Il est recommand√© de consulter un professionnel pour valider ces calculs avant toute transaction immobili√®re.\n      <br><br>\n      <strong>SOURCES R√âGLEMENTAIRES :</strong><br>\n      ‚Ä¢ Code G√©n√©ral des Imp√¥ts (CGI) - Articles 150 U √† 150 VH<br>\n      ‚Ä¢ Bulletin Officiel des Finances Publiques (BOFiP) - BOI-RFPI-PVI<br>\n      ‚Ä¢ Loi de finances 2024<br>\n      ‚Ä¢ Bar√®me des abattements pour dur√©e de d√©tention (Art. 150 VC du CGI)\n    </div>\n\n    <div class=\"qr-section\">\n      <img src=\"${qrCodeDataUrl}\" alt=\"QR Code\" />\n      <p style=\"font-size: 11px; color: #6b7280; margin-top: 8px;\">Scannez pour acc√©der √† cette simulation</p>\n    </div>\n\n    <div class=\"timestamp\">\n      Document g√©n√©r√© le ${new Date().toLocaleString('fr-FR', { \n        dateStyle: 'full', \n        timeStyle: 'long' \n      })}<br>\n      CalcuNotaire Pro ¬© 2024 - Tous droits r√©serv√©s\n    </div>\n  </div>\n</body>\n</html>\n    `;\n\n    await page.setContent(html, { waitUntil: 'networkidle0' });\n    \n    const pdf = await page.pdf({\n      format: 'A4',\n      printBackground: true,\n      margin: {\n        top: '20mm',\n        right: '15mm',\n        bottom: '20mm',\n        left: '15mm'\n      }\n    });\n\n    return Buffer.from(pdf);\n  } finally {\n    await browser.close();\n  }\n}\n","size_bytes":11879},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/examples/ThemeToggle.tsx":{"content":"import ThemeToggle from '../ThemeToggle';\n\nexport default function ThemeToggleExample() {\n  return (\n    <div className=\"flex items-center justify-center p-8\">\n      <ThemeToggle />\n    </div>\n  );\n}\n","size_bytes":200},"README.md":{"content":"# üè° CalcuNotaire Pro\n\n> Plateforme SaaS professionnelle de simulation de plus-values immobili√®res et frais de notaire (DMTO) - Conforme BOFiP et DGFiP\n\n[![CI/CD](https://github.com/your-repo/calcunotaire-pro/workflows/CI/CD%20Pipeline/badge.svg)](https://github.com/your-repo/calcunotaire-pro/actions)\n[![License](https://img.shields.io/badge/license-Proprietary-blue.svg)](LICENSE)\n[![Made with ‚ù§Ô∏è in France](https://img.shields.io/badge/Made%20with%20%E2%9D%A4%EF%B8%8F-in%20France-blue)](https://fr.wikipedia.org/wiki/France)\n\n---\n\n## üìä Vue d'ensemble\n\nCalcuNotaire Pro est une application web production-ready qui permet aux particuliers, SCI, et professionnels de l'immobilier de calculer pr√©cis√©ment :\n\n‚úÖ **Plus-values immobili√®res** avec abattements pour dur√©e de d√©tention (BOFiP)  \n‚úÖ **Imp√¥t sur le revenu** (IR) √† 19% avec exon√©rations  \n‚úÖ **Pr√©l√®vements sociaux** (PS) √† 17.2% avec abattements sp√©cifiques  \n‚úÖ **Surtaxes** sur plus-values > 50k‚Ç¨  \n‚úÖ **DMTO** (Droits de Mutation √† Titre On√©reux) par d√©partement  \n‚úÖ **Exports PDF certifi√©s** avec QR codes, timestamps et disclaimers l√©gaux  \n‚úÖ **Exports CSV** pour analyse dans Excel/Sheets  \n\n---\n\n## üöÄ D√©marrage rapide\n\n### Pr√©requis\n```bash\nNode.js >= 20.0.0\nnpm >= 10.0.0\nPostgreSQL 15+ (Neon/Supabase recommand√©)\n```\n\n### Installation locale\n\n```bash\n# 1. Cloner le repo\ngit clone https://github.com/your-repo/calcunotaire-pro.git\ncd calcunotaire-pro\n\n# 2. Installer les d√©pendances\nnpm install\n\n# 3. Copier et configurer les variables d'environnement\ncp .env.example .env\n# √âditer .env avec vos valeurs (DATABASE_URL, JWT_SECRET, etc.)\n\n# 4. Initialiser la base de donn√©es\nnpm run db:push\n\n# 5. (Optionnel) Seed data DMTO et INSEE\nnpm run db:seed\n\n# 6. Lancer en dev\nnpm run dev\n```\n\nL'application sera accessible sur `http://localhost:5000`\n\n---\n\n## üèóÔ∏è Architecture\n\n### Stack Technique\n\n**Frontend**\n- ‚öõÔ∏è React 18 + TypeScript\n- üé® TailwindCSS + Shadcn/UI (design system)\n- üîÑ TanStack Query (server state)\n- üõ£Ô∏è Wouter (routing)\n- üìù React Hook Form + Zod (validation)\n- üåô Dark mode natif\n\n**Backend**\n- üü¢ Node.js + Express\n- üìò TypeScript strict mode\n- üóÑÔ∏è Drizzle ORM + PostgreSQL\n- üîê JWT Authentication (httpOnly cookies)\n- üìÑ Puppeteer (g√©n√©ration PDF)\n- üí≥ Stripe (paiements)\n\n**Infrastructure**\n- ‚òÅÔ∏è Vercel (frontend CDN)\n- üê≥ Render/Fly.io (backend containers)\n- üóÑÔ∏è Neon PostgreSQL (serverless)\n- üì¶ Scaleway/Wasabi S3 (stockage PDFs)\n- üìä Sentry (monitoring)\n- ‚úÖ GitHub Actions (CI/CD)\n\n### Structure du projet\n```\ncalcunotaire-pro/\n‚îú‚îÄ‚îÄ client/                 # Frontend React\n‚îÇ   ‚îú‚îÄ‚îÄ src/\n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ pages/          # Pages (Home, Login, Admin, CGU, etc.)\n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ components/     # Composants r√©utilisables (Shadcn/UI)\n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ lib/            # Utils (auth, queryClient, etc.)\n‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ hooks/          # Custom React hooks\n‚îÇ   ‚îî‚îÄ‚îÄ public/             # Assets statiques, manifest.json, SW\n‚îú‚îÄ‚îÄ server/                 # Backend Express\n‚îÇ   ‚îú‚îÄ‚îÄ routes.ts           # API routes\n‚îÇ   ‚îú‚îÄ‚îÄ auth.ts             # Authentification JWT\n‚îÇ   ‚îú‚îÄ‚îÄ db.ts               # Drizzle DB connection\n‚îÇ   ‚îú‚îÄ‚îÄ pdf-generator.ts    # G√©n√©ration PDF Puppeteer\n‚îÇ   ‚îî‚îÄ‚îÄ middleware/         # Rate limiting, security headers\n‚îú‚îÄ‚îÄ shared/                 # Code partag√© frontend/backend\n‚îÇ   ‚îú‚îÄ‚îÄ schema.ts           # Drizzle schema + Zod types\n‚îÇ   ‚îú‚îÄ‚îÄ calc-core.ts        # Moteur de calcul BOFiP\n‚îÇ   ‚îî‚îÄ‚îÄ validation.ts       # Sch√©mas Zod validation\n‚îú‚îÄ‚îÄ docs/                   # Documentation technique\n‚îÇ   ‚îú‚îÄ‚îÄ deployment.md       # Guide d√©ploiement\n‚îÇ   ‚îú‚îÄ‚îÄ security.md         # S√©curit√© & OWASP\n‚îÇ   ‚îú‚îÄ‚îÄ rgpd.md             # Conformit√© RGPD\n‚îÇ   ‚îî‚îÄ‚îÄ pwa.md              # Progressive Web App\n‚îî‚îÄ‚îÄ .github/workflows/      # CI/CD GitHub Actions\n```\n\n---\n\n## üîê S√©curit√©\n\n### Mesures impl√©ment√©es\n\n‚úÖ **Headers de s√©curit√©** (CSP strict, HSTS, X-Frame-Options, etc.)  \n‚úÖ **Authentication** : JWT httpOnly + SameSite cookies  \n‚úÖ **Rate limiting** : Auth (5 req/15min), Compute (10 req/min), API (100 req/15min)  \n‚úÖ **Validation stricte** : Zod schemas frontend + backend  \n‚úÖ **Chiffrement** : Bcrypt (cost 10) pour passwords  \n‚úÖ **CSRF protection** : SameSite cookies  \n‚úÖ **SQL Injection** : Drizzle ORM (prepared statements)  \n‚úÖ **Audit logs** : Tra√ßabilit√© toutes actions sensibles  \n\nVoir `/docs/security.md` pour le d√©tail complet.\n\n---\n\n## ‚öñÔ∏è Conformit√© RGPD\n\nCalcuNotaire Pro est **100% conforme RGPD** :\n\n‚úÖ H√©bergement **exclusivement UE** (Neon/Vercel/Render Europe)  \n‚úÖ **Droit √† l'oubli** : endpoint DELETE `/api/auth/account`  \n‚úÖ **Droit d'acc√®s** : export CSV des simulations  \n‚úÖ **Droit de rectification** : √©dition compte utilisateur  \n‚úÖ **Consentement cookies** : banni√®re opt-in analytics  \n‚úÖ **Pages l√©gales** : CGU, Confidentialit√©, Cookies  \n‚úÖ **Conservation limit√©e** : 5 ans max, purge automatique  \n‚úÖ **Registre sous-traitants** : document√© dans `/docs/rgpd.md`  \n\n---\n\n## üì± PWA (Progressive Web App)\n\nL'application est installable sur mobile/desktop :\n\n‚úÖ **Manifest.json** : ic√¥nes, couleurs, standalone mode  \n‚úÖ **Service Worker** : cache strat√©gique Network-First  \n‚úÖ **Offline fallback** : page `/offline.html`  \n‚úÖ **Add to Home Screen** : prompt iOS + Android  \n‚úÖ **Lighthouse PWA** : score ‚â• 90  \n\nTestez : ouvrez `https://app.calcu-notaire.fr` sur mobile ‚Üí \"Ajouter √† l'√©cran d'accueil\"\n\n---\n\n## üí≥ Paiements Stripe\n\n### Mod√®les de revenus\n\n1. **One-shot** : 29-39‚Ç¨ / simulation avec PDF certifi√©\n2. **Abonnements** :\n   - Standard : 29‚Ç¨/mois (10 simulations/mois)\n   - Pro : 79‚Ç¨/mois (illimit√© + support prioritaire)\n   - Cabinet : 199‚Ç¨/mois (multi-utilisateurs + API)\n\n### Webhooks Stripe\n```bash\n# URL √† configurer dans Stripe Dashboard\nhttps://api.calcu-notaire.fr/api/stripe/webhook\n\n# Events √©cout√©s :\n- checkout.session.completed\n- invoice.paid\n- customer.subscription.updated\n- customer.subscription.deleted\n```\n\n---\n\n## üìÑ G√©n√©ration PDF\n\nLes PDFs g√©n√©r√©s incluent :\n\nüìã **Inputs** : prix, dates, type de bien, occupation  \nüßÆ **Formules BOFiP** : d√©tail calcul abattements IR/PS  \nüí∞ **R√©sultats** : PV brute, imp√¥ts, net vendeur  \nüîó **QR Code** : lien partage s√©curis√©  \n‚è∞ **Timestamp** : horodatage certifi√©  \n‚öñÔ∏è **Disclaimers l√©gaux** : sources BOFiP, DGFiP, Service-Public  \n\nTechnologie : Puppeteer + Chromium headless\n\n---\n\n## üß™ Tests\n\n```bash\n# Linter\nnpm run lint\n\n# TypeScript check\nnpm run typecheck\n\n# Tests unitaires (√† impl√©menter)\nnpm test\n\n# Tests E2E Playwright\nnpm run test:e2e\n\n# Lighthouse audit\nnpm run lighthouse\n```\n\n---\n\n## üöÄ D√©ploiement\n\n### Environnements\n\n| Env | Frontend | Backend | Database |\n|-----|----------|---------|----------|\n| **Dev** | localhost:5000 | localhost:5000 | local/Neon dev |\n| **Staging** | staging.calcu-notaire.fr | api-staging.calcu-notaire.fr | Neon staging |\n| **Prod** | app.calcu-notaire.fr | api.calcu-notaire.fr | Neon prod |\n\n### Pipeline CI/CD\n\n```\ngit push develop ‚Üí Lint + Build\ngit push staging ‚Üí Deploy Staging automatique\ngit push main    ‚Üí Deploy Production automatique\n```\n\nVoir `/docs/deployment.md` pour le guide complet.\n\n---\n\n## üìä Monitoring\n\n### Uptime & Alertes\n- **UptimeRobot** : ping `/health` toutes les 5 minutes\n- **Sentry** : errors frontend + backend\n- **Slack** : alertes si uptime < 99.9% ou latence > 800ms\n\n### Metrics\n- Disponibilit√© : > 99.9%\n- Latence p95 : < 800ms\n- Taux d'erreur : < 0.1%\n\n---\n\n## üìö Documentation compl√®te\n\n| Doc | Description |\n|-----|-------------|\n| [Deployment](docs/deployment.md) | CI/CD, DNS, secrets |\n| [Security](docs/security.md) | Headers, OWASP, rate-limit |\n| [RGPD](docs/rgpd.md) | Conformit√©, dur√©es, droits |\n| [PWA](docs/pwa.md) | Manifest, cache, offline |\n| [Runbooks](docs/runbooks.md) | Incidents, rollback |\n\n---\n\n## üõ†Ô∏è Scripts NPM\n\n```bash\nnpm run dev          # Dev server (frontend + backend)\nnpm run build        # Build production\nnpm run preview      # Preview build local\nnpm run db:push      # Push schema to database\nnpm run db:studio    # Drizzle Studio (GUI)\nnpm run db:seed      # Seed DMTO et INSEE data\n```\n\n---\n\n## ü§ù Contribution\n\nCe projet est **propri√©taire** et n'accepte pas de contributions externes.\n\nPour rapporter un bug : [GitHub Issues](https://github.com/your-repo/calcunotaire-pro/issues)\n\n---\n\n## üìú License\n\nCopyright ¬© 2024 CalcuNotaire Pro. Tous droits r√©serv√©s.\n\n---\n\n## üìû Support\n\n- **Email** : support@calcu-notaire.fr\n- **Documentation** : https://docs.calcu-notaire.fr\n- **Status** : https://status.calcu-notaire.fr\n\n---\n\n<div align=\"center\">\n\n**Fait avec ‚ù§Ô∏è en France üá´üá∑**\n\n[Website](https://app.calcu-notaire.fr) ‚Ä¢ [Documentation](https://docs.calcu-notaire.fr) ‚Ä¢ [Twitter](https://twitter.com/calcunotaire)\n\n</div>\n","size_bytes":9063},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"replit.md":{"content":"# CalcuNotaire Pro\n\n## Overview\n\nCalcuNotaire Pro is a professional French real estate capital gains and tax calculation SaaS platform. It provides notarial simulations for property sales, calculating capital gains, tax liabilities (IR, PS, surcharges), exemptions, and net proceeds. The application targets individuals (Personne Physique), SCI IR, and SCI IS entities, delivering certified PDF reports with official BOFiP and DGFiP formula compliance.\n\n**Core Features:**\n- 6-step wizard for property sale simulation\n- Real-time capital gains calculation with French tax law compliance\n- DMTO (property transfer tax) estimation by department\n- DVF (Demande de Valeurs Fonci√®res) comparable property data integration\n- PDF generation with QR codes and official source citations\n- Payment processing (one-shot purchases and subscriptions via Stripe)\n- Admin back-office for DMTO rate management and audit logs\n- PWA support for mobile-first experience\n\n**Target Users:** Real estate professionals, notaries, property sellers, SCI managers\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n\n**Framework:** React 18+ with TypeScript, built using Vite\n\n**UI Components:** Shadcn/ui component library (New York style) with Radix UI primitives for accessibility\n\n**Styling:** TailwindCSS with custom design tokens following professional fintech/legaltech aesthetics\n- Light/dark mode support with theme toggle\n- Custom color palette emphasizing trust (deep blue primary) and authority\n- Responsive mobile-first design (PWA-ready)\n\n**State Management:**\n- TanStack Query (React Query) for server state and API caching\n- React Context for authentication state\n- Local component state for wizard form progression\n\n**Routing:** Wouter for lightweight client-side routing\n\n**Form Handling:** React Hook Form with Zod validation schemas for strict input validation\n\n**Key Design Decisions:**\n- Progressive disclosure through 6-step wizard (Essentials ‚Üí Acquisition ‚Üí Cession ‚Üí SCI ‚Üí Surface ‚Üí Results)\n- Live calculation panel (sticky sidebar) maintains context throughout user journey\n- Accessibility-first approach (AA compliance target)\n- Professional color scheme inspired by French government portals (impots.gouv.fr) and modern fintech (Stripe, Qonto)\n\n### Backend Architecture\n\n**Runtime:** Node.js with Express.js\n\n**Language:** TypeScript with ES modules\n\n**API Design:** RESTful JSON endpoints with cookie-based JWT authentication\n\n**Authentication & Security:**\n- JWT tokens stored in HttpOnly cookies (7-day expiration)\n- Bcrypt password hashing (cost factor 10)\n- Rate limiting at multiple levels:\n  - Auth endpoints: 5 requests/15 minutes\n  - Calculation endpoints: 10 requests/minute\n  - General API: 100 requests/15 minutes\n- CORS configuration with trust proxy for deployment behind reverse proxies\n\n**Calculation Engine:** Pure TypeScript functions in `shared/calc-core.ts`\n- Implements official BOFiP formulas for capital gains taxation\n- Supports PP (Personne Physique), SCI IR, and SCI IS tax regimes\n- Handles exemptions (principal residence, first sale + reinvestment)\n- Progressive tax rates and surcharges for high capital gains\n\n**PDF Generation:** Puppeteer for server-side HTML-to-PDF rendering with QR code generation (qrcode library)\n\n**Key Design Decisions:**\n- Separation of calculation logic (`shared/calc-core.ts`) from API layer for testability\n- Input validation at API boundary using Zod schemas before passing to calculation engine\n- Stateless API design (JWT in cookies, no server-side sessions)\n- Raw body parsing specifically for Stripe webhooks before general JSON middleware\n\n### Data Architecture\n\n**Database:** PostgreSQL 15+ via Neon serverless driver\n\n**ORM:** Drizzle ORM with schema-first approach\n\n**Schema Design:**\n- `users`: Authentication, Stripe customer linking, admin flags\n- `simulations`: JSONB storage for flexible input/result data, payment tracking\n- `dmtoTable`: Versioned DMTO (property transfer tax) rates by department\n- `inseeDept`: INSEE commune/department reference data\n- `dvfCache`: Cached DVF comparable property data (7-day TTL)\n- `auditLogs`: Compliance and security audit trail\n\n**Migrations:** Drizzle Kit for schema migrations (`drizzle.config.ts`)\n\n**Key Design Decisions:**\n- JSONB for simulation data allows schema evolution without migrations\n- Versioned DMTO rates (`version`, `validFrom`, `validTo`) enable historical accuracy\n- Separate audit log table for RGPD compliance and security monitoring\n- Database connection pooling via Neon serverless for serverless deployment compatibility\n\n### External Dependencies\n\n**Payment Processing:**\n- **Stripe** (stripe, @stripe/stripe-js, @stripe/react-stripe-js)\n  - One-shot payments (‚Ç¨39 for single simulation PDF unlock)\n  - Subscription management (Standard/Pro/Cabinet tiers)\n  - Webhook handling for payment confirmations\n  - Customer and subscription ID stored in users table\n\n**Database:**\n- **Neon** (preferred) or **Supabase** for managed PostgreSQL\n  - Serverless PostgreSQL with WebSocket support (@neondatabase/serverless)\n  - Connection pooling for high availability\n\n**External Data Sources:**\n- **DGFiP (Direction G√©n√©rale des Finances Publiques):** DMTO rate tables (imported via CSV)\n- **INSEE:** Commune and department reference data\n- **Etalab DVF API:** Comparable property sale data (Demande de Valeurs Fonci√®res)\n  - Used for market validation\n  - 3-5 comparables within radius\n  - Links to app.dvf.etalab.gouv.fr\n\n**File Storage:**\n- **S3-compatible storage** (Scaleway or Wasabi recommended)\n  - PDF exports (`pdfUrl` in simulations table)\n  - CSV exports\n  - Future: invoice storage\n\n**Frontend Libraries:**\n- **Radix UI:** Accessible component primitives (20+ components)\n- **Lucide React:** Icon library\n- **TailwindCSS:** Utility-first styling\n- **React Hook Form + Zod:** Form validation\n- **TanStack Query:** API state management\n\n**Development & Deployment:**\n- **Vite:** Build tool and dev server\n- **GitHub Actions:** CI/CD pipeline (lint, typecheck, test, deploy)\n- **Vercel:** Frontend hosting (recommended)\n- **Render/Fly.io:** Backend API hosting (recommended)\n\n**Monitoring & Compliance:**\n- Health endpoint (`/health`) for uptime monitoring\n- Audit logs for RGPD compliance (5-year retention)\n- GDPR-compliant data retention policies documented in `/docs/rgpd.md`\n\n**Key Integration Decisions:**\n- Stripe webhooks require raw body parsing (handled before JSON middleware)\n- DVF data cached for 7 days to reduce external API load\n- DMTO rates versioned to support historical simulations and regulatory changes\n- PDF generation server-side (Puppeteer) rather than client-side for certification trust","size_bytes":6748},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/LiveResultsPanel.tsx":{"content":"import { Card } from \"@/components/ui/card\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Info } from \"lucide-react\";\n\ninterface LiveResultsPanelProps {\n  grossCapitalGain: number;\n  irAllowance: number;\n  psAllowance: number;\n  irTax: number;\n  psTax: number;\n  surcharge: number;\n  exemptions: string[];\n  netProceeds: number;\n  salePrice: number;\n}\n\nexport default function LiveResultsPanel({\n  grossCapitalGain,\n  irAllowance,\n  psAllowance,\n  irTax,\n  psTax,\n  surcharge,\n  exemptions,\n  netProceeds,\n  salePrice\n}: LiveResultsPanelProps) {\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('fr-FR', {\n      style: 'currency',\n      currency: 'EUR',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(amount);\n  };\n\n  return (\n    <Card className=\"p-6 sticky top-4\" data-testid=\"live-results-panel\">\n      <div className=\"space-y-6\">\n        <div>\n          <h3 className=\"text-lg font-semibold mb-1\">R√©sultat en Direct</h3>\n          <p className=\"text-sm text-muted-foreground\">Calcul instantan√© selon vos donn√©es</p>\n        </div>\n\n        <Separator />\n\n        <div className=\"space-y-4\">\n          <div>\n            <div className=\"flex items-center justify-between mb-1\">\n              <span className=\"text-sm text-muted-foreground\">Prix de vente</span>\n              <span className=\"text-sm font-medium\">{formatCurrency(salePrice)}</span>\n            </div>\n          </div>\n\n          <div className=\"bg-muted/50 rounded-md p-4\">\n            <div className=\"flex items-center justify-between mb-1\">\n              <span className=\"text-sm font-medium\">Plus-value brute</span>\n              <span className=\"text-xl font-mono font-semibold\" data-testid=\"text-gross-capital-gain\">\n                {formatCurrency(grossCapitalGain)}\n              </span>\n            </div>\n          </div>\n\n          <div className=\"space-y-2\">\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-xs text-muted-foreground\">Abattement IR ({irAllowance}%)</span>\n              <span className=\"text-xs font-mono\">-{formatCurrency(grossCapitalGain * irAllowance / 100)}</span>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-xs text-muted-foreground\">Abattement PS ({psAllowance}%)</span>\n              <span className=\"text-xs font-mono\">-{formatCurrency(grossCapitalGain * psAllowance / 100)}</span>\n            </div>\n          </div>\n\n          <Separator />\n\n          <div className=\"space-y-2\">\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-sm\">IR (19%)</span>\n              <span className=\"text-sm font-mono font-medium text-error\" data-testid=\"text-ir-tax\">\n                {formatCurrency(irTax)}\n              </span>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-sm\">PS (17,2%)</span>\n              <span className=\"text-sm font-mono font-medium text-error\" data-testid=\"text-ps-tax\">\n                {formatCurrency(psTax)}\n              </span>\n            </div>\n            {surcharge > 0 && (\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm\">Surtaxe</span>\n                <span className=\"text-sm font-mono font-medium text-error\" data-testid=\"text-surcharge\">\n                  {formatCurrency(surcharge)}\n                </span>\n              </div>\n            )}\n          </div>\n\n          {exemptions.length > 0 && (\n            <>\n              <Separator />\n              <div>\n                <span className=\"text-xs text-muted-foreground mb-2 block\">Exon√©rations</span>\n                <div className=\"space-y-1\">\n                  {exemptions.map((exemption, idx) => (\n                    <Badge key={idx} variant=\"outline\" className=\"text-xs bg-success/10 border-success text-success\">\n                      {exemption}\n                    </Badge>\n                  ))}\n                </div>\n              </div>\n            </>\n          )}\n\n          <Separator />\n\n          <div className=\"bg-primary/5 border-l-4 border-primary rounded-md p-4\">\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-sm font-semibold\">Net en poche</span>\n              <span className=\"text-2xl font-mono font-bold text-primary\" data-testid=\"text-net-proceeds\">\n                {formatCurrency(netProceeds)}\n              </span>\n            </div>\n          </div>\n\n          <div className=\"flex items-start gap-2 text-xs text-muted-foreground bg-muted/30 p-3 rounded-md\">\n            <Info className=\"w-4 h-4 mt-0.5 flex-shrink-0\" />\n            <span>Simulation indicative bas√©e sur les donn√©es saisies. Ne remplace pas l'avis d'un notaire.</span>\n          </div>\n        </div>\n      </div>\n    </Card>\n  );\n}\n","size_bytes":5011},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(`\n      after:content-[''] after:block after:absolute after:inset-0 after:rounded-full after:pointer-events-none after:border after:border-black/10 dark:after:border-white/10\n      relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full`,\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1592},"client/src/components/ComplianceAlert.tsx":{"content":"import { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport { CheckCircle2, AlertTriangle, XCircle, Info } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\n\ninterface ComplianceAlertProps {\n  type: \"success\" | \"warning\" | \"error\" | \"info\";\n  title: string;\n  message: string;\n}\n\nexport default function ComplianceAlert({ type, title, message }: ComplianceAlertProps) {\n  const config = {\n    success: {\n      icon: CheckCircle2,\n      className: \"border-success/50 bg-success/5 text-success\",\n      iconColor: \"text-success\"\n    },\n    warning: {\n      icon: AlertTriangle,\n      className: \"border-warning/50 bg-warning/5 text-warning\",\n      iconColor: \"text-warning\"\n    },\n    error: {\n      icon: XCircle,\n      className: \"border-error/50 bg-error/5 text-error\",\n      iconColor: \"text-error\"\n    },\n    info: {\n      icon: Info,\n      className: \"border-info/50 bg-info/5 text-info\",\n      iconColor: \"text-info\"\n    }\n  };\n\n  const { icon: Icon, className, iconColor } = config[type];\n\n  return (\n    <Alert className={cn(\"border-l-4\", className)} data-testid={`alert-${type}`}>\n      <Icon className={cn(\"h-5 w-5\", iconColor)} />\n      <AlertTitle className=\"font-semibold text-foreground\">{title}</AlertTitle>\n      <AlertDescription className=\"text-sm text-foreground/90\">\n        {message}\n      </AlertDescription>\n    </Alert>\n  );\n}\n","size_bytes":1378},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"docs/deployment.md":{"content":"# D√©ploiement CalcuNotaire Pro\n\n## Architecture de D√©ploiement\n\n### Environnements\n\n- **Development** : local (localhost:5000)\n- **Staging** : validation pr√©-production\n- **Production** : app.calcu-notaire.fr\n\n### Services\n\n| Service | Provider | URL |\n|---------|----------|-----|\n| Frontend (Web) | Vercel | https://app.calcu-notaire.fr |\n| API (Backend) | Render / Fly.io | https://api.calcu-notaire.fr |\n| Database | Neon / Supabase | PostgreSQL 15+ |\n| Storage S3 | Scaleway / Wasabi | Exports PDF/CSV |\n| Admin | Vercel | https://admin.calcu-notaire.fr |\n\n## Configuration DNS\n\n```\napp.calcu-notaire.fr       ‚Üí CNAME ‚Üí vercel-dns\napi.calcu-notaire.fr       ‚Üí CNAME ‚Üí render/fly.io\nadmin.calcu-notaire.fr     ‚Üí CNAME ‚Üí vercel-dns\n```\n\n## Pr√©requis\n\n1. **Node.js** : v20+ (LTS)\n2. **PostgreSQL** : 15+\n3. **Stripe Account** : cl√©s API test & production\n4. **Domaine** : calcu-notaire.fr configur√©\n\n## Variables d'Environnement\n\n### Production\n\nCr√©er les secrets dans :\n- **Vercel** : Settings ‚Üí Environment Variables\n- **Render** : Environment ‚Üí Secret Files\n- **GitHub** : Settings ‚Üí Secrets and variables ‚Üí Actions\n\n```bash\n# Database\nDATABASE_URL=postgres://user:pass@db.region.neon.tech/prod\n\n# JWT & Session\nJWT_SECRET=<g√©n√©rer avec: openssl rand -base64 32>\nSESSION_SECRET=<g√©n√©rer avec: openssl rand -base64 32>\n\n# Stripe (Production keys)\nSTRIPE_SECRET_KEY=sk_live_xxx\nVITE_STRIPE_PUBLIC_KEY=pk_live_xxx\nSTRIPE_WEBHOOK_SECRET=whsec_xxx\n\n# S3\nS3_ENDPOINT=https://s3.fr-par.scw.cloud\nS3_BUCKET=calcu-notaire-prod\nS3_ACCESS_KEY_ID=xxx\nS3_SECRET_ACCESS_KEY=xxx\n\n# Sentry\nSENTRY_DSN_API=https://xxx@sentry.io/xxx\nSENTRY_DSN_WEB=https://xxx@sentry.io/xxx\n```\n\n## CI/CD GitHub Actions\n\n### Workflow `.github/workflows/deploy.yml`\n\n```yaml\nname: Deploy CalcuNotaire Pro\n\non:\n  push:\n    branches: [main, staging]\n  pull_request:\n    branches: [main]\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n      - uses: actions/setup-node@v4\n        with:\n          node-version: '20'\n          cache: 'npm'\n      \n      - name: Install dependencies\n        run: npm ci\n      \n      - name: Lint & Type check\n        run: |\n          npm run lint\n          npm run typecheck\n      \n      - name: Run tests\n        run: npm test\n      \n      - name: Build\n        run: npm run build\n  \n  deploy-staging:\n    needs: test\n    if: github.ref == 'refs/heads/staging'\n    runs-on: ubuntu-latest\n    environment: staging\n    steps:\n      - uses: actions/checkout@v4\n      - name: Deploy to Vercel (Staging)\n        run: vercel --prod --token=${{ secrets.VERCEL_TOKEN }}\n  \n  deploy-production:\n    needs: test\n    if: github.ref == 'refs/heads/main'\n    runs-on: ubuntu-latest\n    environment: production\n    steps:\n      - uses: actions/checkout@v4\n      \n      - name: Deploy Frontend to Vercel\n        run: vercel --prod --token=${{ secrets.VERCEL_TOKEN }}\n      \n      - name: Deploy API to Render\n        run: |\n          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}\n      \n      - name: Run DB Migrations\n        env:\n          DATABASE_URL: ${{ secrets.DATABASE_URL }}\n        run: npm run db:push\n```\n\n## D√©ploiement Manuel\n\n### 1. Frontend (Vercel)\n\n```bash\n# Install Vercel CLI\nnpm i -g vercel\n\n# Login\nvercel login\n\n# Deploy to production\nvercel --prod\n\n# Configurer les variables d'environnement\nvercel env add VITE_STRIPE_PUBLIC_KEY production\n```\n\n### 2. Backend API (Render)\n\n1. Cr√©er un nouveau **Web Service** sur Render\n2. Connecter le repo GitHub\n3. Configuration :\n   - **Build Command** : `npm install && npm run build`\n   - **Start Command** : `npm start`\n   - **Environment** : Node\n4. Ajouter les variables d'environnement\n5. D√©ployer\n\n### 3. Database (Neon)\n\n```bash\n# Cr√©er la base de donn√©es\n# Via console Neon : https://console.neon.tech\n\n# R√©cup√©rer DATABASE_URL\n# Format: postgres://user:pass@region.neon.tech/dbname\n\n# Ex√©cuter les migrations\nDATABASE_URL=<url> npm run db:push\n```\n\n### 4. Stripe Webhooks\n\n```bash\n# Configuration du webhook en production\n# Stripe Dashboard ‚Üí Developers ‚Üí Webhooks ‚Üí Add endpoint\n\n# URL: https://api.calcu-notaire.fr/api/webhooks/stripe\n# Events: payment_intent.succeeded, customer.subscription.*\n\n# Copier le webhook secret ‚Üí STRIPE_WEBHOOK_SECRET\n```\n\n## Monitoring Post-D√©ploiement\n\n### Health Checks\n\n```bash\n# API Health\ncurl https://api.calcu-notaire.fr/health\n\n# Expected: {\"status\": \"ok\", \"database\": \"connected\"}\n```\n\n### V√©rifications\n\n- [ ] Frontend accessible (app.calcu-notaire.fr)\n- [ ] API health endpoint r√©pond (api.calcu-notaire.fr/health)\n- [ ] Database connect√©e\n- [ ] Stripe webhooks configur√©s\n- [ ] SSL/TLS actif (https)\n- [ ] Sentry re√ßoit les erreurs\n- [ ] Logs accessibles\n\n## Rollback\n\n### Vercel (Frontend)\n\n```bash\n# Lister les d√©ploiements\nvercel ls\n\n# Rollback vers un d√©ploiement pr√©c√©dent\nvercel rollback <deployment-url>\n```\n\n### Render (API)\n\n1. Dashboard ‚Üí Service ‚Üí Manual Deploy\n2. S√©lectionner un commit pr√©c√©dent\n\n### Database\n\n```bash\n# Restaurer depuis backup\npg_restore -d $DATABASE_URL backup_file.dump\n```\n\n## Backup Strategy\n\n### Database\n\n- **Automatique** : Neon fait des backups quotidiens (30 jours r√©tention)\n- **Manuel** : `npm run backup:db` (script √† cr√©er)\n\n### S3\n\n- **Versioning** activ√© sur le bucket\n- **Lifecycle policy** : 90 jours puis archivage\n\n## S√©curit√©\n\n### SSL/TLS\n\n- **Vercel** : SSL automatique (Let's Encrypt)\n- **Render** : SSL automatique\n\n### Headers de S√©curit√©\n\nConfigur√©s dans `server/index.ts` :\n- `Strict-Transport-Security`\n- `X-Frame-Options`\n- `X-Content-Type-Options`\n- `Content-Security-Policy`\n\n### Rate Limiting\n\n- Auth endpoints : 5 req/15min\n- Compute endpoints : 10 req/min\n- Global API : 100 req/15min\n\n## Troubleshooting\n\n### API ne r√©pond pas\n\n```bash\n# V√©rifier les logs Render\nrender logs -t web-service-name\n\n# V√©rifier la connexion DB\npsql $DATABASE_URL -c \"SELECT 1\"\n```\n\n### Webhook Stripe √©choue\n\n```bash\n# Test local avec Stripe CLI\nstripe listen --forward-to localhost:5000/api/webhooks/stripe\n\n# V√©rifier les logs Stripe Dashboard\n```\n\n### Erreurs CORS\n\n- V√©rifier que `CORS_ORIGIN` est configur√©\n- Frontend et API doivent √™tre sur le m√™me domaine (ou subdomain)\n\n## Contact Support\n\n- **Technique** : tech@calcu-notaire.fr\n- **Stripe** : support Stripe Dashboard\n- **Neon/Render** : support respectif\n","size_bytes":6382},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/examples/ComplianceAlert.tsx":{"content":"import ComplianceAlert from '../ComplianceAlert';\n\nexport default function ComplianceAlertExample() {\n  return (\n    <div className=\"max-w-2xl space-y-4\">\n      <ComplianceAlert\n        type=\"success\"\n        title=\"Exon√©ration valid√©e\"\n        message=\"Vous remplissez les conditions pour l'exon√©ration de r√©sidence principale.\"\n      />\n      <ComplianceAlert\n        type=\"warning\"\n        title=\"Attention aux d√©lais\"\n        message=\"Pour b√©n√©ficier de l'exon√©ration, le r√©emploi doit √™tre effectu√© sous 24 mois.\"\n      />\n      <ComplianceAlert\n        type=\"error\"\n        title=\"Condition non remplie\"\n        message=\"Vous ne pouvez pas b√©n√©ficier de l'exon√©ration car vous √™tes propri√©taire d'une r√©sidence principale.\"\n      />\n      <ComplianceAlert\n        type=\"info\"\n        title=\"Information DMTO\"\n        message=\"Les taux DMTO appliqu√©s sont ceux en vigueur au 01/06/2025 (version v2025-06).\"\n      />\n    </div>\n  );\n}\n","size_bytes":957},"client/src/components/PaywallModal.tsx":{"content":"import {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Check, FileText, Download, Share2, Zap } from \"lucide-react\";\n\ninterface PaywallModalProps {\n  open: boolean;\n  onClose: () => void;\n  onPurchase: (type: 'oneshot' | 'subscription') => void;\n}\n\nexport default function PaywallModal({ open, onClose, onPurchase }: PaywallModalProps) {\n  const features = [\n    \"PDF certifi√© avec QR code et horodatage\",\n    \"Formules d√©taill√©es et sources officielles\",\n    \"Export CSV des calculs\",\n    \"Lien de partage s√©curis√©\",\n    \"Versions bar√®mes BOFiP et DMTO\"\n  ];\n\n  return (\n    <Dialog open={open} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\" data-testid=\"modal-paywall\">\n        <DialogHeader>\n          <DialogTitle className=\"text-2xl\">D√©bloquez votre simulation</DialogTitle>\n          <DialogDescription>\n            Acc√©dez au PDF certifi√© et aux exports de votre simulation\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className=\"grid md:grid-cols-2 gap-6 mt-6\">\n          {/* One-shot */}\n          <Card className=\"p-6 hover-elevate border-2\">\n            <div className=\"space-y-4\">\n              <div>\n                <Badge variant=\"outline\" className=\"mb-3\">Paiement unique</Badge>\n                <h3 className=\"text-xl font-semibold mb-2\">Simulation unique</h3>\n                <div className=\"flex items-baseline gap-2\">\n                  <span className=\"text-4xl font-bold font-mono\">39‚Ç¨</span>\n                  <span className=\"text-muted-foreground\">HT</span>\n                </div>\n              </div>\n\n              <ul className=\"space-y-3\">\n                {features.map((feature, idx) => (\n                  <li key={idx} className=\"flex items-start gap-2 text-sm\">\n                    <Check className=\"w-5 h-5 text-success flex-shrink-0 mt-0.5\" />\n                    <span>{feature}</span>\n                  </li>\n                ))}\n              </ul>\n\n              <Button \n                className=\"w-full\" \n                size=\"lg\"\n                onClick={() => onPurchase('oneshot')}\n                data-testid=\"button-purchase-oneshot\"\n              >\n                <FileText className=\"w-4 h-4 mr-2\" />\n                D√©bloquer maintenant\n              </Button>\n            </div>\n          </Card>\n\n          {/* Subscription */}\n          <Card className=\"p-6 hover-elevate border-2 border-primary relative\">\n            <Badge className=\"absolute -top-3 left-1/2 -translate-x-1/2 bg-primary\">\n              <Zap className=\"w-3 h-3 mr-1\" />\n              Recommand√©\n            </Badge>\n            <div className=\"space-y-4\">\n              <div>\n                <Badge variant=\"outline\" className=\"mb-3\">Abonnement</Badge>\n                <h3 className=\"text-xl font-semibold mb-2\">CalcuNotaire Pro</h3>\n                <div className=\"flex items-baseline gap-2\">\n                  <span className=\"text-4xl font-bold font-mono\">99‚Ç¨</span>\n                  <span className=\"text-muted-foreground\">/mois HT</span>\n                </div>\n              </div>\n\n              <ul className=\"space-y-3\">\n                <li className=\"flex items-start gap-2 text-sm\">\n                  <Check className=\"w-5 h-5 text-success flex-shrink-0 mt-0.5\" />\n                  <span className=\"font-semibold\">Simulations illimit√©es</span>\n                </li>\n                <li className=\"flex items-start gap-2 text-sm\">\n                  <Check className=\"w-5 h-5 text-success flex-shrink-0 mt-0.5\" />\n                  <span>Organisation en dossiers</span>\n                </li>\n                <li className=\"flex items-start gap-2 text-sm\">\n                  <Check className=\"w-5 h-5 text-success flex-shrink-0 mt-0.5\" />\n                  <span>Exports batch (CSV, PDF)</span>\n                </li>\n                <li className=\"flex items-start gap-2 text-sm\">\n                  <Check className=\"w-5 h-5 text-success flex-shrink-0 mt-0.5\" />\n                  <span>Support prioritaire</span>\n                </li>\n                <li className=\"flex items-start gap-2 text-sm\">\n                  <Check className=\"w-5 h-5 text-success flex-shrink-0 mt-0.5\" />\n                  <span>Marque blanche disponible</span>\n                </li>\n              </ul>\n\n              <Button \n                className=\"w-full\" \n                size=\"lg\"\n                onClick={() => onPurchase('subscription')}\n                data-testid=\"button-purchase-subscription\"\n              >\n                <Download className=\"w-4 h-4 mr-2\" />\n                S'abonner maintenant\n              </Button>\n            </div>\n          </Card>\n        </div>\n\n        <div className=\"text-xs text-center text-muted-foreground mt-4\">\n          Paiement s√©curis√© par Stripe ‚Ä¢ Annulation √† tout moment\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","size_bytes":5106},"client/src/components/examples/PaywallModal.tsx":{"content":"import { useState } from 'react';\nimport PaywallModal from '../PaywallModal';\nimport { Button } from '@/components/ui/button';\n\nexport default function PaywallModalExample() {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <div className=\"p-8\">\n      <Button onClick={() => setOpen(true)}>\n        Ouvrir le paywall\n      </Button>\n      <PaywallModal\n        open={open}\n        onClose={() => setOpen(false)}\n        onPurchase={(type) => {\n          console.log('Purchase:', type);\n          setOpen(false);\n        }}\n      />\n    </div>\n  );\n}\n","size_bytes":561},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5741},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/pages/Privacy.tsx":{"content":"import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { useLocation } from \"wouter\";\nimport { ArrowLeft } from \"lucide-react\";\n\nexport default function Privacy() {\n  const [, setLocation] = useLocation();\n\n  return (\n    <div className=\"min-h-screen bg-background p-4\">\n      <div className=\"container max-w-4xl mx-auto py-8\">\n        <Button \n          variant=\"ghost\" \n          onClick={() => setLocation('/')} \n          className=\"mb-4\"\n          data-testid=\"button-back\"\n        >\n          <ArrowLeft className=\"w-4 h-4 mr-2\" />\n          Retour\n        </Button>\n\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-3xl\">Politique de Confidentialit√©</CardTitle>\n            <p className=\"text-sm text-muted-foreground\">Conforme au RGPD - Derni√®re mise √† jour : Octobre 2024</p>\n          </CardHeader>\n          <CardContent className=\"prose dark:prose-invert max-w-none\">\n            <h2>1. Responsable du traitement</h2>\n            <p>\n              CalcuNotaire Pro, responsable du traitement de vos donn√©es personnelles, s'engage √† prot√©ger \n              votre vie priv√©e conform√©ment au R√®glement G√©n√©ral sur la Protection des Donn√©es (RGPD).\n            </p>\n\n            <h2>2. Donn√©es collect√©es</h2>\n            <p>\n              Nous collectons et traitons les donn√©es suivantes :\n            </p>\n            \n            <h3>2.1. Donn√©es de compte</h3>\n            <ul>\n              <li>Adresse email (obligatoire pour l'authentification)</li>\n              <li>Mot de passe (chiffr√© avec bcrypt)</li>\n              <li>Date de cr√©ation du compte</li>\n              <li>Statut d'abonnement Stripe (le cas √©ch√©ant)</li>\n            </ul>\n\n            <h3>2.2. Donn√©es de simulation</h3>\n            <ul>\n              <li>Informations sur les biens immobiliers (prix, dates, localisation)</li>\n              <li>R√©sultats des calculs de plus-value</li>\n              <li>Date de cr√©ation et de modification des simulations</li>\n            </ul>\n\n            <h3>2.3. Donn√©es techniques</h3>\n            <ul>\n              <li>Adresse IP (pour la s√©curit√© et les logs d'audit)</li>\n              <li>User-Agent du navigateur</li>\n              <li>Cookies techniques (session, authentification)</li>\n            </ul>\n\n            <h3>2.4. Donn√©es de paiement</h3>\n            <ul>\n              <li>Informations de paiement trait√©es par <strong>Stripe</strong> (nous ne stockons jamais vos cartes bancaires)</li>\n              <li>Historique des transactions</li>\n            </ul>\n\n            <h2>3. Finalit√©s du traitement</h2>\n            <p>Vos donn√©es sont utilis√©es pour :</p>\n            <ul>\n              <li>G√©rer votre compte et votre authentification</li>\n              <li>Effectuer les calculs de plus-value et g√©n√©rer les rapports PDF</li>\n              <li>Traiter vos paiements via Stripe</li>\n              <li>Assurer la s√©curit√© de la plateforme (d√©tection de fraude, logs d'audit)</li>\n              <li>Vous envoyer des notifications relatives √† votre compte</li>\n              <li>Am√©liorer nos services et analyser les usages</li>\n            </ul>\n\n            <h2>4. Base l√©gale du traitement</h2>\n            <ul>\n              <li><strong>Ex√©cution du contrat</strong> : fourniture du service CalcuNotaire Pro</li>\n              <li><strong>Obligation l√©gale</strong> : conservation des donn√©es fiscales et comptables</li>\n              <li><strong>Int√©r√™t l√©gitime</strong> : s√©curit√© de la plateforme et pr√©vention de la fraude</li>\n              <li><strong>Consentement</strong> : cookies non essentiels et communications marketing (opt-in)</li>\n            </ul>\n\n            <h2>5. Dur√©e de conservation</h2>\n            <table className=\"w-full border-collapse\">\n              <thead>\n                <tr>\n                  <th className=\"border p-2 text-left\">Type de donn√©es</th>\n                  <th className=\"border p-2 text-left\">Dur√©e de conservation</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td className=\"border p-2\">Compte utilisateur actif</td>\n                  <td className=\"border p-2\">Jusqu'√† suppression par l'utilisateur</td>\n                </tr>\n                <tr>\n                  <td className=\"border p-2\">Simulations</td>\n                  <td className=\"border p-2\">Jusqu'√† suppression par l'utilisateur ou du compte</td>\n                </tr>\n                <tr>\n                  <td className=\"border p-2\">Logs d'audit</td>\n                  <td className=\"border p-2\">12 mois</td>\n                </tr>\n                <tr>\n                  <td className=\"border p-2\">Donn√©es de paiement (Stripe)</td>\n                  <td className=\"border p-2\">10 ans (obligation l√©gale comptable)</td>\n                </tr>\n                <tr>\n                  <td className=\"border p-2\">Compte inactif (sans connexion)</td>\n                  <td className=\"border p-2\">3 ans puis suppression automatique</td>\n                </tr>\n              </tbody>\n            </table>\n\n            <h2>6. Destinataires des donn√©es</h2>\n            <p>Vos donn√©es peuvent √™tre partag√©es avec :</p>\n            <ul>\n              <li><strong>Stripe</strong> : traitement s√©curis√© des paiements (conforme PCI-DSS)</li>\n              <li><strong>H√©bergeur</strong> : stockage s√©curis√© des donn√©es (serveurs EU)</li>\n              <li><strong>Prestataires techniques</strong> : maintenance et support (sous contrat de confidentialit√©)</li>\n            </ul>\n            <p>\n              <strong>Nous ne vendons jamais vos donn√©es √† des tiers.</strong>\n            </p>\n\n            <h2>7. Vos droits RGPD</h2>\n            <p>Conform√©ment au RGPD, vous disposez des droits suivants :</p>\n            \n            <h3>7.1. Droit d'acc√®s</h3>\n            <p>Obtenez une copie de toutes vos donn√©es personnelles.</p>\n\n            <h3>7.2. Droit de rectification</h3>\n            <p>Corrigez vos donn√©es inexactes ou incompl√®tes.</p>\n\n            <h3>7.3. Droit √† l'effacement (\"droit √† l'oubli\")</h3>\n            <p>Supprimez votre compte et toutes vos donn√©es depuis les param√®tres.</p>\n\n            <h3>7.4. Droit √† la portabilit√©</h3>\n            <p>Exportez vos simulations au format CSV.</p>\n\n            <h3>7.5. Droit d'opposition</h3>\n            <p>Refusez certains traitements (marketing, profilage).</p>\n\n            <h3>7.6. Droit de limitation</h3>\n            <p>Restreignez temporairement le traitement de vos donn√©es.</p>\n\n            <h2>8. S√©curit√© des donn√©es</h2>\n            <p>Nous mettons en ≈ìuvre des mesures de s√©curit√© robustes :</p>\n            <ul>\n              <li>Chiffrement HTTPS/TLS pour toutes les communications</li>\n              <li>Mots de passe chiffr√©s avec bcrypt (co√ªt 10)</li>\n              <li>Sessions s√©curis√©es avec cookies httpOnly et sameSite</li>\n              <li>Rate limiting pour pr√©venir les attaques par force brute</li>\n              <li>Logs d'audit pour tracer toutes les actions sensibles</li>\n              <li>Backups automatiques quotidiens chiffr√©s</li>\n            </ul>\n\n            <h2>9. Transferts internationaux</h2>\n            <p>\n              Vos donn√©es sont stock√©es dans l'Union Europ√©enne. En cas de transfert hors UE, \n              nous utilisons les clauses contractuelles types de la Commission Europ√©enne.\n            </p>\n\n            <h2>10. Cookies</h2>\n            <p>\n              Consultez notre <a href=\"/cookies\" className=\"text-primary hover:underline\">Politique Cookies</a> \n              {' '}pour plus de d√©tails sur l'utilisation des cookies.\n            </p>\n\n            <h2>11. Modifications de la politique</h2>\n            <p>\n              Nous pouvons modifier cette politique de confidentialit√©. Les changements importants vous seront \n              notifi√©s par email 30 jours avant leur entr√©e en vigueur.\n            </p>\n\n            <h2>12. Contact et r√©clamations</h2>\n            <p>\n              Pour exercer vos droits ou poser des questions :<br />\n              <strong>Email :</strong> privacy@calcunotaire.pro<br />\n              <strong>DPO :</strong> dpo@calcunotaire.pro\n            </p>\n            <p>\n              Vous pouvez √©galement d√©poser une r√©clamation aupr√®s de la CNIL :<br />\n              <a href=\"https://www.cnil.fr\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-primary hover:underline\">\n                www.cnil.fr\n              </a>\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","size_bytes":8728},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/WizardNavigation.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { ChevronLeft, ChevronRight, Calculator } from \"lucide-react\";\n\ninterface WizardNavigationProps {\n  currentStep: number;\n  totalSteps: number;\n  onPrevious: () => void;\n  onNext: () => void;\n  canGoNext?: boolean;\n  isLastStep?: boolean;\n}\n\nexport default function WizardNavigation({\n  currentStep,\n  totalSteps,\n  onPrevious,\n  onNext,\n  canGoNext = true,\n  isLastStep = false\n}: WizardNavigationProps) {\n  return (\n    <div className=\"flex items-center justify-between gap-4 py-4 border-t bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60\">\n      <Button\n        variant=\"outline\"\n        onClick={onPrevious}\n        disabled={currentStep === 1}\n        data-testid=\"button-previous\"\n      >\n        <ChevronLeft className=\"w-4 h-4 mr-2\" />\n        Pr√©c√©dent\n      </Button>\n\n      <div className=\"text-sm text-muted-foreground\">\n        √âtape {currentStep} sur {totalSteps}\n      </div>\n\n      <Button\n        onClick={onNext}\n        disabled={!canGoNext}\n        data-testid=\"button-next\"\n      >\n        {isLastStep ? (\n          <>\n            <Calculator className=\"w-4 h-4 mr-2\" />\n            Calculer\n          </>\n        ) : (\n          <>\n            Suivant\n            <ChevronRight className=\"w-4 h-4 ml-2\" />\n          </>\n        )}\n      </Button>\n    </div>\n  );\n}\n","size_bytes":1371},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/examples/RoleSelector.tsx":{"content":"import { useState } from 'react';\nimport RoleSelector from '../RoleSelector';\n\nexport default function RoleSelectorExample() {\n  const [value, setValue] = useState(\"pp\");\n  \n  return (\n    <div className=\"max-w-4xl\">\n      <RoleSelector value={value} onChange={setValue} />\n    </div>\n  );\n}\n","size_bytes":292},"server/storage.ts":{"content":"import { type User, type InsertUser } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n\n  constructor() {\n    this.users = new Map();\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":993},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, decimal, timestamp, jsonb, boolean, integer } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  email: text(\"email\").notNull().unique(),\n  password: text(\"password\").notNull(),\n  isAdmin: boolean(\"is_admin\").default(false).notNull(),\n  stripeCustomerId: text(\"stripe_customer_id\"),\n  stripeSubscriptionId: text(\"stripe_subscription_id\"),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const simulations = pgTable(\"simulations\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").references(() => users.id),\n  \n  // Input data (stored as JSONB for flexibility)\n  inputData: jsonb(\"input_data\").notNull(),\n  \n  // Results (stored as JSONB)\n  resultData: jsonb(\"result_data\").notNull(),\n  \n  // Payment status\n  isPaid: boolean(\"is_paid\").default(false).notNull(),\n  paymentType: text(\"payment_type\"), // 'oneshot' | 'subscription'\n  stripePaymentId: text(\"stripe_payment_id\"),\n  \n  // Exports\n  pdfUrl: text(\"pdf_url\"),\n  shareToken: varchar(\"share_token\").unique(),\n  \n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n});\n\nexport const dmtoTable = pgTable(\"dmto_table\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  deptCode: varchar(\"dept_code\", { length: 3 }).notNull(),\n  deptName: text(\"dept_name\").notNull(),\n  dmtoRate: decimal(\"dmto_rate\", { precision: 5, scale: 2 }).notNull(),\n  communeRate: decimal(\"commune_rate\", { precision: 5, scale: 2 }).notNull(),\n  stateAddition: decimal(\"state_addition\", { precision: 5, scale: 2 }).notNull(),\n  totalTransfer: decimal(\"total_transfer\", { precision: 5, scale: 2 }).notNull(),\n  notaryFeesBase: decimal(\"notary_fees_base\", { precision: 5, scale: 2 }).notNull(),\n  notaryFixed: decimal(\"notary_fixed\", { precision: 10, scale: 2 }).notNull(),\n  version: varchar(\"version\", { length: 20 }).notNull(),\n  validFrom: timestamp(\"valid_from\").notNull(),\n  validTo: timestamp(\"valid_to\"),\n  sourceUrl: text(\"source_url\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const inseeDept = pgTable(\"insee_dept\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  codeCommune: varchar(\"code_commune\", { length: 5 }).notNull(),\n  deptCode: varchar(\"dept_code\", { length: 3 }).notNull(),\n  communeName: text(\"commune_name\").notNull(),\n});\n\nexport const dvfCache = pgTable(\"dvf_cache\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  cacheKey: text(\"cache_key\").notNull().unique(),\n  inseeCode: varchar(\"insee_code\", { length: 5 }),\n  radius: integer(\"radius\"),\n  data: jsonb(\"data\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  cachedAt: timestamp(\"cached_at\").defaultNow().notNull(),\n});\n\nexport const auditLogs = pgTable(\"audit_logs\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  simulationId: varchar(\"simulation_id\").references(() => simulations.id),\n  userId: varchar(\"user_id\").references(() => users.id),\n  action: text(\"action\").notNull(),\n  metadata: jsonb(\"metadata\"),\n  ipAddress: text(\"ip_address\"),\n  userAgent: text(\"user_agent\"),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\n// Zod schemas\nexport const insertUserSchema = createInsertSchema(users).omit({\n  id: true,\n  createdAt: true,\n}).extend({\n  email: z.string().email(),\n  password: z.string().min(8),\n});\n\nexport const insertSimulationSchema = createInsertSchema(simulations).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertDMTOSchema = createInsertSchema(dmtoTable).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertInseeDeptSchema = createInsertSchema(inseeDept).omit({\n  id: true,\n});\n\n// Types\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\nexport type Simulation = typeof simulations.$inferSelect;\nexport type InsertSimulation = z.infer<typeof insertSimulationSchema>;\nexport type DMTORate = typeof dmtoTable.$inferSelect;\nexport type InsertDMTORate = z.infer<typeof insertDMTOSchema>;\nexport type InseeDept = typeof inseeDept.$inferSelect;\nexport type DVFCache = typeof dvfCache.$inferSelect;\nexport type AuditLog = typeof auditLogs.$inferSelect;\n","size_bytes":4514},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport express from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { db } from \"./db\";\nimport { users, simulations, dmtoTable, inseeDept, dvfCache, auditLogs } from \"@shared/schema\";\nimport { authMiddleware, adminMiddleware, hashPassword, comparePassword, generateToken, type AuthRequest } from \"./auth\";\nimport { eq, and, gte, lte, desc } from \"drizzle-orm\";\nimport { calculateCapitalGain, buildEnrichedResult, type CapitalGainInput, type EnrichedResult } from \"@shared/calc-core\";\nimport { z } from \"zod\";\nimport { randomBytes } from \"crypto\";\nimport { authRateLimiter, computeRateLimiter, apiRateLimiter } from \"./middleware\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Apply general API rate limiting\n  app.use('/api/', apiRateLimiter);\n  \n  // Health endpoint (no auth, for monitoring)\n  app.get(\"/health\", async (req, res) => {\n    try {\n      // Check database connection\n      await db.select().from(users).limit(1);\n      \n      res.json({\n        status: \"ok\",\n        database: \"connected\",\n        timestamp: new Date().toISOString(),\n        version: process.env.npm_package_version || \"1.0.0\"\n      });\n    } catch (error) {\n      res.status(503).json({\n        status: \"error\",\n        database: \"disconnected\",\n        timestamp: new Date().toISOString()\n      });\n    }\n  });\n  \n  // Auth routes with rate limiting\n  app.post(\"/api/auth/signup\", authRateLimiter, async (req, res) => {\n    try {\n      const { email, password } = req.body;\n      \n      if (!email || !password) {\n        return res.status(400).json({ error: \"Email and password required\" });\n      }\n      \n      if (password.length < 8) {\n        return res.status(400).json({ error: \"Password must be at least 8 characters\" });\n      }\n      \n      // Check if user exists\n      const existing = await db.select()\n        .from(users)\n        .where(eq(users.email, email))\n        .limit(1);\n      \n      if (existing.length > 0) {\n        return res.status(400).json({ error: \"Email already registered\" });\n      }\n      \n      // Create user\n      const hashedPassword = await hashPassword(password);\n      const [newUser] = await db.insert(users)\n        .values({\n          email,\n          password: hashedPassword,\n        })\n        .returning();\n      \n      // Generate token\n      const token = generateToken(newUser.id, newUser.email, newUser.isAdmin);\n      \n      // Set cookie (must match authMiddleware: 'token')\n      res.cookie('token', token, {\n        httpOnly: true,\n        secure: process.env.NODE_ENV === 'production',\n        sameSite: 'strict',\n        path: '/',\n        maxAge: 7 * 24 * 60 * 60 * 1000 // 7 days\n      });\n      \n      res.json({\n        user: {\n          id: newUser.id,\n          email: newUser.email,\n          isAdmin: newUser.isAdmin\n        }\n      });\n    } catch (error) {\n      console.error('Signup error:', error);\n      res.status(500).json({ error: \"Internal server error\" });\n    }\n  });\n  \n  app.post(\"/api/auth/login\", authRateLimiter, async (req, res) => {\n    try {\n      const { email, password } = req.body;\n      \n      if (!email || !password) {\n        return res.status(400).json({ error: \"Email and password required\" });\n      }\n      \n      // Find user\n      const [user] = await db.select()\n        .from(users)\n        .where(eq(users.email, email))\n        .limit(1);\n      \n      if (!user) {\n        return res.status(401).json({ error: \"Invalid credentials\" });\n      }\n      \n      // Check password\n      const valid = await comparePassword(password, user.password);\n      if (!valid) {\n        return res.status(401).json({ error: \"Invalid credentials\" });\n      }\n      \n      // Generate token\n      const token = generateToken(user.id, user.email, user.isAdmin);\n      \n      // Set cookie (must match authMiddleware: 'token')\n      res.cookie('token', token, {\n        httpOnly: true,\n        secure: process.env.NODE_ENV === 'production',\n        sameSite: 'strict',\n        path: '/',\n        maxAge: 7 * 24 * 60 * 60 * 1000\n      });\n      \n      res.json({\n        user: {\n          id: user.id,\n          email: user.email,\n          isAdmin: user.isAdmin\n        }\n      });\n    } catch (error) {\n      console.error('Login error:', error);\n      res.status(500).json({ error: \"Internal server error\" });\n    }\n  });\n  \n  app.post(\"/api/auth/logout\", (req, res) => {\n    // Clear cookie with same options as set\n    res.clearCookie('token', {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === 'production',\n      sameSite: 'strict',\n      path: '/'\n    });\n    res.json({ message: \"Logged out\" });\n  });\n  \n  app.get(\"/api/auth/me\", authMiddleware as any, async (req: AuthRequest, res) => {\n    try {\n      const [user] = await db.select()\n        .from(users)\n        .where(eq(users.id, req.user!.id))\n        .limit(1);\n      \n      if (!user) {\n        return res.status(404).json({ error: \"User not found\" });\n      }\n      \n      res.json({\n        user: {\n          id: user.id,\n          email: user.email,\n          isAdmin: user.isAdmin\n        }\n      });\n    } catch (error) {\n      console.error('Get user error:', error);\n      res.status(500).json({ error: \"Internal server error\" });\n    }\n  });\n  \n  // RGPD: Right to be forgotten - Delete user account and all data\n  app.delete(\"/api/auth/account\", authMiddleware as any, async (req: AuthRequest, res) => {\n    try {\n      const userId = req.user!.id;\n      \n      // Delete all user simulations first (foreign key constraint)\n      await db.delete(simulations).where(eq(simulations.userId, userId));\n      \n      // Delete audit logs\n      await db.delete(auditLogs).where(eq(auditLogs.userId, userId));\n      \n      // Delete user account\n      await db.delete(users).where(eq(users.id, userId));\n      \n      // Clear auth cookie\n      res.clearCookie('token', {\n        httpOnly: true,\n        secure: process.env.NODE_ENV === 'production',\n        sameSite: 'strict',\n        path: '/'\n      });\n      \n      res.json({ message: \"Account and all associated data deleted successfully\" });\n    } catch (error) {\n      console.error('Delete account error:', error);\n      res.status(500).json({ error: \"Failed to delete account\" });\n    }\n  });\n  \n  // Simulations routes\n  app.post(\"/api/simulations\", authMiddleware as any, async (req: AuthRequest, res) => {\n    try {\n      // Strict validation with Zod\n      const { simulationInputSchema } = await import('@shared/validation');\n      const validationResult = simulationInputSchema.safeParse(req.body);\n      \n      if (!validationResult.success) {\n        return res.status(400).json({\n          error: \"Invalid simulation data\",\n          details: validationResult.error.errors\n        });\n      }\n      \n      const inputData = validationResult.data;\n      \n      // Calculate results (enriched payload)\n      const resultData = buildEnrichedResult(inputData);\n      \n      // Generate share token\n      const shareToken = randomBytes(16).toString('hex');\n      \n      const [simulation] = await db.insert(simulations)\n        .values({\n          userId: req.user!.id,\n          inputData,\n          resultData,\n          shareToken,\n        })\n        .returning();\n      \n      // Audit log\n      await db.insert(auditLogs).values({\n        simulationId: simulation.id,\n        action: 'simulation_created',\n        userId: req.user!.id,\n        ipAddress: req.ip,\n        userAgent: req.get('user-agent'),\n        metadata: { role: inputData.role }\n      });\n      \n      res.json(simulation);\n    } catch (error) {\n      console.error('Create simulation error:', error);\n      res.status(500).json({ error: \"Internal server error\" });\n    }\n  });\n  \n  app.get(\"/api/simulations\", authMiddleware as any, async (req: AuthRequest, res) => {\n    try {\n      const userSimulations = await db.select()\n        .from(simulations)\n        .where(eq(simulations.userId, req.user!.id))\n        .orderBy(desc(simulations.createdAt));\n      \n      res.json(userSimulations);\n    } catch (error) {\n      console.error('Get simulations error:', error);\n      res.status(500).json({ error: \"Internal server error\" });\n    }\n  });\n  \n  app.get(\"/api/simulations/:id\", authMiddleware as any, async (req: AuthRequest, res) => {\n    try {\n      const { id } = req.params;\n      \n      const [simulation] = await db.select()\n        .from(simulations)\n        .where(eq(simulations.id, id))\n        .limit(1);\n      \n      if (!simulation) {\n        return res.status(404).json({ error: \"Simulation not found\" });\n      }\n      \n      if (simulation.userId !== req.user!.id) {\n        return res.status(403).json({ error: \"Forbidden\" });\n      }\n      \n      res.json(simulation);\n    } catch (error) {\n      console.error('Get simulation error:', error);\n      res.status(500).json({ error: \"Internal server error\" });\n    }\n  });\n  \n  app.post(\"/api/simulations/:id/compute\", authMiddleware as any, computeRateLimiter, async (req: AuthRequest, res) => {\n    try {\n      const { id } = req.params;\n      \n      const [simulation] = await db.select()\n        .from(simulations)\n        .where(eq(simulations.id, id))\n        .limit(1);\n      \n      if (!simulation) {\n        return res.status(404).json({ error: \"Simulation not found\" });\n      }\n      \n      if (simulation.userId !== req.user!.id) {\n        return res.status(403).json({ error: \"Forbidden\" });\n      }\n      \n      // Recompute with current data (enriched payload)\n      const resultData = buildEnrichedResult(simulation.inputData as CapitalGainInput);\n      \n      const [updated] = await db.update(simulations)\n        .set({\n          resultData,\n          updatedAt: new Date()\n        })\n        .where(eq(simulations.id, id))\n        .returning();\n      \n      // Audit log\n      await db.insert(auditLogs).values({\n        simulationId: id,\n        action: 'simulation_computed',\n        userId: req.user!.id,\n        ipAddress: req.ip,\n        userAgent: req.get('user-agent')\n      });\n      \n      res.json(updated);\n    } catch (error) {\n      console.error('Compute simulation error:', error);\n      res.status(500).json({ error: \"Internal server error\" });\n    }\n  });\n  \n  // PDF export\n  app.get(\"/api/simulations/:id/pdf\", authMiddleware as any, async (req: AuthRequest, res) => {\n    try {\n      const { id } = req.params;\n      \n      const [simulation] = await db.select()\n        .from(simulations)\n        .where(eq(simulations.id, id))\n        .limit(1);\n      \n      if (!simulation) {\n        return res.status(404).json({ error: \"Simulation not found\" });\n      }\n      \n      if (simulation.userId !== req.user!.id) {\n        return res.status(403).json({ error: \"Forbidden\" });\n      }\n      \n      // Generate PDF\n      const { generateSimulationPDF } = await import('./pdf-generator');\n      const baseUrl = `${req.protocol}://${req.get('host')}`;\n      const pdfBuffer = await generateSimulationPDF(simulation, baseUrl);\n      \n      // Audit log\n      await db.insert(auditLogs).values({\n        simulationId: id,\n        action: 'pdf_downloaded',\n        userId: req.user!.id,\n        ipAddress: req.ip,\n        userAgent: req.get('user-agent')\n      });\n      \n      res.setHeader('Content-Type', 'application/pdf');\n      res.setHeader('Content-Disposition', `attachment; filename=\"simulation-${id.substring(0, 8)}.pdf\"`);\n      res.send(pdfBuffer);\n    } catch (error) {\n      console.error('PDF generation error:', error);\n      res.status(500).json({ error: \"PDF generation failed\" });\n    }\n  });\n  \n  // CSV export\n  app.get(\"/api/simulations/:id/csv\", authMiddleware as any, async (req: AuthRequest, res) => {\n    try {\n      const { id } = req.params;\n      \n      const [simulation] = await db.select()\n        .from(simulations)\n        .where(eq(simulations.id, id))\n        .limit(1);\n      \n      if (!simulation) {\n        return res.status(404).json({ error: \"Simulation not found\" });\n      }\n      \n      if (simulation.userId !== req.user!.id) {\n        return res.status(403).json({ error: \"Forbidden\" });\n      }\n      \n      const inputData = simulation.inputData as any;\n      const resultData = simulation.resultData as any;\n      \n      // Build CSV\n      const csv = [\n        'Champ,Valeur',\n        `ID Simulation,${simulation.id}`,\n        `Date de cr√©ation,${new Date(simulation.createdAt).toLocaleDateString('fr-FR')}`,\n        '',\n        'INFORMATIONS DU BIEN',\n        `Type de vendeur,${inputData.role}`,\n        `Occupation,${inputData.occupation}`,\n        `Prix d'acquisition,${inputData.purchasePrice}`,\n        `Prix de cession,${inputData.salePrice}`,\n        `Date d'acquisition,${inputData.purchaseDate}`,\n        `Date de cession,${inputData.saleDate}`,\n        '',\n        'R√âSULTATS',\n        `Plus-value brute,${resultData.grossCapitalGain}`,\n        `Dur√©e de d√©tention (ann√©es),${resultData.holdingYears}`,\n        `Abattement IR (%),${resultData.irAllowancePercent}`,\n        `Abattement PS (%),${resultData.psAllowancePercent}`,\n        `Base taxable IR,${resultData.irTaxableBase}`,\n        `Base taxable PS,${resultData.psTaxableBase}`,\n        `Imp√¥t sur le revenu,${resultData.irTax}`,\n        `Pr√©l√®vements sociaux,${resultData.psTax}`,\n        `Surtaxe,${resultData.surcharge || 0}`,\n        `Total imp√¥ts,${resultData.totalTax}`,\n        `Net vendeur,${resultData.netProceeds}`,\n        `Exon√©ration RP,${resultData.isRpExempt ? 'Oui' : 'Non'}`,\n        `Exon√©ration premi√®re vente,${resultData.isFirstSaleExempt ? 'Oui' : 'Non'}`\n      ].join('\\n');\n      \n      // Audit log\n      await db.insert(auditLogs).values({\n        simulationId: id,\n        action: 'csv_downloaded',\n        userId: req.user!.id,\n        ipAddress: req.ip,\n        userAgent: req.get('user-agent')\n      });\n      \n      res.setHeader('Content-Type', 'text/csv; charset=utf-8');\n      res.setHeader('Content-Disposition', `attachment; filename=\"simulation-${id.substring(0, 8)}.csv\"`);\n      res.send('\\uFEFF' + csv); // UTF-8 BOM for Excel\n    } catch (error) {\n      console.error('CSV export error:', error);\n      res.status(500).json({ error: \"CSV export failed\" });\n    }\n  });\n  \n  // Generate shareable link\n  app.post(\"/api/simulations/:id/share\", authMiddleware as any, async (req: AuthRequest, res) => {\n    try {\n      const { id } = req.params;\n      \n      const [simulation] = await db.select()\n        .from(simulations)\n        .where(eq(simulations.id, id))\n        .limit(1);\n      \n      if (!simulation) {\n        return res.status(404).json({ error: \"Simulation not found\" });\n      }\n      \n      if (simulation.userId !== req.user!.id) {\n        return res.status(403).json({ error: \"Forbidden\" });\n      }\n      \n      // Generate share token if not exists\n      let shareToken = simulation.shareToken;\n      if (!shareToken) {\n        shareToken = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n        \n        await db.update(simulations)\n          .set({ shareToken })\n          .where(eq(simulations.id, id));\n      }\n      \n      const shareUrl = `${req.protocol}://${req.get('host')}/share/${shareToken}`;\n      \n      // Audit log\n      await db.insert(auditLogs).values({\n        simulationId: id,\n        action: 'share_link_created',\n        userId: req.user!.id,\n        ipAddress: req.ip,\n        userAgent: req.get('user-agent')\n      });\n      \n      res.json({ shareUrl, shareToken });\n    } catch (error) {\n      console.error('Share link error:', error);\n      res.status(500).json({ error: \"Share link generation failed\" });\n    }\n  });\n  \n  app.get(\"/api/simulations/share/:token\", async (req, res) => {\n    try {\n      const { token } = req.params;\n      \n      const [simulation] = await db.select()\n        .from(simulations)\n        .where(eq(simulations.shareToken, token))\n        .limit(1);\n      \n      if (!simulation) {\n        return res.status(404).json({ error: \"Simulation not found\" });\n      }\n      \n      res.json({\n        inputData: simulation.inputData,\n        resultData: simulation.resultData,\n        createdAt: simulation.createdAt\n      });\n    } catch (error) {\n      console.error('Get shared simulation error:', error);\n      res.status(500).json({ error: \"Internal server error\" });\n    }\n  });\n  \n  // DMTO lookup\n  app.get(\"/api/dmto/:deptCode\", async (req, res) => {\n    try {\n      const { deptCode } = req.params;\n      const { date } = req.query;\n      \n      const effectiveDate = date ? new Date(date as string) : new Date();\n      \n      const dmtoRates = await db.select()\n        .from(dmtoTable)\n        .where(\n          and(\n            eq(dmtoTable.deptCode, deptCode),\n            lte(dmtoTable.validFrom, effectiveDate)\n          )\n        )\n        .orderBy(desc(dmtoTable.validFrom))\n        .limit(1);\n      \n      if (dmtoRates.length === 0) {\n        return res.status(404).json({ error: \"DMTO rates not found for this department\" });\n      }\n      \n      res.json(dmtoRates[0]);\n    } catch (error) {\n      console.error('Get DMTO error:', error);\n      res.status(500).json({ error: \"Internal server error\" });\n    }\n  });\n  \n  // DVF lookup (with caching)\n  app.get(\"/api/dvf/search\", authMiddleware as any, async (req: AuthRequest, res) => {\n    try {\n      const { lat, lng, radius = 1000 } = req.query;\n      \n      if (!lat || !lng) {\n        return res.status(400).json({ error: \"Latitude and longitude required\" });\n      }\n      \n      // Check cache first\n      const cacheKey = `${lat},${lng},${radius}`;\n      const cached = await db.select()\n        .from(dvfCache)\n        .where(eq(dvfCache.cacheKey, cacheKey))\n        .limit(1);\n      \n      const cacheExpiry = 7 * 24 * 60 * 60 * 1000; // 7 days\n      \n      if (cached.length > 0 && \n          (new Date().getTime() - new Date(cached[0].createdAt).getTime()) < cacheExpiry) {\n        return res.json(cached[0].data);\n      }\n      \n      // Fetch from DVF API (mock for now)\n      const dvfData = {\n        properties: [\n          {\n            address: \"123 Rue Example\",\n            price: 350000,\n            date: \"2024-01-15\",\n            surface: 85,\n            type: \"Appartement\"\n          }\n        ]\n      };\n      \n      // Cache the result\n      await db.insert(dvfCache)\n        .values({\n          cacheKey,\n          data: dvfData\n        })\n        .onConflictDoUpdate({\n          target: [dvfCache.cacheKey],\n          set: {\n            data: dvfData,\n            createdAt: new Date()\n          }\n        });\n      \n      res.json(dvfData);\n    } catch (error) {\n      console.error('DVF search error:', error);\n      res.status(500).json({ error: \"Internal server error\" });\n    }\n  });\n  \n  // Admin routes\n  app.get(\"/api/admin/simulations\", authMiddleware as any, adminMiddleware as any, async (req, res) => {\n    try {\n      const allSimulations = await db.select()\n        .from(simulations)\n        .orderBy(desc(simulations.createdAt))\n        .limit(100);\n      \n      res.json(allSimulations);\n    } catch (error) {\n      console.error('Get all simulations error:', error);\n      res.status(500).json({ error: \"Internal server error\" });\n    }\n  });\n  \n  app.get(\"/api/admin/dmto\", authMiddleware as any, adminMiddleware as any, async (req, res) => {\n    try {\n      const allDmto = await db.select()\n        .from(dmtoTable)\n        .orderBy(desc(dmtoTable.validFrom));\n      \n      res.json(allDmto);\n    } catch (error) {\n      console.error('Get all DMTO error:', error);\n      res.status(500).json({ error: \"Internal server error\" });\n    }\n  });\n  \n  app.post(\"/api/admin/dmto\", authMiddleware as any, adminMiddleware as any, async (req: AuthRequest, res) => {\n    try {\n      const dmtoSchema = z.object({\n        deptCode: z.string().length(2),\n        deptName: z.string(),\n        validFrom: z.string().regex(/^\\d{4}-\\d{2}-\\d{2}$/),\n        dmtoRate: z.number().min(0).max(10),\n        communeRate: z.number().min(0).max(10),\n        stateAddition: z.number().min(0).max(10),\n        totalTransfer: z.number().min(0).max(10),\n        notaryFeesBase: z.number().min(0).max(10),\n        notaryFixed: z.number().min(0),\n        version: z.string(),\n        sourceUrl: z.string().url()\n      });\n      \n      const validated = dmtoSchema.parse(req.body);\n      \n      const [newDmto] = await db.insert(dmtoTable)\n        .values({\n          deptCode: validated.deptCode,\n          deptName: validated.deptName,\n          dmtoRate: validated.dmtoRate.toString(),\n          communeRate: validated.communeRate.toString(),\n          stateAddition: validated.stateAddition.toString(),\n          totalTransfer: validated.totalTransfer.toString(),\n          notaryFeesBase: validated.notaryFeesBase.toString(),\n          notaryFixed: validated.notaryFixed.toString(),\n          version: validated.version,\n          validFrom: new Date(validated.validFrom),\n          validTo: null,\n          sourceUrl: validated.sourceUrl\n        })\n        .returning();\n      \n      // Audit log\n      await db.insert(auditLogs).values({\n        action: 'dmto_created',\n        userId: req.user!.id,\n        ipAddress: req.ip,\n        userAgent: req.get('user-agent'),\n        metadata: { deptCode: validated.deptCode }\n      });\n      \n      res.json(newDmto);\n    } catch (error) {\n      console.error('Create DMTO error:', error);\n      res.status(500).json({ error: \"Internal server error\" });\n    }\n  });\n  \n  app.get(\"/api/admin/audit/:simulationId\", authMiddleware as any, adminMiddleware as any, async (req, res) => {\n    try {\n      const { simulationId } = req.params;\n      \n      const logs = await db.select()\n        .from(auditLogs)\n        .where(eq(auditLogs.simulationId, simulationId))\n        .orderBy(desc(auditLogs.createdAt));\n      \n      res.json(logs);\n    } catch (error) {\n      console.error('Get audit logs error:', error);\n      res.status(500).json({ error: \"Internal server error\" });\n    }\n  });\n  \n  // Stripe payment routes\n  const { createSimulationPayment, createSubscription, handlePaymentSuccess, constructWebhookEvent } = await import('./stripe');\n  \n  app.post(\"/api/payments/create-intent\", authMiddleware as any, async (req: AuthRequest, res) => {\n    try {\n      const { simulationId } = req.body;\n      \n      if (!simulationId) {\n        return res.status(400).json({ error: \"Simulation ID required\" });\n      }\n      \n      const paymentIntent = await createSimulationPayment(simulationId, req.user!.id);\n      \n      res.json({ clientSecret: paymentIntent.client_secret });\n    } catch (error: any) {\n      console.error('Create payment intent error:', error);\n      res.status(500).json({ error: error.message || \"Internal server error\" });\n    }\n  });\n  \n  app.post(\"/api/payments/create-subscription\", authMiddleware as any, async (req: AuthRequest, res) => {\n    try {\n      const { priceId } = req.body;\n      \n      if (!priceId) {\n        return res.status(400).json({ error: \"Price ID required\" });\n      }\n      \n      const subscription = await createSubscription(req.user!.id, priceId);\n      \n      const latestInvoice = subscription.latest_invoice as any;\n      const paymentIntent = latestInvoice?.payment_intent;\n      \n      res.json({\n        subscriptionId: subscription.id,\n        clientSecret: paymentIntent?.client_secret,\n      });\n    } catch (error: any) {\n      console.error('Create subscription error:', error);\n      res.status(500).json({ error: error.message || \"Internal server error\" });\n    }\n  });\n  \n  // Stripe webhook endpoint (BEFORE json middleware, using raw body)\n  app.post(\"/api/webhooks/stripe\", async (req, res) => {\n    const signature = req.headers['stripe-signature'] as string;\n    \n    if (!signature) {\n      return res.status(400).json({ error: 'No signature' });\n    }\n    \n    try {\n      const event = constructWebhookEvent(req.body, signature);\n      \n      // Handle the event\n      switch (event.type) {\n        case 'payment_intent.succeeded':\n          await handlePaymentSuccess(event.data.object.id);\n          break;\n        \n        case 'payment_intent.payment_failed':\n          console.log('Payment failed:', event.data.object.id);\n          break;\n        \n        case 'customer.subscription.created':\n        case 'customer.subscription.updated':\n          console.log('Subscription event:', event.type, event.data.object.id);\n          break;\n        \n        default:\n          console.log(`Unhandled event type ${event.type}`);\n      }\n      \n      res.json({ received: true });\n    } catch (error: any) {\n      console.error('Webhook error:', error);\n      res.status(400).json({ error: error.message });\n    }\n  });\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}\n","size_bytes":24777},"client/src/lib/auth.tsx":{"content":"import { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { apiRequest } from '@/lib/queryClient';\n\ninterface User {\n  id: string;\n  email: string;\n  isAdmin: boolean;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  signup: (email: string, password: string) => Promise<void>;\n  logout: () => Promise<void>;\n  isAuthenticated: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function AuthProvider({ children }: { children: ReactNode }) {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is authenticated on mount\n    checkAuth();\n  }, []);\n\n  const checkAuth = async () => {\n    try {\n      const data = await apiRequest('/api/auth/me', 'GET');\n      setUser(data.user);\n    } catch (error) {\n      setUser(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (email: string, password: string) => {\n    const data = await apiRequest('/api/auth/login', 'POST', { email, password });\n    setUser(data.user);\n  };\n\n  const signup = async (email: string, password: string) => {\n    const data = await apiRequest('/api/auth/register', 'POST', { email, password });\n    setUser(data.user);\n  };\n\n  const logout = async () => {\n    await apiRequest('/api/auth/logout', 'POST');\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{\n      user,\n      loading,\n      login,\n      signup,\n      logout,\n      isAuthenticated: !!user,\n    }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n","size_bytes":1886},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n          await import(\"@replit/vite-plugin-dev-banner\").then((m) =>\n            m.devBanner(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":1080},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport cookieParser from \"cookie-parser\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\n\n// Trust proxy - required for rate limiting behind Replit/Vercel/Render proxy\napp.set('trust proxy', 1);\n\n// Stripe webhook needs raw body BEFORE json parsing\napp.post(\"/api/webhooks/stripe\", \n  express.raw({ type: 'application/json' }),\n  async (req, res, next) => {\n    // This will be handled in routes.ts\n    next();\n  }\n);\n\n// Then apply JSON middleware for all other routes\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\n\n// Security headers middleware\nconst { securityHeaders } = await import('./middleware/security');\napp.use(securityHeaders);\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"‚Ä¶\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  // Initialize Stripe\n  const { initializeStripe } = await import('./stripe');\n  initializeStripe();\n  \n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2744},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"shadcn-card rounded-xl border bg-card border-card-border text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n}\n","size_bytes":1904},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/components/RoleSelector.tsx":{"content":"import { Card } from \"@/components/ui/card\";\nimport { cn } from \"@/lib/utils\";\nimport { User, Users, Building } from \"lucide-react\";\n\ninterface RoleSelectorProps {\n  value: string;\n  onChange: (value: string) => void;\n}\n\nexport default function RoleSelector({ value, onChange }: RoleSelectorProps) {\n  const roles = [\n    { \n      id: \"pp\", \n      label: \"Personne Physique\", \n      icon: User,\n      description: \"Particulier vendant un bien immobilier\"\n    },\n    { \n      id: \"sci_ir\", \n      label: \"SCI IR\", \n      icon: Users,\n      description: \"SCI soumise √† l'imp√¥t sur le revenu\"\n    },\n    { \n      id: \"sci_is\", \n      label: \"SCI IS\", \n      icon: Building,\n      description: \"SCI soumise √† l'imp√¥t sur les soci√©t√©s\"\n    }\n  ];\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n      {roles.map((role) => {\n        const Icon = role.icon;\n        const isSelected = value === role.id;\n        \n        return (\n          <Card\n            key={role.id}\n            className={cn(\n              \"p-6 cursor-pointer transition-all hover-elevate active-elevate-2\",\n              isSelected && \"border-2 border-primary bg-primary/5\"\n            )}\n            onClick={() => onChange(role.id)}\n            data-testid={`card-role-${role.id}`}\n          >\n            <div className=\"flex flex-col gap-4\">\n              <div className={cn(\n                \"w-14 h-14 rounded-lg flex items-center justify-center\",\n                isSelected ? \"bg-primary text-primary-foreground\" : \"bg-muted text-muted-foreground\"\n              )}>\n                <Icon className=\"w-7 h-7\" />\n              </div>\n              <div>\n                <h3 className={cn(\n                  \"font-semibold mb-1\",\n                  isSelected ? \"text-foreground\" : \"text-muted-foreground\"\n                )}>\n                  {role.label}\n                </h3>\n                <p className=\"text-xs text-muted-foreground\">{role.description}</p>\n              </div>\n            </div>\n          </Card>\n        );\n      })}\n    </div>\n  );\n}\n","size_bytes":2059},"docs/pwa.md":{"content":"# PWA (Progressive Web App) - CalcuNotaire Pro\n\n## Vue d'Ensemble\n\nCalcuNotaire Pro est une Progressive Web App permettant :\n- ‚úÖ Installation sur mobile (iOS, Android)\n- ‚úÖ Fonctionnement offline (consultation simulations)\n- ‚úÖ Splash screen native\n- ‚úÖ Exp√©rience app-like\n\n## Manifest.json\n\n```json\n{\n  \"name\": \"CalcuNotaire Pro\",\n  \"short_name\": \"CalcuNotaire\",\n  \"description\": \"Calculateur de plus-value immobili√®re et frais de notaire (DMTO)\",\n  \"start_url\": \"/\",\n  \"display\": \"standalone\",\n  \"background_color\": \"#0a1628\",\n  \"theme_color\": \"#1e3a5f\",\n  \"orientation\": \"portrait-primary\",\n  \"icons\": [\n    {\n      \"src\": \"/icons/icon-72x72.png\",\n      \"sizes\": \"72x72\",\n      \"type\": \"image/png\",\n      \"purpose\": \"any maskable\"\n    },\n    {\n      \"src\": \"/icons/icon-192x192.png\",\n      \"sizes\": \"192x192\",\n      \"type\": \"image/png\",\n      \"purpose\": \"any maskable\"\n    },\n    {\n      \"src\": \"/icons/icon-512x512.png\",\n      \"sizes\": \"512x512\",\n      \"type\": \"image/png\",\n      \"purpose\": \"any maskable\"\n    }\n  ],\n  \"screenshots\": [\n    {\n      \"src\": \"/screenshots/home.png\",\n      \"sizes\": \"540x720\",\n      \"type\": \"image/png\",\n      \"form_factor\": \"narrow\"\n    },\n    {\n      \"src\": \"/screenshots/results.png\",\n      \"sizes\": \"1280x720\",\n      \"type\": \"image/png\",\n      \"form_factor\": \"wide\"\n    }\n  ],\n  \"categories\": [\"finance\", \"utilities\"],\n  \"lang\": \"fr-FR\"\n}\n```\n\n## Service Worker\n\n### Strat√©gie de Cache\n\n**Cache-First** : Assets statiques (JS, CSS, fonts)  \n**Network-First** : API calls (simulations, auth)  \n**Offline Fallback** : Page offline.html\n\n```typescript\n// public/sw.js\nconst CACHE_NAME = 'calcu-notaire-v1';\nconst STATIC_ASSETS = [\n  '/',\n  '/index.html',\n  '/offline.html',\n  '/styles.css',\n  '/bundle.js',\n  '/icons/icon-192x192.png'\n];\n\n// Install: cache static assets\nself.addEventListener('install', (event) => {\n  event.waitUntil(\n    caches.open(CACHE_NAME).then((cache) => {\n      return cache.addAll(STATIC_ASSETS);\n    })\n  );\n  self.skipWaiting();\n});\n\n// Activate: clean old caches\nself.addEventListener('activate', (event) => {\n  event.waitUntil(\n    caches.keys().then((cacheNames) => {\n      return Promise.all(\n        cacheNames\n          .filter((name) => name !== CACHE_NAME)\n          .map((name) => caches.delete(name))\n      );\n    })\n  );\n  self.clients.claim();\n});\n\n// Fetch: network-first for API, cache-first for assets\nself.addEventListener('fetch', (event) => {\n  const { request } = event;\n  const url = new URL(request.url);\n\n  // API calls: network-first with cache fallback\n  if (url.pathname.startsWith('/api/')) {\n    event.respondWith(\n      fetch(request)\n        .then((response) => {\n          // Cache successful GET requests\n          if (request.method === 'GET' && response.ok) {\n            const clone = response.clone();\n            caches.open(CACHE_NAME).then((cache) => {\n              cache.put(request, clone);\n            });\n          }\n          return response;\n        })\n        .catch(() => {\n          return caches.match(request);\n        })\n    );\n    return;\n  }\n\n  // Static assets: cache-first\n  event.respondWith(\n    caches.match(request).then((cached) => {\n      return cached || fetch(request);\n    })\n  );\n});\n```\n\n## Offline Experience\n\n### Page Offline\n\n```html\n<!-- public/offline.html -->\n<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Hors ligne - CalcuNotaire Pro</title>\n  <style>\n    body {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      min-height: 100vh;\n      background: #0a1628;\n      color: white;\n      font-family: sans-serif;\n      text-align: center;\n      padding: 20px;\n    }\n    .offline-icon {\n      font-size: 64px;\n      margin-bottom: 20px;\n    }\n  </style>\n</head>\n<body>\n  <div>\n    <div class=\"offline-icon\">üì°</div>\n    <h1>Vous √™tes hors ligne</h1>\n    <p>Reconnectez-vous pour acc√©der aux nouvelles simulations</p>\n    <p>Vos simulations r√©centes restent consultables</p>\n  </div>\n</body>\n</html>\n```\n\n### Fonctionnalit√©s Offline\n\n**Disponibles** :\n- ‚úÖ Consultation des simulations sauvegard√©es (24h cache)\n- ‚úÖ Interface utilisateur (HTML/CSS/JS)\n- ‚úÖ Calculateur local (si donn√©es en cache)\n\n**Indisponibles** :\n- ‚ùå Nouvelles simulations (requiert API)\n- ‚ùå Login/signup (requiert DB)\n- ‚ùå Paiements Stripe\n- ‚ùå DVF lookup\n\n## Installation\n\n### Android (Chrome, Edge, Samsung Internet)\n\n1. Ouvrir https://app.calcu-notaire.fr\n2. Banni√®re \"Ajouter √† l'√©cran d'accueil\" appara√Æt\n3. Ou : Menu ‚Üí Installer l'application\n4. Ic√¥ne ajout√©e √† l'√©cran d'accueil\n\n### iOS (Safari)\n\n1. Ouvrir https://app.calcu-notaire.fr dans Safari\n2. Bouton \"Partager\" ‚Üí \"Sur l'√©cran d'accueil\"\n3. Nom: CalcuNotaire Pro\n4. Ic√¥ne ajout√©e\n\n**Note** : iOS ne supporte pas pleinement les Service Workers (limitations Safari)\n\n### Desktop (Chrome, Edge)\n\n1. Ic√¥ne \"installer\" dans la barre d'adresse\n2. Ou : Menu ‚Üí Installer CalcuNotaire Pro\n3. Application standalone dans dock/barre des t√¢ches\n\n## Add-to-Home-Screen Prompt\n\n```typescript\n// client/src/lib/pwa.ts\nlet deferredPrompt: any;\n\nwindow.addEventListener('beforeinstallprompt', (e) => {\n  // Prevent default prompt\n  e.preventDefault();\n  \n  // Store event for later\n  deferredPrompt = e;\n  \n  // Show custom install button\n  const installButton = document.getElementById('install-pwa');\n  if (installButton) {\n    installButton.style.display = 'block';\n    \n    installButton.addEventListener('click', async () => {\n      if (!deferredPrompt) return;\n      \n      // Show install prompt\n      deferredPrompt.prompt();\n      \n      // Wait for user choice\n      const { outcome } = await deferredPrompt.userChoice;\n      console.log(`User ${outcome} the install prompt`);\n      \n      // Clear prompt\n      deferredPrompt = null;\n      installButton.style.display = 'none';\n    });\n  }\n});\n\n// Track install\nwindow.addEventListener('appinstalled', () => {\n  console.log('PWA installed');\n  // Analytics event\n  posthog.capture('pwa_installed');\n});\n```\n\n## iOS Splash Screens\n\n```html\n<!-- public/index.html -->\n<head>\n  <!-- iOS meta tags -->\n  <meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n  <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black-translucent\">\n  <meta name=\"apple-mobile-web-app-title\" content=\"CalcuNotaire\">\n  \n  <!-- iOS splash screens (diff√©rentes r√©solutions) -->\n  <link rel=\"apple-touch-startup-image\" \n        href=\"/splash/iphone5_splash.png\"\n        media=\"(device-width: 320px) and (device-height: 568px)\">\n  \n  <link rel=\"apple-touch-startup-image\" \n        href=\"/splash/iphone6_splash.png\"\n        media=\"(device-width: 375px) and (device-height: 667px)\">\n  \n  <link rel=\"apple-touch-startup-image\" \n        href=\"/splash/iphoneplus_splash.png\"\n        media=\"(device-width: 414px) and (device-height: 736px)\">\n  \n  <link rel=\"apple-touch-startup-image\" \n        href=\"/splash/iphonex_splash.png\"\n        media=\"(device-width: 375px) and (device-height: 812px)\">\n  \n  <link rel=\"apple-touch-startup-image\" \n        href=\"/splash/iphonexr_splash.png\"\n        media=\"(device-width: 414px) and (device-height: 896px)\">\n  \n  <link rel=\"apple-touch-startup-image\" \n        href=\"/splash/iphonexsmax_splash.png\"\n        media=\"(device-width: 414px) and (device-height: 896px)\">\n  \n  <link rel=\"apple-touch-startup-image\" \n        href=\"/splash/ipad_splash.png\"\n        media=\"(device-width: 768px) and (device-height: 1024px)\">\n  \n  <link rel=\"apple-touch-startup-image\" \n        href=\"/splash/ipadpro1_splash.png\"\n        media=\"(device-width: 834px) and (device-height: 1112px)\">\n  \n  <link rel=\"apple-touch-startup-image\" \n        href=\"/splash/ipadpro2_splash.png\"\n        media=\"(device-width: 1024px) and (device-height: 1366px)\">\n</head>\n```\n\n## Responsive Design\n\n### Breakpoints\n\n```css\n/* Mobile-first approach */\n:root {\n  --mobile: 640px;\n  --tablet: 768px;\n  --desktop: 1024px;\n  --wide: 1280px;\n}\n\n/* Base: Mobile (< 640px) */\n.wizard-step {\n  padding: 1rem;\n}\n\n/* Tablet */\n@media (min-width: 768px) {\n  .wizard-step {\n    padding: 2rem;\n  }\n}\n\n/* Desktop */\n@media (min-width: 1024px) {\n  .layout {\n    display: grid;\n    grid-template-columns: 2fr 1fr; /* Wizard + Results sticky */\n  }\n}\n```\n\n### Touch Targets\n\n- **Min 44x44px** (Apple HIG)\n- **Min 48x48px** (Material Design)\n- Espacement 8px entre boutons\n\n## Testing\n\n### Lighthouse PWA Audit\n\n```bash\n# Chrome DevTools ‚Üí Lighthouse ‚Üí PWA\n# Target: Score ‚â• 90\n\nnpx lighthouse https://app.calcu-notaire.fr --view\n```\n\n**Crit√®res** :\n- ‚úÖ HTTPS\n- ‚úÖ manifest.json valide\n- ‚úÖ Service Worker enregistr√©\n- ‚úÖ Offline fallback\n- ‚úÖ Installable\n- ‚úÖ Splash screen (iOS)\n- ‚úÖ Responsive (mobile/tablet/desktop)\n\n### Devices de Test\n\n| Device | OS | Browser | Priority |\n|--------|----|---------|---------\n| iPhone 12/13/14/15 | iOS 16+ | Safari | ‚≠ê‚≠ê‚≠ê |\n| Pixel 7/8/9 | Android 13+ | Chrome | ‚≠ê‚≠ê‚≠ê |\n| iPad Air/Pro | iPadOS 16+ | Safari | ‚≠ê‚≠ê |\n| Samsung Galaxy S21/S22 | Android 12+ | Chrome | ‚≠ê‚≠ê |\n| OnePlus 9/10 | Android 12+ | Chrome | ‚≠ê |\n\n### Test Checklist\n\n- [ ] Installation depuis navigateur (Android/iOS)\n- [ ] Ic√¥ne sur √©cran d'accueil\n- [ ] Splash screen au lancement\n- [ ] Mode standalone (pas de barre navigateur)\n- [ ] Offline : page offline.html affich√©e\n- [ ] Offline : simulations cach√©es consultables\n- [ ] Online : nouvelles simulations fonctionnent\n- [ ] Rotation portrait/paysage\n- [ ] Clavier virtuel ne cache pas inputs\n\n## Performance Budget\n\n| Metric | Target | Max |\n|--------|--------|-----|\n| **LCP** (Largest Contentful Paint) | < 2.5s | 4.0s |\n| **TTI** (Time to Interactive) | < 3.5s | 5.0s |\n| **CLS** (Cumulative Layout Shift) | < 0.1 | 0.25 |\n| **FID** (First Input Delay) | < 100ms | 300ms |\n| **Bundle size** (JS gzipped) | < 200KB | 300KB |\n\n### Optimisations\n\n1. **Code splitting**\n   ```typescript\n   // Lazy load pages\n   const Admin = lazy(() => import('./pages/Admin'));\n   ```\n\n2. **Image optimization**\n   ```html\n   <!-- Responsive images -->\n   <img srcset=\"logo-320w.png 320w, logo-640w.png 640w\"\n        sizes=\"(max-width: 640px) 100vw, 50vw\"\n        src=\"logo-640w.png\" />\n   ```\n\n3. **Preload critical assets**\n   ```html\n   <link rel=\"preload\" href=\"/fonts/inter.woff2\" as=\"font\" crossorigin>\n   ```\n\n4. **Cache headers**\n   ```typescript\n   // Vercel: vercel.json\n   {\n     \"headers\": [\n       {\n         \"source\": \"/(.*).js\",\n         \"headers\": [\n           {\n             \"key\": \"Cache-Control\",\n             \"value\": \"public, max-age=31536000, immutable\"\n           }\n         ]\n       }\n     ]\n   }\n   ```\n\n## Update Strategy\n\n### Version Update\n\n```typescript\n// Service worker version bump\nconst CACHE_NAME = 'calcu-notaire-v2'; // Increment version\n\n// Force update on new version\nself.addEventListener('activate', (event) => {\n  event.waitUntil(\n    caches.keys().then((names) => {\n      return Promise.all(\n        names.filter((name) => name !== CACHE_NAME)\n             .map((name) => caches.delete(name))\n      );\n    })\n  );\n});\n```\n\n### User Notification\n\n```typescript\n// Notify user of update\nnavigator.serviceWorker.addEventListener('controllerchange', () => {\n  // Show toast: \"Nouvelle version disponible. Recharger ?\"\n  showUpdateToast();\n});\n```\n\n## Analytics\n\n### PWA Events\n\n```typescript\n// Track PWA usage\nposthog.capture('pwa_installed', {\n  platform: 'android' // or 'ios', 'desktop'\n});\n\nposthog.capture('pwa_launched', {\n  display_mode: 'standalone', // or 'browser'\n  online: navigator.onLine\n});\n\nposthog.capture('offline_access', {\n  cached_simulations: 3\n});\n```\n\n## Troubleshooting\n\n### Service Worker ne s'enregistre pas\n\n```bash\n# Check console errors\n# Chrome DevTools ‚Üí Application ‚Üí Service Workers\n\n# Clear cache\n# Application ‚Üí Storage ‚Üí Clear site data\n\n# V√©rifier HTTPS (requis)\ncurl -I https://app.calcu-notaire.fr | grep -i strict-transport\n```\n\n### iOS ne propose pas \"Ajouter √† l'√©cran d'accueil\"\n\n- ‚úÖ V√©rifier manifest.json valide\n- ‚úÖ V√©rifier apple-touch-icon pr√©sent\n- ‚úÖ Tester dans Safari (pas Chrome iOS)\n- ‚ö†Ô∏è iOS ne montre pas de banni√®re automatique (manuel uniquement)\n\n### Offline ne fonctionne pas\n\n```bash\n# V√©rifier Service Worker actif\n# DevTools ‚Üí Application ‚Üí Service Workers ‚Üí Status: \"activated\"\n\n# Tester en mode avion\n# Network tab ‚Üí Offline checkbox\n\n# V√©rifier cache\n# Application ‚Üí Cache Storage ‚Üí calcu-notaire-v1\n```\n\n## Ressources\n\n- [PWA Builder](https://www.pwabuilder.com/) : G√©n√©rer assets\n- [Maskable.app](https://maskable.app/editor) : Tester ic√¥nes\n- [Web.dev PWA](https://web.dev/progressive-web-apps/) : Best practices\n- [iOS PWA Guide](https://developer.apple.com/design/human-interface-guidelines/ios/overview/themes/) : Sp√©cificit√©s iOS\n\n## Roadmap PWA\n\n- [x] manifest.json\n- [x] Service Worker basique\n- [x] Offline fallback\n- [x] iOS splash screens\n- [ ] Background sync (queue paiements offline)\n- [ ] Push notifications (r√©sultats simulation)\n- [ ] Share API (partager simulation)\n- [ ] Shortcuts API (quick actions)\n","size_bytes":13108},"server/auth.ts":{"content":"import { Request, Response, NextFunction } from 'express';\nimport jwt from 'jsonwebtoken';\nimport bcrypt from 'bcrypt';\nimport { db } from './db';\nimport { users } from '@shared/schema';\nimport { eq } from 'drizzle-orm';\n\nconst JWT_SECRET = process.env.SESSION_SECRET || 'your-secret-key-change-in-production';\n\nexport interface AuthRequest extends Request {\n  user?: {\n    id: string;\n    email: string;\n    isAdmin: boolean;\n  };\n}\n\nexport async function hashPassword(password: string): Promise<string> {\n  return bcrypt.hash(password, 10);\n}\n\nexport async function comparePassword(password: string, hash: string): Promise<boolean> {\n  return bcrypt.compare(password, hash);\n}\n\nexport function generateToken(userId: string, email: string, isAdmin: boolean): string {\n  return jwt.sign({ userId, email, isAdmin }, JWT_SECRET, { expiresIn: '7d' });\n}\n\nexport function verifyToken(token: string): any {\n  try {\n    return jwt.verify(token, JWT_SECRET);\n  } catch {\n    return null;\n  }\n}\n\nexport async function authMiddleware(\n  req: AuthRequest,\n  res: Response,\n  next: NextFunction\n): Promise<void> {\n  const token = req.cookies?.token || req.headers.authorization?.replace('Bearer ', '');\n  \n  if (!token) {\n    res.status(401).json({ error: 'Authentication required' });\n    return;\n  }\n  \n  const decoded = verifyToken(token);\n  \n  if (!decoded) {\n    res.status(401).json({ error: 'Invalid token' });\n    return;\n  }\n  \n  // Fetch user from database\n  const [user] = await db.select().from(users).where(eq(users.id, decoded.userId)).limit(1);\n  \n  if (!user) {\n    res.status(401).json({ error: 'User not found' });\n    return;\n  }\n  \n  req.user = {\n    id: user.id,\n    email: user.email,\n    isAdmin: user.isAdmin,\n  };\n  \n  next();\n}\n\nexport async function adminMiddleware(\n  req: AuthRequest,\n  res: Response,\n  next: NextFunction\n): Promise<void> {\n  if (!req.user?.isAdmin) {\n    res.status(403).json({ error: 'Admin access required' });\n    return;\n  }\n  \n  next();\n}\n","size_bytes":1981},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"shared/calc-core.ts":{"content":"/**\n * CalcuNotaire Pro - Calculation Engine\n * Pure functions for French real estate capital gains and tax calculations\n * Following BOFiP, DGFiP, and Service-Public official formulas\n */\n\nexport interface CapitalGainInput {\n  // Donn√©es g√©n√©rales (NOUVEAU)\n  address?: string;\n  inseeCode?: string;\n  deptCode?: string;\n  propertyType?: 'appartement' | 'maison' | 'terrain' | 'immeuble' | 'local_commercial' | 'autre';\n  \n  // Surfaces & DPE (NOUVEAU)\n  surfaceHabitable?: number;\n  surfaceAnnexes?: number;\n  dpeLabel?: 'A' | 'B' | 'C' | 'D' | 'E' | 'F' | 'G';\n\n  // Essential\n  role: 'pp' | 'sci_ir' | 'sci_is';\n  occupation: 'rp' | 'rs' | 'first_sale_reinvestment';\n  salePrice: number;\n  purchasePrice: number;\n  purchaseDate: string; // ISO date\n  saleDate: string; // ISO date\n\n  // Acquisition\n  acquisitionFeesType: 'flat' | 'actual';\n  acquisitionFeesAmount?: number; // if actual\n  worksType: 'flat' | 'actual' | 'none';\n  worksAmount?: number; // if actual\n  otherAcquisitionCosts: number;\n\n  // Frais de cession & pr√™t (zone activable - NOUVEAU)\n  feesAndLoanEnabled?: boolean;\n  crd?: number; // Capital restant d√ª\n  iraMode?: 'pct' | '6months'; // M√©thode IRA\n  iraPct?: number; // % p√©nalit√©s\n  annualInterestRate?: number; // Taux annuel pour 6 mois\n  releaseFeeCost?: number; // mainlev√©e\n  agencyFees?: number;\n  diagnosticsCosts?: number;\n  propertyTaxProration?: number;\n  otherCessionCosts?: number;\n\n  // SCI IS specific\n  vnc?: number; // Valeur nette comptable\n  cessionFeesDeductible?: number;\n  distributedDividends?: number;\n  pmeSmeThreshold?: number; // Default 42500\n\n  // Exemption checks\n  wasNonOwnerFor4Years?: boolean;\n  willReinvestIn24Months?: boolean;\n}\n\n/**\n * Arrondir √† 2 d√©cimales (arrondi commercial)\n */\nexport function round2(value: number): number {\n  return Math.round(value * 100) / 100;\n}\n\n/**\n * Payload enrichi structur√© selon le prompt (section 2.B)\n */\nexport interface EnrichedResult {\n  general: {\n    address?: string;\n    insee?: string;\n    dept?: string;\n    propertyType?: string;\n    purchase: { price: number; date: string };\n    sale: { price: number; date: string };\n    surfaces?: { habitable?: number; annexes?: number; dpe?: string };\n  };\n  acquisitionBreakdown: {\n    purchasePrice: number;\n    acqFees: { method: string; percent: number; amount: number };\n    works: { method: string; percent: number; amount: number; eligible: boolean };\n    other: number;\n    basisTotal: number;\n  };\n  plusValue: {\n    pvBrute: number;\n    holding: { years: number; months: number };\n  };\n  abatements: {\n    ir: { rate: number; amount: number };\n    ps: { rate: number; amount: number };\n  };\n  taxes: {\n    ir: { base: number; amount: number; rate: number };\n    ps: { base: number; amount: number; rate: number };\n    surtaxe: { amount: number; applied: boolean; tranche: string | null };\n    total: number;\n  };\n  feesAndLoan: {\n    enabled: boolean;\n    crd: number;\n    ira: { mode: string; amount: number; selected: string };\n    mainlevee: number;\n    agency: number;\n    diagnostics: number;\n    prorataTf: number;\n    misc: number;\n    total: number;\n  };\n  nets: {\n    priceNetVendeur: number; // Prix vente - frais vente\n    netBeforeLoan: number; // Prix - imp√¥ts (sans frais pr√™t)\n    netFinal: number; // Prix - imp√¥ts - tous frais pr√™t\n  };\n  references: {\n    bofip: { url: string; date: string };\n    servicePublic: { url: string; date: string };\n    impotsGouv: { url: string; date: string };\n    dmto: { dept: string; version: string; sourceUrl: string };\n    dvf: { available: boolean; count: number };\n  };\n  meta: {\n    tz: string;\n    generatedAtLocal: string;\n    generatedAtUTC: string;\n    rounding: string;\n  };\n}\n\n// ANCIEN FORMAT (√† garder pour compatibilit√© temporaire)\nexport interface CapitalGainResult {\n  // Acquisition base\n  acquisitionBase: number;\n  acquisitionFeesUsed: number;\n  worksUsed: number;\n\n  // Capital gain\n  grossCapitalGain: number;\n  holdingYears: number;\n\n  // Tax allowances (PP/SCI IR)\n  irAllowancePercent: number;\n  psAllowancePercent: number;\n  irTaxableBase: number;\n  psTaxableBase: number;\n\n  // Taxes\n  irTax: number; // 19%\n  psTax: number; // 17.2%\n  surcharge: number;\n  surchangeTranche?: string;\n\n  // SCI IS\n  sciIsResult?: number;\n  sciIsTax?: number;\n  sciPfuTax?: number;\n\n  // Exemptions\n  isRpExempt: boolean;\n  isFirstSaleExempt: boolean;\n  exemptionReasons: string[];\n\n  // IRA\n  ira: number;\n\n  // Net proceeds\n  totalTax: number;\n  netProceeds: number;\n\n  // Metadata\n  calculationDate: string;\n}\n\n/**\n * Calculate years of ownership (full years only)\n */\nexport function calculateHoldingYears(purchaseDate: string, saleDate: string): number {\n  const purchase = new Date(purchaseDate);\n  const sale = new Date(saleDate);\n  \n  const years = sale.getFullYear() - purchase.getFullYear();\n  const monthDiff = sale.getMonth() - purchase.getMonth();\n  const dayDiff = sale.getDate() - purchase.getDate();\n  \n  // Only count full years\n  if (monthDiff < 0 || (monthDiff === 0 && dayDiff < 0)) {\n    return Math.max(0, years - 1);\n  }\n  \n  return Math.max(0, years);\n}\n\n/**\n * Calculate holding period in years AND months (for display)\n * Returns { years, months }\n */\nexport function calculateHoldingPeriod(purchaseDate: string, saleDate: string): { years: number; months: number } {\n  const purchase = new Date(purchaseDate);\n  const sale = new Date(saleDate);\n  \n  let years = sale.getFullYear() - purchase.getFullYear();\n  let months = sale.getMonth() - purchase.getMonth();\n  \n  if (months < 0) {\n    years--;\n    months += 12;\n  }\n  \n  // Adjust for day of month\n  if (sale.getDate() < purchase.getDate()) {\n    months--;\n    if (months < 0) {\n      years--;\n      months += 12;\n    }\n  }\n  \n  return { years: Math.max(0, years), months: Math.max(0, months) };\n}\n\n/**\n * Calculate IRA (Indemnit√© de Remboursement Anticip√©)\n * Deux m√©thodes : % ou 6 mois d'int√©r√™ts, on prend le min\n */\nexport function calculateIRA(input: {\n  crd: number;\n  iraMode?: 'pct' | '6months';\n  iraPct?: number;\n  annualInterestRate?: number;\n}): { amount: number; mode: string; selected: 'min' | 'pct' | '6months' } {\n  const { crd, iraMode, iraPct, annualInterestRate } = input;\n  \n  if (!iraMode || crd <= 0) {\n    return { amount: 0, mode: 'none', selected: 'min' };\n  }\n  \n  // M√©thode %\n  const iraPctAmount = iraMode === 'pct' && iraPct ? (crd * iraPct) / 100 : 0;\n  \n  // M√©thode 6 mois d'int√©r√™ts\n  const ira6MonthsAmount = iraMode === '6months' && annualInterestRate \n    ? (crd * annualInterestRate / 100 * 6) / 12 \n    : 0;\n  \n  // S√©lectionner le minimum (r√®gle bancaire)\n  if (iraMode === 'pct') {\n    return { amount: iraPctAmount, mode: `${iraPct}%`, selected: 'pct' };\n  } else if (iraMode === '6months') {\n    return { amount: ira6MonthsAmount, mode: '6 mois int√©r√™ts', selected: '6months' };\n  }\n  \n  // Par d√©faut, prendre le min des deux\n  const minAmount = Math.min(iraPctAmount, ira6MonthsAmount);\n  const selected = minAmount === iraPctAmount ? 'pct' : '6months';\n  return { amount: minAmount, mode: 'min', selected };\n}\n\n/**\n * Calculate IR tax allowance based on holding period\n * Exempt at 22 years\n */\nexport function calculateIRAllowance(years: number): number {\n  if (years >= 22) return 100;\n  if (years < 6) return 0;\n  \n  // 6% per year from 6 to 21 years\n  if (years >= 6 && years <= 21) {\n    return 6 * (years - 5);\n  }\n  \n  return 0;\n}\n\n/**\n * Calculate PS (social charges) allowance based on holding period\n * Exempt at 30 years\n */\nexport function calculatePSAllowance(years: number): number {\n  if (years >= 30) return 100;\n  if (years < 6) return 0;\n  \n  // 1.65% per year from 6 to 21 years\n  if (years >= 6 && years <= 21) {\n    return 1.65 * (years - 5);\n  }\n  \n  // 1.60% for year 22\n  if (years === 22) {\n    return 1.65 * 16 + 1.60;\n  }\n  \n  // 9% per year from 23 to 30 years\n  if (years >= 23 && years <= 30) {\n    const base22 = 1.65 * 16 + 1.60;\n    return base22 + 9 * (years - 22);\n  }\n  \n  return 0;\n}\n\n/**\n * Calculate BOFiP surcharge with exact tranches and decay formulas\n * Annexe A implementation\n */\nexport function calculateSurcharge(pvNetteTaxable: number): { amount: number; tranche: string } {\n  if (pvNetteTaxable <= 50000) {\n    return { amount: 0, tranche: 'Aucune' };\n  }\n  \n  // Tranche 50,001 - 60,000: 2% - decay\n  if (pvNetteTaxable >= 50001 && pvNetteTaxable <= 60000) {\n    const decay = (60000 - pvNetteTaxable) * (1 / 20);\n    const amount = 0.02 * pvNetteTaxable - decay;\n    return { amount: Math.max(0, amount), tranche: '50k-60k (2% avec d√©cote)' };\n  }\n  \n  // Tranche 60,001 - 100,000: 2%\n  if (pvNetteTaxable >= 60001 && pvNetteTaxable <= 100000) {\n    return { amount: 0.02 * pvNetteTaxable, tranche: '60k-100k (2%)' };\n  }\n  \n  // Tranche 100,001 - 110,000: 3% - decay\n  if (pvNetteTaxable >= 100001 && pvNetteTaxable <= 110000) {\n    const decay = (110000 - pvNetteTaxable) * (1 / 10);\n    const amount = 0.03 * pvNetteTaxable - decay;\n    return { amount: Math.max(0, amount), tranche: '100k-110k (3% avec d√©cote)' };\n  }\n  \n  // Tranche 110,001 - 150,000: 3%\n  if (pvNetteTaxable >= 110001 && pvNetteTaxable <= 150000) {\n    return { amount: 0.03 * pvNetteTaxable, tranche: '110k-150k (3%)' };\n  }\n  \n  // Tranche 150,001 - 160,000: 4% - decay\n  if (pvNetteTaxable >= 150001 && pvNetteTaxable <= 160000) {\n    const decay = (160000 - pvNetteTaxable) * (15 / 100);\n    const amount = 0.04 * pvNetteTaxable - decay;\n    return { amount: Math.max(0, amount), tranche: '150k-160k (4% avec d√©cote)' };\n  }\n  \n  // Tranche 160,001 - 200,000: 4%\n  if (pvNetteTaxable >= 160001 && pvNetteTaxable <= 200000) {\n    return { amount: 0.04 * pvNetteTaxable, tranche: '160k-200k (4%)' };\n  }\n  \n  // Tranche 200,001 - 210,000: 5% - decay\n  if (pvNetteTaxable >= 200001 && pvNetteTaxable <= 210000) {\n    const decay = (210000 - pvNetteTaxable) * (20 / 100);\n    const amount = 0.05 * pvNetteTaxable - decay;\n    return { amount: Math.max(0, amount), tranche: '200k-210k (5% avec d√©cote)' };\n  }\n  \n  // Tranche 210,001 - 250,000: 5%\n  if (pvNetteTaxable >= 210001 && pvNetteTaxable <= 250000) {\n    return { amount: 0.05 * pvNetteTaxable, tranche: '210k-250k (5%)' };\n  }\n  \n  // Tranche 250,001 - 260,000: 6% - decay\n  if (pvNetteTaxable >= 250001 && pvNetteTaxable <= 260000) {\n    const decay = (260000 - pvNetteTaxable) * (25 / 100);\n    const amount = 0.06 * pvNetteTaxable - decay;\n    return { amount: Math.max(0, amount), tranche: '250k-260k (6% avec d√©cote)' };\n  }\n  \n  // > 260,000: 6%\n  if (pvNetteTaxable > 260000) {\n    return { amount: 0.06 * pvNetteTaxable, tranche: '>260k (6%)' };\n  }\n  \n  return { amount: 0, tranche: 'Aucune' };\n}\n\n// Ancienne fonction calculateIRA supprim√©e - remplac√©e par la nouvelle version avec iraMode ci-dessus\n\n/**\n * Main calculation function\n */\nexport function calculateCapitalGain(input: CapitalGainInput): CapitalGainResult {\n  // Calculate acquisition base\n  let acquisitionFeesUsed = 0;\n  if (input.acquisitionFeesType === 'flat') {\n    acquisitionFeesUsed = input.purchasePrice * 0.075;\n  } else if (input.acquisitionFeesAmount !== undefined) {\n    acquisitionFeesUsed = input.acquisitionFeesAmount;\n  }\n  \n  const holdingYears = calculateHoldingYears(input.purchaseDate, input.saleDate);\n  \n  let worksUsed = 0;\n  if (input.worksType === 'flat' && holdingYears >= 5) {\n    worksUsed = input.purchasePrice * 0.15;\n  } else if (input.worksAmount !== undefined) {\n    worksUsed = input.worksAmount;\n  }\n  \n  const acquisitionBase = \n    input.purchasePrice + \n    acquisitionFeesUsed + \n    worksUsed + \n    input.otherAcquisitionCosts;\n  \n  const grossCapitalGain = input.salePrice - acquisitionBase;\n  \n  // Check exemptions\n  const isRpExempt = input.occupation === 'rp';\n  const isFirstSaleExempt = \n    input.occupation === 'first_sale_reinvestment' &&\n    input.wasNonOwnerFor4Years === true &&\n    input.willReinvestIn24Months === true;\n  \n  const exemptionReasons: string[] = [];\n  if (isRpExempt) {\n    exemptionReasons.push('R√©sidence principale');\n  }\n  if (isFirstSaleExempt) {\n    exemptionReasons.push('1√®re vente avec r√©emploi sous 24 mois');\n  }\n  \n  // If exempt, no tax\n  if (isRpExempt || isFirstSaleExempt) {\n    const iraCalc = calculateIRA({\n      crd: input.crd || 0,\n      iraMode: input.iraMode,\n      iraPct: input.iraPct,\n      annualInterestRate: input.annualInterestRate\n    });\n    const ira = iraCalc.amount;\n    const netProceeds = input.salePrice - (input.crd || 0) - ira - (input.releaseFeeCost || 0) -\n      (input.agencyFees || 0) - (input.diagnosticsCosts || 0) - (input.propertyTaxProration || 0) - (input.otherCessionCosts || 0);\n    \n    return {\n      acquisitionBase,\n      acquisitionFeesUsed,\n      worksUsed,\n      grossCapitalGain,\n      holdingYears,\n      irAllowancePercent: 100,\n      psAllowancePercent: 100,\n      irTaxableBase: 0,\n      psTaxableBase: 0,\n      irTax: 0,\n      psTax: 0,\n      surcharge: 0,\n      isRpExempt,\n      isFirstSaleExempt,\n      exemptionReasons,\n      ira,\n      totalTax: 0,\n      netProceeds,\n      calculationDate: new Date().toISOString()\n    };\n  }\n  \n  // PP / SCI IR calculation\n  if (input.role === 'pp' || input.role === 'sci_ir') {\n    const irAllowancePercent = calculateIRAllowance(holdingYears);\n    const psAllowancePercent = calculatePSAllowance(holdingYears);\n    \n    const irTaxableBase = grossCapitalGain * (1 - irAllowancePercent / 100);\n    const psTaxableBase = grossCapitalGain * (1 - psAllowancePercent / 100);\n    \n    const irTax = irTaxableBase * 0.19;\n    const psTax = psTaxableBase * 0.172;\n    \n    const surchargeCalc = calculateSurcharge(irTaxableBase);\n    \n    const totalTax = irTax + psTax + surchargeCalc.amount;\n    const iraCalc = calculateIRA({\n      crd: input.crd || 0,\n      iraMode: input.iraMode,\n      iraPct: input.iraPct,\n      annualInterestRate: input.annualInterestRate\n    });\n    const ira = iraCalc.amount;\n    \n    const netProceeds = input.salePrice - totalTax - (input.crd || 0) - ira - (input.releaseFeeCost || 0) -\n      (input.agencyFees || 0) - (input.diagnosticsCosts || 0) - (input.propertyTaxProration || 0) - (input.otherCessionCosts || 0);\n    \n    return {\n      acquisitionBase,\n      acquisitionFeesUsed,\n      worksUsed,\n      grossCapitalGain,\n      holdingYears,\n      irAllowancePercent,\n      psAllowancePercent,\n      irTaxableBase,\n      psTaxableBase,\n      irTax,\n      psTax,\n      surcharge: surchargeCalc.amount,\n      surchangeTranche: surchargeCalc.tranche,\n      isRpExempt: false,\n      isFirstSaleExempt: false,\n      exemptionReasons: [],\n      ira,\n      totalTax,\n      netProceeds,\n      calculationDate: new Date().toISOString()\n    };\n  }\n  \n  // SCI IS calculation\n  if (input.role === 'sci_is') {\n    const vnc = input.vnc || 0;\n    const cessionFees = input.cessionFeesDeductible || 0;\n    const sciIsResult = input.salePrice - (vnc + cessionFees);\n    \n    const pmeThreshold = input.pmeSmeThreshold || 42500;\n    let sciIsTax = 0;\n    \n    if (sciIsResult <= pmeThreshold) {\n      sciIsTax = sciIsResult * 0.15;\n    } else {\n      sciIsTax = pmeThreshold * 0.15 + (sciIsResult - pmeThreshold) * 0.25;\n    }\n    \n    const distributedDividends = input.distributedDividends || 0;\n    const sciPfuTax = distributedDividends * 0.30;\n    \n    const totalTax = sciIsTax + sciPfuTax;\n    const iraCalc = calculateIRA({\n      crd: input.crd || 0,\n      iraMode: input.iraMode,\n      iraPct: input.iraPct,\n      annualInterestRate: input.annualInterestRate\n    });\n    const ira = iraCalc.amount;\n    \n    const netProceeds = input.salePrice - totalTax - (input.crd || 0) - ira - (input.releaseFeeCost || 0) -\n      (input.agencyFees || 0) - (input.diagnosticsCosts || 0) - (input.propertyTaxProration || 0) - (input.otherCessionCosts || 0);\n    \n    return {\n      acquisitionBase,\n      acquisitionFeesUsed,\n      worksUsed,\n      grossCapitalGain,\n      holdingYears,\n      irAllowancePercent: 0,\n      psAllowancePercent: 0,\n      irTaxableBase: 0,\n      psTaxableBase: 0,\n      irTax: 0,\n      psTax: 0,\n      surcharge: 0,\n      sciIsResult,\n      sciIsTax,\n      sciPfuTax,\n      isRpExempt: false,\n      isFirstSaleExempt: false,\n      exemptionReasons: [],\n      ira,\n      totalTax,\n      netProceeds,\n      calculationDate: new Date().toISOString()\n    };\n  }\n  \n  // Fallback (should not reach here)\n  throw new Error('Invalid role specified');\n}\n\n/**\n * Build enriched result payload with all sections\n * Appelle calculateCapitalGain et r√©organise tout en format enrichi\n */\nexport function buildEnrichedResult(input: CapitalGainInput): EnrichedResult {\n  // Appeler le calcul de base\n  const baseResult = calculateCapitalGain(input);\n  \n  // Calculer p√©riode de d√©tention avec mois\n  const holding = calculateHoldingPeriod(input.purchaseDate, input.saleDate);\n  \n  // Calcul frais de cession totaux\n  const feesAndLoanEnabled = input.feesAndLoanEnabled || false;\n  const crd = input.crd || 0;\n  const iraCalc = calculateIRA({\n    crd,\n    iraMode: input.iraMode,\n    iraPct: input.iraPct,\n    annualInterestRate: input.annualInterestRate\n  });\n  const mainlevee = input.releaseFeeCost || 0;\n  const agency = input.agencyFees || 0;\n  const diagnostics = input.diagnosticsCosts || 0;\n  const prorataTf = input.propertyTaxProration || 0;\n  const misc = input.otherCessionCosts || 0;\n  const feesTotal = crd + iraCalc.amount + mainlevee + agency + diagnostics + prorataTf + misc;\n  \n  // Nets\n  // Prix net vendeur = Prix vente - honoraires agence\n  const priceNetVendeur = input.salePrice - agency;\n  \n  // Net en poche (avant pr√™t) = Prix - imp√¥ts - frais cession NON-PR√äT (agence, diagnostics, prorata TF, divers)\n  const nonLoanFees = agency + diagnostics + prorataTf + misc;\n  const netBeforeLoan = input.salePrice - baseResult.totalTax - nonLoanFees;\n  \n  // Net final = Prix - imp√¥ts - TOUS frais (y compris CRD + IRA + mainlev√©e)\n  const netFinal = input.salePrice - baseResult.totalTax - feesTotal;\n  \n  // Calcul % frais acquisition\n  const acqFeePct = input.acquisitionFeesType === 'flat' ? 7.5 : \n    (baseResult.acquisitionFeesUsed / input.purchasePrice) * 100;\n  \n  // Calcul % travaux\n  const worksPct = input.worksType === 'flat' ? 15 : \n    (baseResult.worksUsed / input.purchasePrice) * 100;\n  const worksEligible = baseResult.holdingYears >= 5 || input.worksType === 'actual';\n  \n  // Abatements\n  const irAbatementAmount = round2(baseResult.grossCapitalGain * (baseResult.irAllowancePercent / 100));\n  const psAbatementAmount = round2(baseResult.grossCapitalGain * (baseResult.psAllowancePercent / 100));\n  \n  return {\n    general: {\n      address: input.address,\n      insee: input.inseeCode,\n      dept: input.deptCode,\n      propertyType: input.propertyType,\n      purchase: { price: input.purchasePrice, date: input.purchaseDate },\n      sale: { price: input.salePrice, date: input.saleDate },\n      surfaces: {\n        habitable: input.surfaceHabitable,\n        annexes: input.surfaceAnnexes,\n        dpe: input.dpeLabel\n      }\n    },\n    acquisitionBreakdown: {\n      purchasePrice: input.purchasePrice,\n      acqFees: {\n        method: input.acquisitionFeesType === 'flat' ? 'Forfait 7,5%' : 'R√©el',\n        percent: round2(acqFeePct),\n        amount: round2(baseResult.acquisitionFeesUsed)\n      },\n      works: {\n        method: input.worksType === 'flat' ? 'Forfait 15%' : input.worksType === 'actual' ? 'R√©el' : 'Aucun',\n        percent: round2(worksPct),\n        amount: round2(baseResult.worksUsed),\n        eligible: worksEligible\n      },\n      other: round2(input.otherAcquisitionCosts),\n      basisTotal: round2(baseResult.acquisitionBase)\n    },\n    plusValue: {\n      pvBrute: round2(baseResult.grossCapitalGain),\n      holding: { years: holding.years, months: holding.months }\n    },\n    abatements: {\n      ir: {\n        rate: round2(baseResult.irAllowancePercent),\n        amount: irAbatementAmount\n      },\n      ps: {\n        rate: round2(baseResult.psAllowancePercent),\n        amount: psAbatementAmount\n      }\n    },\n    taxes: {\n      ir: {\n        base: round2(baseResult.irTaxableBase),\n        amount: round2(baseResult.irTax),\n        rate: 19\n      },\n      ps: {\n        base: round2(baseResult.psTaxableBase),\n        amount: round2(baseResult.psTax),\n        rate: 17.2\n      },\n      surtaxe: {\n        amount: round2(baseResult.surcharge),\n        applied: baseResult.surcharge > 0,\n        tranche: baseResult.surchangeTranche || null\n      },\n      total: round2(baseResult.totalTax)\n    },\n    feesAndLoan: {\n      enabled: feesAndLoanEnabled,\n      crd: round2(crd),\n      ira: {\n        mode: iraCalc.mode,\n        amount: round2(iraCalc.amount),\n        selected: iraCalc.selected\n      },\n      mainlevee: round2(mainlevee),\n      agency: round2(agency),\n      diagnostics: round2(diagnostics),\n      prorataTf: round2(prorataTf),\n      misc: round2(misc),\n      total: round2(feesTotal)\n    },\n    nets: {\n      priceNetVendeur: round2(priceNetVendeur),\n      netBeforeLoan: round2(netBeforeLoan),\n      netFinal: round2(netFinal)\n    },\n    references: {\n      bofip: {\n        url: 'https://bofip.impots.gouv.fr/bofip/3601-PGP',\n        date: '2024'\n      },\n      servicePublic: {\n        url: 'https://www.service-public.fr/particuliers/vosdroits/F10864',\n        date: '2024'\n      },\n      impotsGouv: {\n        url: 'https://www.impots.gouv.fr/particulier/plus-value-immobiliere',\n        date: '2024'\n      },\n      dmto: {\n        dept: input.deptCode || 'N/A',\n        version: '2024',\n        sourceUrl: 'https://www.impots.gouv.fr'\n      },\n      dvf: {\n        available: false, // TODO: impl√©menter DVF dans la prochaine t√¢che\n        count: 0\n      }\n    },\n    meta: {\n      tz: 'Europe/Paris',\n      generatedAtLocal: new Date().toLocaleString('fr-FR', { timeZone: 'Europe/Paris' }),\n      generatedAtUTC: new Date().toISOString(),\n      rounding: 'Arrondi commercial √† 2 d√©cimales'\n    }\n  };\n}\n","size_bytes":21955},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"public/service-worker.js":{"content":"// CalcuNotaire Pro - Service Worker pour PWA\n// Cache strategy: Network First avec fallback cache pour offline\nconst CACHE_NAME = 'calcunotaire-v1';\nconst OFFLINE_URL = '/offline.html';\n\nconst STATIC_ASSETS = [\n  '/',\n  '/offline.html',\n  '/manifest.json',\n  '/cgu',\n  '/privacy',\n  '/cookies'\n];\n\n// Installation du service worker\nself.addEventListener('install', (event) => {\n  event.waitUntil(\n    caches.open(CACHE_NAME).then((cache) => {\n      console.log('[SW] Caching static assets');\n      return cache.addAll(STATIC_ASSETS);\n    })\n  );\n  self.skipWaiting();\n});\n\n// Activation et nettoyage des anciens caches\nself.addEventListener('activate', (event) => {\n  event.waitUntil(\n    caches.keys().then((cacheNames) => {\n      return Promise.all(\n        cacheNames.map((cacheName) => {\n          if (cacheName !== CACHE_NAME) {\n            console.log('[SW] Deleting old cache:', cacheName);\n            return caches.delete(cacheName);\n          }\n        })\n      );\n    })\n  );\n  self.clients.claim();\n});\n\n// Strat√©gie de cache: Network First\nself.addEventListener('fetch', (event) => {\n  // Skip non-GET requests\n  if (event.request.method !== 'GET') {\n    return;\n  }\n\n  // Skip API calls (always fresh)\n  if (event.request.url.includes('/api/')) {\n    return;\n  }\n\n  // Skip Stripe requests\n  if (event.request.url.includes('stripe.com')) {\n    return;\n  }\n\n  event.respondWith(\n    fetch(event.request)\n      .then((response) => {\n        // Clone response to cache it\n        const responseToCache = response.clone();\n        \n        caches.open(CACHE_NAME).then((cache) => {\n          cache.put(event.request, responseToCache);\n        });\n\n        return response;\n      })\n      .catch(() => {\n        // Network failed, try cache\n        return caches.match(event.request).then((cachedResponse) => {\n          if (cachedResponse) {\n            return cachedResponse;\n          }\n\n          // If no cache, show offline page for navigation requests\n          if (event.request.mode === 'navigate') {\n            return caches.match(OFFLINE_URL);\n          }\n        });\n      })\n  );\n});\n","size_bytes":2109}},"version":2}